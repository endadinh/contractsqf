{
	"id": "298e24759014b8a58b8546117e81e0d4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTContract2/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1967Proxy.sol\";\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n * clashing], which can potentially be used in an attack, this contract uses the\n * https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n * things that go hand in hand:\n *\n * 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n * that call matches one of the admin functions exposed by the proxy itself.\n * 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n * implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n * \"admin cannot fallback to proxy target\".\n *\n * These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n * the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n * to sudden errors when trying to call a function from the proxy implementation.\n *\n * Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n * you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n     * optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\n     */\n    constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {\n        assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\n        _changeAdmin(admin_);\n    }\n\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function admin() external ifAdmin returns (address admin_) {\n        admin_ = _getAdmin();\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function implementation() external ifAdmin returns (address implementation_) {\n        implementation_ = _implementation();\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\n     */\n    function changeAdmin(address newAdmin) external virtual ifAdmin {\n        _changeAdmin(newAdmin);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\n     */\n    function upgradeTo(address newImplementation) external ifAdmin {\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     *\n     * NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\n     */\n    function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {\n        _upgradeToAndCall(newImplementation, data, true);\n    }\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}.\n     */\n    function _beforeFallback() internal virtual override {\n        require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\");\n        super._beforeFallback();\n    }\n}"
			},
			"contracts/NFTContract2/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./Proxy.sol\";\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\n     */\n    constructor(address _logic, bytes memory _data) payable {\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1));\n        _upgradeToAndCall(_logic, _data, false);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}"
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\nimport \"./IBeacon.sol\";\nimport \"./Address.sol\";\nimport \"./StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {\n        address oldImplementation = _getImplementation();\n\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n\n        // Perform rollback test if not already in progress\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT);\n        if (!rollbackTesting.value) {\n            // Trigger rollback using upgradeTo from the new implementation\n            rollbackTesting.value = true;\n            Address.functionDelegateCall(\n                newImplementation,\n                abi.encodeWithSignature(\n                    \"upgradeTo(address)\",\n                    oldImplementation\n                )\n            );\n            rollbackTesting.value = false;\n            // Check rollback was effective\n            require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\");\n            // Finally reset to the new implementation and log the upgrade\n            _setImplementation(newImplementation);\n            emit Upgraded(newImplementation);\n        }\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(\n            Address.isContract(newBeacon),\n            \"ERC1967: new beacon is not a contract\"\n        );\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n}"
			},
			"contracts/NFTContract2/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 { revert(0, returndatasize()) }\n            default { return(0, returndatasize()) }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internall call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback () external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive () external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overriden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {\n    }\n}"
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}"
			},
			"contracts/NFTContract2/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTContract2/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a8362066b65fc11b1e1cea19f72e6adc3e76bd80778a1a9c95db5abfb5daa7e664736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8362066b65fc11b1e1cea19f72e6adc3e76bd80778a1a9c95db5abfb5daa7e664736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 CALLDATASIZE KECCAK256 PUSH7 0xB65FC11B1E1CEA NOT 0xF7 0x2E PUSH11 0xDC3E76BD80778A1A9C95DB GAS 0xBF 0xB5 0xDA 0xA7 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "126:7684:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7684:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a8362066b65fc11b1e1cea19f72e6adc3e76bd80778a1a9c95db5abfb5daa7e664736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 CALLDATASIZE KECCAK256 PUSH7 0xB65FC11B1E1CEA NOT 0xF7 0x2E PUSH11 0xDC3E76BD80778A1A9C95DB GAS 0xBF 0xB5 0xDA 0xA7 0xE6 PUSH5 0x736F6C6343 STOP ADDMOD 0xD STOP CALLER ",
							"sourceMap": "126:7684:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a8362066b65fc11b1e1cea19f72e6adc3e76bd80778a1a9c95db5abfb5daa7e664736f6c634300080d0033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":485:1315  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":878:1095  constructor(address _logic, bytes memory _data) payable {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":983:1037  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_5\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1036:1037  1 */\n  0x01\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":991:1032  keccak256(\"eip1967.proxy.implementation\") */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":983:1037  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_6\n  jump\t// in\ntag_5:\n  0x00\n  dup1\n  mload\n  0x20\n  data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":951:1038  _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  eq\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":944:1039  assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)) */\n  tag_8\n  jumpi\n  tag_8\n  tag_9\n  jump\t// in\ntag_8:\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1049:1088  _upgradeToAndCall(_logic, _data, false) */\n  tag_10\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1067:1073  _logic */\n  dup3\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1075:1080  _data */\n  dup3\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1082:1087  false */\n  0x00\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1049:1066  _upgradeToAndCall */\n  tag_11\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1049:1088  _upgradeToAndCall(_logic, _data, false) */\n  jump\t// in\ntag_10:\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":878:1095  constructor(address _logic, bytes memory _data) payable {... */\n  pop\n  pop\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":485:1315  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  jump(tag_54)\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2026:2341  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\ntag_11:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2171  _setImplementation(newImplementation) */\n  tag_14\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2153:2170  newImplementation */\n  dup4\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2152  _setImplementation */\n  tag_15\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2171  _setImplementation(newImplementation) */\n  jump\t// in\ntag_14:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2186:2213  Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2241:2242  0 */\n  0x00\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2231  data */\n  dup3\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2238  data.length */\n  mload\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2242  data.length > 0 */\n  gt\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2255  data.length > 0 || forceCall */\n  dup1\n  tag_16\n  jumpi\n  pop\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2246:2255  forceCall */\n  dup1\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2255  data.length > 0 || forceCall */\ntag_16:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2223:2335  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_17\n  jumpi\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2324  Address.functionDelegateCall(newImplementation, data) */\n  tag_18\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2300:2317  newImplementation */\n  dup4\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2319:2323  data */\n  dup4\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2299  Address.functionDelegateCall */\n  or(tag_0_10, shl(0x20, tag_19))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2324  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2223:2335  if (data.length > 0 || forceCall) {... */\ntag_17:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2026:2341  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\ntag_15:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n  tag_21\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1475:1492  newImplementation */\n  dup2\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1474  Address.isContract */\n  or(tag_0_11, shl(0x20, tag_22))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  tag_23\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2025:2027   */\n  0x20\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2007:2028   */\n  mstore\n    /* \"#utility.yul\":2064:2066   */\n  0x2d\n    /* \"#utility.yul\":2044:2062   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2037:2067   */\n  mstore\n    /* \"#utility.yul\":2103:2137   */\n  0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n    /* \"#utility.yul\":2083:2101   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2076:2138   */\n  mstore\n  shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":2154:2172   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2147:2190   */\n  mstore\n    /* \"#utility.yul\":2207:2226   */\n  0x84\n  add\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_23:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1610:1627  newImplementation */\n  dup1\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  tag_26\n  0x00\n  dup1\n  mload\n  0x20\n  data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1580:1600  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1579  StorageSlot.getAddressSlot */\n  or(tag_0_12, shl(0x20, tag_27))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_26:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1627  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_19:\n    /* \"contracts/NFTContract2/Address.sol\":6359:6371  bytes memory */\n  0x60\n    /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_29\n    /* \"contracts/NFTContract2/Address.sol\":6411:6417  target */\n  dup4\n    /* \"contracts/NFTContract2/Address.sol\":6419:6423  data */\n  dup4\n    /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"contracts/NFTContract2/Address.sol\":6390:6410  functionDelegateCall */\n  tag_30\n    /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_29:\n    /* \"contracts/NFTContract2/Address.sol\":6383:6467  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\ntag_22:\n    /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n  extcodesize\n    /* \"contracts/NFTContract2/Address.sol\":1116:1124  size > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_27:\n    /* \"contracts/NFTContract2/StorageSlot.sol\":1669:1673  slot */\n  swap1\n    /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_30:\n    /* \"contracts/NFTContract2/Address.sol\":6771:6783  bytes memory */\n  0x60\n    /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n  dup4\n  extcodesize\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_35\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2439:2441   */\n  0x20\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2421:2442   */\n  mstore\n    /* \"#utility.yul\":2478:2480   */\n  0x26\n    /* \"#utility.yul\":2458:2476   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2451:2481   */\n  mstore\n    /* \"#utility.yul\":2517:2551   */\n  0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n    /* \"#utility.yul\":2497:2515   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2490:2552   */\n  mstore\n  shl(0xd2, 0x1b9d1c9858dd)\n    /* \"#utility.yul\":2568:2586   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2561:2597   */\n  mstore\n    /* \"#utility.yul\":2614:2633   */\n  0x84\n  add\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_24\n    /* \"#utility.yul\":2237:2639   */\n  jump\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\ntag_35:\n    /* \"contracts/NFTContract2/Address.sol\":6935:6947  bool success */\n  0x00\n    /* \"contracts/NFTContract2/Address.sol\":6949:6972  bytes memory returndata */\n  dup1\n    /* \"contracts/NFTContract2/Address.sol\":6976:6982  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/NFTContract2/Address.sol\":6976:6995  target.delegatecall */\n  and\n    /* \"contracts/NFTContract2/Address.sol\":6996:7000  data */\n  dup6\n    /* \"contracts/NFTContract2/Address.sol\":6976:7001  target.delegatecall(data) */\n  mload(0x40)\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_42\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_41)\ntag_42:\n  0x60\n  swap2\n  pop\ntag_41:\n  pop\n    /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n  tag_43\n    /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup3\n  dup3\n    /* \"contracts/NFTContract2/Address.sol\":7057:7069  errorMessage */\n  dup7\n    /* \"contracts/NFTContract2/Address.sol\":7018:7035  _verifyCallResult */\n  tag_44\n    /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n  jump\t// in\ntag_43:\n    /* \"contracts/NFTContract2/Address.sol\":7011:7070  return _verifyCallResult(success, returndata, errorMessage) */\n  swap7\n    /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_44:\n    /* \"contracts/NFTContract2/Address.sol\":7198:7210  bytes memory */\n  0x60\n    /* \"contracts/NFTContract2/Address.sol\":7226:7233  success */\n  dup4\n    /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n  iszero\n  tag_46\n  jumpi\n  pop\n    /* \"contracts/NFTContract2/Address.sol\":7256:7266  returndata */\n  dup2\n    /* \"contracts/NFTContract2/Address.sol\":7249:7266  return returndata */\n  jump(tag_29)\n    /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\ntag_46:\n    /* \"contracts/NFTContract2/Address.sol\":7367:7384  returndata.length */\n  dup3\n  mload\n    /* \"contracts/NFTContract2/Address.sol\":7367:7388  returndata.length > 0 */\n  iszero\n    /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n  tag_48\n  jumpi\n    /* \"contracts/NFTContract2/Address.sol\":7625:7635  returndata */\n  dup3\n    /* \"contracts/NFTContract2/Address.sol\":7619:7636  mload(returndata) */\n  mload\n    /* \"contracts/NFTContract2/Address.sol\":7685:7700  returndata_size */\n  dup1\n    /* \"contracts/NFTContract2/Address.sol\":7672:7682  returndata */\n  dup5\n    /* \"contracts/NFTContract2/Address.sol\":7668:7670  32 */\n  0x20\n    /* \"contracts/NFTContract2/Address.sol\":7664:7683  add(32, returndata) */\n  add\n    /* \"contracts/NFTContract2/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\ntag_48:\n    /* \"contracts/NFTContract2/Address.sol\":7764:7776  errorMessage */\n  dup2\n    /* \"contracts/NFTContract2/Address.sol\":7757:7777  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_51\n  jump\t// in\n    /* \"#utility.yul\":14:141   */\ntag_52:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:404   */\ntag_53:\n    /* \"#utility.yul\":218:219   */\n  0x00\n    /* \"#utility.yul\":228:341   */\ntag_57:\n    /* \"#utility.yul\":242:248   */\n  dup4\n    /* \"#utility.yul\":239:240   */\n  dup2\n    /* \"#utility.yul\":236:249   */\n  lt\n    /* \"#utility.yul\":228:341   */\n  iszero\n  tag_59\n  jumpi\n    /* \"#utility.yul\":318:329   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":312:330   */\n  mload\n    /* \"#utility.yul\":299:310   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":292:331   */\n  mstore\n    /* \"#utility.yul\":264:266   */\n  0x20\n    /* \"#utility.yul\":257:267   */\n  add\n    /* \"#utility.yul\":228:341   */\n  jump(tag_57)\ntag_59:\n    /* \"#utility.yul\":359:365   */\n  dup4\n    /* \"#utility.yul\":356:357   */\n  dup2\n    /* \"#utility.yul\":353:366   */\n  gt\n    /* \"#utility.yul\":350:398   */\n  iszero\n  tag_18\n  jumpi\n  pop\n  pop\n    /* \"#utility.yul\":394:395   */\n  0x00\n    /* \"#utility.yul\":376:392   */\n  swap2\n  add\n    /* \"#utility.yul\":369:396   */\n  mstore\n    /* \"#utility.yul\":146:404   */\n  jump\t// out\n    /* \"#utility.yul\":409:1459   */\ntag_2:\n    /* \"#utility.yul\":497:503   */\n  0x00\n    /* \"#utility.yul\":505:511   */\n  dup1\n    /* \"#utility.yul\":558:560   */\n  0x40\n    /* \"#utility.yul\":546:555   */\n  dup4\n    /* \"#utility.yul\":537:544   */\n  dup6\n    /* \"#utility.yul\":533:556   */\n  sub\n    /* \"#utility.yul\":529:561   */\n  slt\n    /* \"#utility.yul\":526:578   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":574:575   */\n  0x00\n    /* \"#utility.yul\":571:572   */\n  dup1\n    /* \"#utility.yul\":564:576   */\n  revert\n    /* \"#utility.yul\":526:578   */\ntag_62:\n    /* \"#utility.yul\":600:616   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":645:676   */\n  dup2\n  and\n    /* \"#utility.yul\":635:677   */\n  dup2\n  eq\n    /* \"#utility.yul\":625:695   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":691:692   */\n  0x00\n    /* \"#utility.yul\":688:689   */\n  dup1\n    /* \"#utility.yul\":681:693   */\n  revert\n    /* \"#utility.yul\":625:695   */\ntag_63:\n    /* \"#utility.yul\":763:765   */\n  0x20\n    /* \"#utility.yul\":748:766   */\n  dup5\n  add\n    /* \"#utility.yul\":742:767   */\n  mload\n    /* \"#utility.yul\":714:719   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":816:830   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":813:847   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":843:844   */\n  0x00\n    /* \"#utility.yul\":840:841   */\n  dup1\n    /* \"#utility.yul\":833:845   */\n  revert\n    /* \"#utility.yul\":813:847   */\ntag_64:\n    /* \"#utility.yul\":881:887   */\n  dup2\n    /* \"#utility.yul\":870:879   */\n  dup6\n    /* \"#utility.yul\":866:888   */\n  add\n    /* \"#utility.yul\":856:888   */\n  swap2\n  pop\n    /* \"#utility.yul\":926:933   */\n  dup6\n    /* \"#utility.yul\":919:923   */\n  0x1f\n    /* \"#utility.yul\":915:917   */\n  dup4\n    /* \"#utility.yul\":911:924   */\n  add\n    /* \"#utility.yul\":907:934   */\n  slt\n    /* \"#utility.yul\":897:952   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":945:946   */\n  dup1\n    /* \"#utility.yul\":938:950   */\n  revert\n    /* \"#utility.yul\":897:952   */\ntag_65:\n    /* \"#utility.yul\":977:979   */\n  dup2\n    /* \"#utility.yul\":971:980   */\n  mload\n    /* \"#utility.yul\":999:1001   */\n  dup2\n    /* \"#utility.yul\":995:997   */\n  dup2\n    /* \"#utility.yul\":992:1002   */\n  gt\n    /* \"#utility.yul\":989:1025   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1005:1023   */\n  tag_67\n  tag_52\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1080:1082   */\n  0x40\n    /* \"#utility.yul\":1074:1083   */\n  mload\n    /* \"#utility.yul\":1048:1050   */\n  0x1f\n    /* \"#utility.yul\":1134:1147   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1130:1152   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1154:1156   */\n  0x3f\n    /* \"#utility.yul\":1126:1157   */\n  add\n    /* \"#utility.yul\":1122:1162   */\n  and\n    /* \"#utility.yul\":1110:1163   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1178:1196   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1198:1220   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1175:1221   */\n  or\n    /* \"#utility.yul\":1172:1244   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1224:1242   */\n  tag_69\n  tag_52\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1264:1274   */\n  dup2\n    /* \"#utility.yul\":1260:1262   */\n  0x40\n    /* \"#utility.yul\":1253:1275   */\n  mstore\n    /* \"#utility.yul\":1299:1301   */\n  dup3\n    /* \"#utility.yul\":1291:1297   */\n  dup2\n    /* \"#utility.yul\":1284:1302   */\n  mstore\n    /* \"#utility.yul\":1339:1346   */\n  dup9\n    /* \"#utility.yul\":1334:1336   */\n  0x20\n    /* \"#utility.yul\":1329:1331   */\n  dup5\n    /* \"#utility.yul\":1325:1327   */\n  dup8\n    /* \"#utility.yul\":1321:1332   */\n  add\n    /* \"#utility.yul\":1317:1337   */\n  add\n    /* \"#utility.yul\":1314:1347   */\n  gt\n    /* \"#utility.yul\":1311:1364   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":1360:1361   */\n  0x00\n    /* \"#utility.yul\":1357:1358   */\n  dup1\n    /* \"#utility.yul\":1350:1362   */\n  revert\n    /* \"#utility.yul\":1311:1364   */\ntag_70:\n    /* \"#utility.yul\":1373:1428   */\n  tag_71\n    /* \"#utility.yul\":1425:1427   */\n  dup4\n    /* \"#utility.yul\":1420:1422   */\n  0x20\n    /* \"#utility.yul\":1412:1418   */\n  dup4\n    /* \"#utility.yul\":1408:1423   */\n  add\n    /* \"#utility.yul\":1403:1405   */\n  0x20\n    /* \"#utility.yul\":1399:1401   */\n  dup9\n    /* \"#utility.yul\":1395:1406   */\n  add\n    /* \"#utility.yul\":1373:1428   */\n  tag_53\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1447:1453   */\n  dup1\n    /* \"#utility.yul\":1437:1453   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":409:1459   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1464:1686   */\ntag_6:\n    /* \"#utility.yul\":1504:1508   */\n  0x00\n    /* \"#utility.yul\":1532:1533   */\n  dup3\n    /* \"#utility.yul\":1529:1530   */\n  dup3\n    /* \"#utility.yul\":1526:1534   */\n  lt\n    /* \"#utility.yul\":1523:1654   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1576:1586   */\n  0x4e487b71\n    /* \"#utility.yul\":1571:1574   */\n  0xe0\n    /* \"#utility.yul\":1567:1587   */\n  shl\n    /* \"#utility.yul\":1564:1565   */\n  0x00\n    /* \"#utility.yul\":1557:1588   */\n  mstore\n    /* \"#utility.yul\":1611:1615   */\n  0x11\n    /* \"#utility.yul\":1608:1609   */\n  0x04\n    /* \"#utility.yul\":1601:1616   */\n  mstore\n    /* \"#utility.yul\":1639:1643   */\n  0x24\n    /* \"#utility.yul\":1636:1637   */\n  0x00\n    /* \"#utility.yul\":1629:1644   */\n  revert\n    /* \"#utility.yul\":1523:1654   */\ntag_73:\n  pop\n    /* \"#utility.yul\":1671:1680   */\n  sub\n  swap1\n    /* \"#utility.yul\":1464:1686   */\n  jump\t// out\n    /* \"#utility.yul\":1691:1818   */\ntag_9:\n    /* \"#utility.yul\":1752:1762   */\n  0x4e487b71\n    /* \"#utility.yul\":1747:1750   */\n  0xe0\n    /* \"#utility.yul\":1743:1763   */\n  shl\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1733:1764   */\n  mstore\n    /* \"#utility.yul\":1783:1787   */\n  0x01\n    /* \"#utility.yul\":1780:1781   */\n  0x04\n    /* \"#utility.yul\":1773:1788   */\n  mstore\n    /* \"#utility.yul\":1807:1811   */\n  0x24\n    /* \"#utility.yul\":1804:1805   */\n  0x00\n    /* \"#utility.yul\":1797:1812   */\n  revert\n    /* \"#utility.yul\":2644:2918   */\ntag_39:\n    /* \"#utility.yul\":2773:2776   */\n  0x00\n    /* \"#utility.yul\":2811:2817   */\n  dup3\n    /* \"#utility.yul\":2805:2818   */\n  mload\n    /* \"#utility.yul\":2827:2880   */\n  tag_78\n    /* \"#utility.yul\":2873:2879   */\n  dup2\n    /* \"#utility.yul\":2868:2871   */\n  dup5\n    /* \"#utility.yul\":2861:2865   */\n  0x20\n    /* \"#utility.yul\":2853:2859   */\n  dup8\n    /* \"#utility.yul\":2849:2866   */\n  add\n    /* \"#utility.yul\":2827:2880   */\n  tag_53\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":2896:2912   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":2644:2918   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2923:3306   */\ntag_51:\n    /* \"#utility.yul\":3072:3074   */\n  0x20\n    /* \"#utility.yul\":3061:3070   */\n  dup2\n    /* \"#utility.yul\":3054:3075   */\n  mstore\n    /* \"#utility.yul\":3035:3039   */\n  0x00\n    /* \"#utility.yul\":3104:3110   */\n  dup3\n    /* \"#utility.yul\":3098:3111   */\n  mload\n    /* \"#utility.yul\":3147:3153   */\n  dup1\n    /* \"#utility.yul\":3142:3144   */\n  0x20\n    /* \"#utility.yul\":3131:3140   */\n  dup5\n    /* \"#utility.yul\":3127:3145   */\n  add\n    /* \"#utility.yul\":3120:3154   */\n  mstore\n    /* \"#utility.yul\":3163:3229   */\n  tag_80\n    /* \"#utility.yul\":3222:3228   */\n  dup2\n    /* \"#utility.yul\":3217:3219   */\n  0x40\n    /* \"#utility.yul\":3206:3215   */\n  dup6\n    /* \"#utility.yul\":3202:3220   */\n  add\n    /* \"#utility.yul\":3197:3199   */\n  0x20\n    /* \"#utility.yul\":3189:3195   */\n  dup8\n    /* \"#utility.yul\":3185:3200   */\n  add\n    /* \"#utility.yul\":3163:3229   */\n  tag_53\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3290:3292   */\n  0x1f\n    /* \"#utility.yul\":3269:3284   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":3265:3294   */\n  and\n    /* \"#utility.yul\":3250:3295   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":3297:3299   */\n  0x40\n    /* \"#utility.yul\":3246:3300   */\n  add\n  swap3\n    /* \"#utility.yul\":2923:3306   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_54:\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":485:1315  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":485:1315  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTContract2/Proxy.sol\":2835:2846  _fallback() */\n      tag_5\n        /* \"contracts/NFTContract2/Proxy.sol\":2835:2844  _fallback */\n      tag_6\n        /* \"contracts/NFTContract2/Proxy.sol\":2835:2846  _fallback() */\n      jump\t// in\n    tag_5:\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":485:1315  contract ERC1967Proxy is Proxy, ERC1967Upgrade {... */\n      stop\n    tag_2:\n        /* \"contracts/NFTContract2/Proxy.sol\":2611:2622  _fallback() */\n      tag_5\n        /* \"contracts/NFTContract2/Proxy.sol\":2257:2367  function _fallback() internal virtual {... */\n    tag_6:\n        /* \"contracts/NFTContract2/Proxy.sol\":2332:2360  _delegate(_implementation()) */\n      tag_16\n        /* \"contracts/NFTContract2/Proxy.sol\":2342:2359  _implementation() */\n      tag_17\n        /* \"contracts/NFTContract2/Proxy.sol\":2342:2357  _implementation */\n      tag_18\n        /* \"contracts/NFTContract2/Proxy.sol\":2342:2359  _implementation() */\n      jump\t// in\n    tag_17:\n        /* \"contracts/NFTContract2/Proxy.sol\":2332:2341  _delegate */\n      tag_19\n        /* \"contracts/NFTContract2/Proxy.sol\":2332:2360  _delegate(_implementation()) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/NFTContract2/Proxy.sol\":2257:2367  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_10:\n        /* \"contracts/NFTContract2/Address.sol\":6359:6371  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_21\n        /* \"contracts/NFTContract2/Address.sol\":6411:6417  target */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6419:6423  data */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/NFTContract2/Address.sol\":6390:6410  functionDelegateCall */\n      tag_22\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_21:\n        /* \"contracts/NFTContract2/Address.sol\":6383:6467  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_11:\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"contracts/NFTContract2/Address.sol\":1116:1124  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_12:\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1669:1673  slot */\n      swap1\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1173:1313  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_18:\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1240:1252  address impl */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1271:1306  ERC1967Upgrade._getImplementation() */\n      tag_27\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1277  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1144:1284  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1271:1306  ERC1967Upgrade._getImplementation() */\n    tag_27:\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1264:1306  return ERC1967Upgrade._getImplementation() */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1173:1313  function _implementation() internal view virtual override returns (address impl) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract2/Proxy.sol\":883:1778  function _delegate(address implementation) internal virtual {... */\n    tag_19:\n        /* \"contracts/NFTContract2/Proxy.sol\":1277:1291  calldatasize() */\n      calldatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1274:1275  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1271:1272  0 */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1258:1292  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/NFTContract2/Proxy.sol\":1491:1492  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1488:1489  0 */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1472:1486  calldatasize() */\n      calldatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1469:1470  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1453:1467  implementation */\n      dup5\n        /* \"contracts/NFTContract2/Proxy.sol\":1446:1451  gas() */\n      gas\n        /* \"contracts/NFTContract2/Proxy.sol\":1433:1493  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/NFTContract2/Proxy.sol\":1567:1583  returndatasize() */\n      returndatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1564:1565  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1561:1562  0 */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1546:1584  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/NFTContract2/Proxy.sol\":1605:1611  result */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1672:1710  case 0 { revert(0, returndatasize()) } */\n      dup1\n      iszero\n      tag_31\n      jumpi\n        /* \"contracts/NFTContract2/Proxy.sol\":1743:1759  returndatasize() */\n      returndatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1740:1741  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1733:1760  return(0, returndatasize()) */\n      return\n        /* \"contracts/NFTContract2/Proxy.sol\":1672:1710  case 0 { revert(0, returndatasize()) } */\n    tag_31:\n        /* \"contracts/NFTContract2/Proxy.sol\":1691:1707  returndatasize() */\n      returndatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1688:1689  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1681:1708  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_22:\n        /* \"contracts/NFTContract2/Address.sol\":6771:6783  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      dup4\n      extcodesize\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_34\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":216:218   */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":198:219   */\n      mstore\n        /* \"#utility.yul\":255:257   */\n      0x26\n        /* \"#utility.yul\":235:253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":228:258   */\n      mstore\n        /* \"#utility.yul\":294:328   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":274:292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":267:329   */\n      mstore\n      shl(0xd2, 0x1b9d1c9858dd)\n        /* \"#utility.yul\":345:363   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":338:374   */\n      mstore\n        /* \"#utility.yul\":391:410   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_34:\n        /* \"contracts/NFTContract2/Address.sol\":6935:6947  bool success */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":6949:6972  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":6976:6982  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/Address.sol\":6976:6995  target.delegatecall */\n      and\n        /* \"contracts/NFTContract2/Address.sol\":6996:7000  data */\n      dup6\n        /* \"contracts/NFTContract2/Address.sol\":6976:7001  target.delegatecall(data) */\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_41\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_40)\n    tag_41:\n      0x60\n      swap2\n      pop\n    tag_40:\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      tag_42\n        /* \"contracts/NFTContract2/Address.sol\":7036:7043  success */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7045:7055  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7057:7069  errorMessage */\n      dup7\n        /* \"contracts/NFTContract2/Address.sol\":7018:7035  _verifyCallResult */\n      tag_43\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_42:\n        /* \"contracts/NFTContract2/Address.sol\":7011:7070  return _verifyCallResult(success, returndata, errorMessage) */\n      swap7\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_43:\n        /* \"contracts/NFTContract2/Address.sol\":7198:7210  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":7226:7233  success */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n      iszero\n      tag_47\n      jumpi\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7256:7266  returndata */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7249:7266  return returndata */\n      jump(tag_21)\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n    tag_47:\n        /* \"contracts/NFTContract2/Address.sol\":7367:7384  returndata.length */\n      dup3\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7367:7388  returndata.length > 0 */\n      iszero\n        /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n      tag_49\n      jumpi\n        /* \"contracts/NFTContract2/Address.sol\":7625:7635  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7619:7636  mload(returndata) */\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7685:7700  returndata_size */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":7672:7682  returndata */\n      dup5\n        /* \"contracts/NFTContract2/Address.sol\":7668:7670  32 */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":7664:7683  add(32, returndata) */\n      add\n        /* \"contracts/NFTContract2/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n    tag_49:\n        /* \"contracts/NFTContract2/Address.sol\":7764:7776  errorMessage */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7757:7777  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_35\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n        /* \"#utility.yul\":421:679   */\n    tag_53:\n        /* \"#utility.yul\":493:494   */\n      0x00\n        /* \"#utility.yul\":503:616   */\n    tag_57:\n        /* \"#utility.yul\":517:523   */\n      dup4\n        /* \"#utility.yul\":514:515   */\n      dup2\n        /* \"#utility.yul\":511:524   */\n      lt\n        /* \"#utility.yul\":503:616   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":593:604   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":587:605   */\n      mload\n        /* \"#utility.yul\":574:585   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":567:606   */\n      mstore\n        /* \"#utility.yul\":539:541   */\n      0x20\n        /* \"#utility.yul\":532:542   */\n      add\n        /* \"#utility.yul\":503:616   */\n      jump(tag_57)\n    tag_59:\n        /* \"#utility.yul\":634:640   */\n      dup4\n        /* \"#utility.yul\":631:632   */\n      dup2\n        /* \"#utility.yul\":628:641   */\n      gt\n        /* \"#utility.yul\":625:673   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":669:670   */\n      0x00\n        /* \"#utility.yul\":660:666   */\n      dup5\n        /* \"#utility.yul\":655:658   */\n      dup5\n        /* \"#utility.yul\":651:667   */\n      add\n        /* \"#utility.yul\":644:671   */\n      mstore\n        /* \"#utility.yul\":625:673   */\n    tag_60:\n      pop\n        /* \"#utility.yul\":421:679   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:958   */\n    tag_38:\n        /* \"#utility.yul\":813:816   */\n      0x00\n        /* \"#utility.yul\":851:857   */\n      dup3\n        /* \"#utility.yul\":845:858   */\n      mload\n        /* \"#utility.yul\":867:920   */\n      tag_62\n        /* \"#utility.yul\":913:919   */\n      dup2\n        /* \"#utility.yul\":908:911   */\n      dup5\n        /* \"#utility.yul\":901:905   */\n      0x20\n        /* \"#utility.yul\":893:899   */\n      dup8\n        /* \"#utility.yul\":889:906   */\n      add\n        /* \"#utility.yul\":867:920   */\n      tag_53\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":936:952   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":684:958   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":963:1346   */\n    tag_52:\n        /* \"#utility.yul\":1112:1114   */\n      0x20\n        /* \"#utility.yul\":1101:1110   */\n      dup2\n        /* \"#utility.yul\":1094:1115   */\n      mstore\n        /* \"#utility.yul\":1075:1079   */\n      0x00\n        /* \"#utility.yul\":1144:1150   */\n      dup3\n        /* \"#utility.yul\":1138:1151   */\n      mload\n        /* \"#utility.yul\":1187:1193   */\n      dup1\n        /* \"#utility.yul\":1182:1184   */\n      0x20\n        /* \"#utility.yul\":1171:1180   */\n      dup5\n        /* \"#utility.yul\":1167:1185   */\n      add\n        /* \"#utility.yul\":1160:1194   */\n      mstore\n        /* \"#utility.yul\":1203:1269   */\n      tag_64\n        /* \"#utility.yul\":1262:1268   */\n      dup2\n        /* \"#utility.yul\":1257:1259   */\n      0x40\n        /* \"#utility.yul\":1246:1255   */\n      dup6\n        /* \"#utility.yul\":1242:1260   */\n      add\n        /* \"#utility.yul\":1237:1239   */\n      0x20\n        /* \"#utility.yul\":1229:1235   */\n      dup8\n        /* \"#utility.yul\":1225:1240   */\n      add\n        /* \"#utility.yul\":1203:1269   */\n      tag_53\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1330:1332   */\n      0x1f\n        /* \"#utility.yul\":1309:1324   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1305:1334   */\n      and\n        /* \"#utility.yul\":1290:1335   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1337:1339   */\n      0x40\n        /* \"#utility.yul\":1286:1340   */\n      add\n      swap3\n        /* \"#utility.yul\":963:1346   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa2646970667358221220057fedf1d00261756d595977cd89f47a23402a1cd2f45bf1cdb7d841bb6ac8f164736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_setImplementation_403": {
									"entryPoint": 230,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_452": {
									"entryPoint": 124,
									"id": 452,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_verifyCallResult_294": {
									"entryPoint": 688,
									"id": 294,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionDelegateCall_229": {
									"entryPoint": 422,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_264": {
									"entryPoint": 475,
									"id": 264,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_793": {
									"entryPoint": 472,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 466,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1017,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 1054,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 745,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3308:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "199:205:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "209:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "218:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "213:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "303:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "308:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "299:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "299:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "322:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "327:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "318:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "318:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "312:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "312:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "292:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "292:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "292:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "239:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "242:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "236:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "236:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "250:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "252:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "261:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "264:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "257:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "257:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "252:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "232:3:7",
																"statements": []
															},
															"src": "228:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "367:31:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "380:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "385:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "376:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "376:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "394:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "369:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "369:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "369:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "356:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "359:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "353:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:13:7"
															},
															"nodeType": "YulIf",
															"src": "350:48:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "177:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "182:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "187:6:7",
														"type": ""
													}
												],
												"src": "146:258:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "516:943:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "562:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "571:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "574:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "564:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "564:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "533:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "533:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "529:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:32:7"
															},
															"nodeType": "YulIf",
															"src": "526:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "587:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "606:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "600:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "600:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "591:5:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "679:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "688:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "691:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "681:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "681:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "681:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "638:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "649:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "664:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "669:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "660:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "660:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "673:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "656:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "656:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "645:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "645:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "635:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "628:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:50:7"
															},
															"nodeType": "YulIf",
															"src": "625:70:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "704:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "714:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "704:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "728:39:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "752:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "763:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "742:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "742:25:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "732:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "776:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "794:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "798:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "790:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "802:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "786:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "786:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "780:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "831:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "840:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "843:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "833:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "833:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "833:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "819:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "827:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "816:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:14:7"
															},
															"nodeType": "YulIf",
															"src": "813:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "856:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "870:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "881:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "866:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "866:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "860:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "936:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "945:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "948:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "938:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "938:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "938:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "915:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "919:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "911:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "911:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "926:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "907:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "907:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "900:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:35:7"
															},
															"nodeType": "YulIf",
															"src": "897:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "961:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "977:2:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "971:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:9:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "965:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1003:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1005:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1005:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1005:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "995:2:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "999:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:10:7"
															},
															"nodeType": "YulIf",
															"src": "989:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1034:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1044:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1044:7:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1038:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1060:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1080:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1074:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1074:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1064:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1092:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1114:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1138:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1142:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1134:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1134:13:7"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1149:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1130:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1130:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1154:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1126:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1126:31:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1159:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1122:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1110:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1096:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1222:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1224:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1224:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1224:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1181:10:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1193:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1178:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1178:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1201:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1213:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1198:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1198:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1175:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1175:46:7"
															},
															"nodeType": "YulIf",
															"src": "1172:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1264:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1253:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1291:6:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1299:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1284:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1284:18:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1348:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1357:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1360:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1350:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1350:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1350:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1325:2:7"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1329:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1321:11:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1334:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1317:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1317:20:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1339:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1314:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1314:33:7"
															},
															"nodeType": "YulIf",
															"src": "1311:53:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1399:2:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1403:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1395:11:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1412:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1420:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1408:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1408:15:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1425:2:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1373:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1373:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1373:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1437:16:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1447:6:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "474:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "485:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "497:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "505:6:7",
														"type": ""
													}
												],
												"src": "409:1050:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1513:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1543:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1564:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1571:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1576:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1567:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1567:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1557:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1557:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1557:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1608:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1611:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1601:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1601:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1601:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1636:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1639:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1629:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1629:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1629:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1529:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1532:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1526:8:7"
															},
															"nodeType": "YulIf",
															"src": "1523:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1663:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1675:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1678:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1671:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1663:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1495:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1498:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1504:4:7",
														"type": ""
													}
												],
												"src": "1464:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1723:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1747:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1752:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1743:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1743:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1733:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1733:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1733:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1780:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1783:4:7",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1773:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1773:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1804:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1807:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1797:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:15:7"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "1691:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1997:235:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2014:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2007:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2007:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2048:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2059:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2044:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2044:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2064:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2037:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2037:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2037:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2087:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2098:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2083:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2083:18:7"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2103:34:7",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2076:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2076:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2158:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2169:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2154:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2154:18:7"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2174:15:7",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2147:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2147:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2147:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2199:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2211:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2222:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2207:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2199:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1974:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1988:4:7",
														"type": ""
													}
												],
												"src": "1823:409:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2428:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2439:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2421:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2462:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2473:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2458:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2458:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2478:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2451:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2451:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2501:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2512:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2497:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2497:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2517:34:7",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2490:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2490:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2572:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2583:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2568:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2568:18:7"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2588:8:7",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2561:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2561:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2561:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2606:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2618:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2629:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2614:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2614:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2606:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2388:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2402:4:7",
														"type": ""
													}
												],
												"src": "2237:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2781:137:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2791:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2805:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2805:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2795:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2853:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2861:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2849:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2849:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2868:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2873:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2827:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2827:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2827:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2889:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2900:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2905:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2896:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2896:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2889:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2757:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2762:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2773:3:7",
														"type": ""
													}
												],
												"src": "2644:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3044:262:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3061:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3072:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3054:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3054:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3054:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3084:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3104:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3098:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3098:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3088:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3131:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3142:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3127:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3127:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3147:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3120:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3120:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3189:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3197:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3185:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3206:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3217:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3202:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3222:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3163:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3163:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3163:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3238:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3254:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3273:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3281:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3269:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3269:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3290:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3286:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3286:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3265:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3265:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3250:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3250:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3297:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3246:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3246:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3238:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3024:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3035:4:7",
														"type": ""
													}
												],
												"src": "2923:383:7"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value1 := memPtr\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526040516107813803806107818339810160408190526100229161032b565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6103f9565b60008051602061073a833981519152146100695761006961041e565b6100758282600061007c565b5050610483565b610085836100e6565b6040516001600160a01b038416907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a26000825111806100c65750805b156100e1576100df83836101a660201b6100291760201c565b505b505050565b6100f9816101d260201b6100551760201c565b6101605760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b8061018560008051602061073a83398151915260001b6101d860201b61005b1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606101cb838360405180606001604052806027815260200161075a602791396101db565b9392505050565b3b151590565b90565b6060833b61023a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610157565b600080856001600160a01b0316856040516102559190610434565b600060405180830381855af49150503d8060008114610290576040519150601f19603f3d011682016040523d82523d6000602084013e610295565b606091505b5090925090506102a68282866102b0565b9695505050505050565b606083156102bf5750816101cb565b8251156102cf5782518084602001fd5b8160405162461bcd60e51b81526004016101579190610450565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561031a578181015183820152602001610302565b838111156100df5750506000910152565b6000806040838503121561033e57600080fd5b82516001600160a01b038116811461035557600080fd5b60208401519092506001600160401b038082111561037257600080fd5b818501915085601f83011261038657600080fd5b815181811115610398576103986102e9565b604051601f8201601f19908116603f011681019083821181831017156103c0576103c06102e9565b816040528281528860208487010111156103d957600080fd5b6103ea8360208301602088016102ff565b80955050505050509250929050565b60008282101561041957634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b600082516104468184602087016102ff565b9190910192915050565b602081526000825180602084015261046f8160408501602087016102ff565b601f01601f19169190910160400192915050565b6102a8806104926000396000f3fe60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101fc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b81526004016101159190610218565b60005b838110156101e75781810151838201526020016101cf565b838111156101f6576000848401525b50505050565b6000825161020e8184602087016101cc565b9190910192915050565b60208152600082518060208401526102378160408501602087016101cc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220057fedf1d00261756d595977cd89f47a23402a1cd2f45bf1cdb7d841bb6ac8f164736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x781 CODESIZE SUB DUP1 PUSH2 0x781 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x32B JUMP JUMPDEST PUSH2 0x4D PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x73A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH2 0x69 JUMPI PUSH2 0x69 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x75 DUP3 DUP3 PUSH1 0x0 PUSH2 0x7C JUMP JUMPDEST POP POP PUSH2 0x483 JUMP JUMPDEST PUSH2 0x85 DUP4 PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0xC6 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0xE1 JUMPI PUSH2 0xDF DUP4 DUP4 PUSH2 0x1A6 PUSH1 0x20 SHL PUSH2 0x29 OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0x1D2 PUSH1 0x20 SHL PUSH2 0x55 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x160 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x185 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x73A DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH2 0x1D8 PUSH1 0x20 SHL PUSH2 0x5B OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1CB DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x75A PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x1DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x23A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x157 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x434 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x290 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x295 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x2A6 DUP3 DUP3 DUP7 PUSH2 0x2B0 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2BF JUMPI POP DUP2 PUSH2 0x1CB JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x2CF JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x450 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x31A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x302 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xDF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x355 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x398 JUMPI PUSH2 0x398 PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3C0 JUMPI PUSH2 0x3C0 PUSH2 0x2E9 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3EA DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x2FF JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x419 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x446 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2FF JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x46F DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A8 DUP1 PUSH2 0x492 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x5E JUMP JUMPDEST PUSH2 0x96 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xB5 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x179 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x189 DUP3 DUP3 DUP7 PUSH2 0x193 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A2 JUMPI POP DUP2 PUSH2 0x4E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1B2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x237 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220057FED CALL 0xD0 MUL PUSH2 0x756D MSIZE MSIZE PUSH24 0xCD89F47A23402A1CD2F45BF1CDB7D841BB6AC8F164736F6C PUSH4 0x4300080D STOP CALLER CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65640000000000000000000000 ",
							"sourceMap": "485:830:1:-:0;;;878:217;;;;;;;;;;;;;;;;;;:::i;:::-;983:54;1036:1;991:41;983:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;951:87:1;944:95;;;;:::i;:::-;1049:39;1067:6;1075:5;1082;1049:17;:39::i;:::-;878:217;;485:830;;2026:315:2;2134:37;2153:17;2134:18;:37::i;:::-;2186:27;;-1:-1:-1;;;;;2186:27:2;;;;;;;;2241:1;2227:4;:11;:15;:28;;;;2246:9;2227:28;2223:112;;;2271:53;2300:17;2319:4;2271:28;;;;;:53;;:::i;:::-;;2223:112;2026:315;;;:::o;1375:259::-;1456:37;1475:17;1456:18;;;;;:37;;:::i;:::-;1448:95;;;;-1:-1:-1;;;1448:95:2;;2025:2:7;1448:95:2;;;2007:21:7;2064:2;2044:18;;;2037:30;2103:34;2083:18;;;2076:62;-1:-1:-1;;;2154:18:7;;;2147:43;2207:19;;1448:95:2;;;;;;;;;1610:17;1553:48;-1:-1:-1;;;;;;;;;;;1580:20:2;;1553:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1553:74:2;-1:-1:-1;;;;;1553:74:2;;;;;;;;;;-1:-1:-1;1375:259:2:o;6276:198:0:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:0:o;718:413::-;1078:20;1116:8;;;718:413::o;1542:147:5:-;1669:4;1542:147::o;6660:417:0:-;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:0;;2439:2:7;6795:69:0;;;2421:21:7;2478:2;2458:18;;;2451:30;2517:34;2497:18;;;2490:62;-1:-1:-1;;;2568:18:7;;;2561:36;2614:19;;6795:69:0;2237:402:7;6795:69:0;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:0;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6934:67:0;;-1:-1:-1;6934:67:0;-1:-1:-1;7018:52:0;6934:67;;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:0:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:0;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:0;;;;;;;;:::i;14:127:7:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:258;218:1;228:113;242:6;239:1;236:13;228:113;;;318:11;;;312:18;299:11;;;292:39;264:2;257:10;228:113;;;359:6;356:1;353:13;350:48;;;-1:-1:-1;;394:1:7;376:16;;369:27;146:258::o;409:1050::-;497:6;505;558:2;546:9;537:7;533:23;529:32;526:52;;;574:1;571;564:12;526:52;600:16;;-1:-1:-1;;;;;645:31:7;;635:42;;625:70;;691:1;688;681:12;625:70;763:2;748:18;;742:25;714:5;;-1:-1:-1;;;;;;816:14:7;;;813:34;;;843:1;840;833:12;813:34;881:6;870:9;866:22;856:32;;926:7;919:4;915:2;911:13;907:27;897:55;;948:1;945;938:12;897:55;977:2;971:9;999:2;995;992:10;989:36;;;1005:18;;:::i;:::-;1080:2;1074:9;1048:2;1134:13;;-1:-1:-1;;1130:22:7;;;1154:2;1126:31;1122:40;1110:53;;;1178:18;;;1198:22;;;1175:46;1172:72;;;1224:18;;:::i;:::-;1264:10;1260:2;1253:22;1299:2;1291:6;1284:18;1339:7;1334:2;1329;1325;1321:11;1317:20;1314:33;1311:53;;;1360:1;1357;1350:12;1311:53;1373:55;1425:2;1420;1412:6;1408:15;1403:2;1399;1395:11;1373:55;:::i;:::-;1447:6;1437:16;;;;;;;409:1050;;;;;:::o;1464:222::-;1504:4;1532:1;1529;1526:8;1523:131;;;1576:10;1571:3;1567:20;1564:1;1557:31;1611:4;1608:1;1601:15;1639:4;1636:1;1629:15;1523:131;-1:-1:-1;1671:9:7;;1464:222::o;1691:127::-;1752:10;1747:3;1743:20;1740:1;1733:31;1783:4;1780:1;1773:15;1807:4;1804:1;1797:15;2644:274;2773:3;2811:6;2805:13;2827:53;2873:6;2868:3;2861:4;2853:6;2849:17;2827:53;:::i;:::-;2896:16;;;;;2644:274;-1:-1:-1;;2644:274:7:o;2923:383::-;3072:2;3061:9;3054:21;3035:4;3104:6;3098:13;3147:6;3142:2;3131:9;3127:18;3120:34;3163:66;3222:6;3217:2;3206:9;3202:18;3197:2;3189:6;3185:15;3163:66;:::i;:::-;3290:2;3269:15;-1:-1:-1;;3265:29:7;3250:45;;;;3297:2;3246:54;;2923:383;-1:-1:-1;;2923:383:7:o;:::-;485:830:1;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_753": {
									"entryPoint": null,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_761": {
									"entryPoint": null,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_766": {
									"entryPoint": null,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_delegate_726": {
									"entryPoint": 150,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_745": {
									"entryPoint": 23,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getImplementation_379": {
									"entryPoint": null,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_347": {
									"entryPoint": 94,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_verifyCallResult_294": {
									"entryPoint": 403,
									"id": 294,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionDelegateCall_229": {
									"entryPoint": 41,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_264": {
									"entryPoint": 186,
									"id": 264,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_793": {
									"entryPoint": 91,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 85,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1348:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "188:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "205:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "216:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "198:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "198:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "198:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "239:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "250:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "255:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "228:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "228:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "228:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "278:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "289:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "274:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "274:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "294:34:7",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "267:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "267:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "267:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "349:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "360:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:18:7"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "365:8:7",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "338:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "338:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "383:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "406:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "391:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "383:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "165:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "179:4:7",
														"type": ""
													}
												],
												"src": "14:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "474:205:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "484:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "493:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "488:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "553:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "578:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "583:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "574:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "574:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "597:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "602:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "593:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "593:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "587:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "587:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "567:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "567:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "567:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "514:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "517:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "511:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "511:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "525:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "527:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "536:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "539:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "532:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "532:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "527:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "507:3:7",
																"statements": []
															},
															"src": "503:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "642:31:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "655:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "660:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "651:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "651:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "669:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "644:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "644:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "644:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "631:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "634:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "628:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:13:7"
															},
															"nodeType": "YulIf",
															"src": "625:48:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "452:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "457:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "462:6:7",
														"type": ""
													}
												],
												"src": "421:258:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "821:137:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "831:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "851:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "845:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "835:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "893:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "901:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "889:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "889:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "908:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "913:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "867:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "867:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "867:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "929:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "940:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "945:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "936:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "936:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "929:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "797:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "802:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "813:3:7",
														"type": ""
													}
												],
												"src": "684:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1084:262:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1101:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1112:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1094:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1094:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1094:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1124:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1128:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1171:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1182:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1167:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1187:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1160:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1160:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1160:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1229:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1237:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1225:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1225:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1246:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1257:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1242:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1242:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1262:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1203:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1203:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1203:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1278:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1294:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1313:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1321:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1309:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1309:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1330:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1326:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1326:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1305:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1305:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1290:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1290:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1337:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1286:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1278:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1053:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1064:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1075:4:7",
														"type": ""
													}
												],
												"src": "963:383:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661001357610011610017565b005b6100115b61002761002261005e565b610096565b565b606061004e838360405180606001604052806027815260200161024c602791396100ba565b9392505050565b3b151590565b90565b60006100917f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100b5573d6000f35b3d6000fd5b6060833b61011e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161013991906101fc565b600060405180830381855af49150503d8060008114610174576040519150601f19603f3d011682016040523d82523d6000602084013e610179565b606091505b5091509150610189828286610193565b9695505050505050565b606083156101a257508161004e565b8251156101b25782518084602001fd5b8160405162461bcd60e51b81526004016101159190610218565b60005b838110156101e75781810151838201526020016101cf565b838111156101f6576000848401525b50505050565b6000825161020e8184602087016101cc565b9190910192915050565b60208152600082518060208401526102378160408501602087016101cc565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220057fedf1d00261756d595977cd89f47a23402a1cd2f45bf1cdb7d841bb6ac8f164736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x13 JUMPI PUSH2 0x11 PUSH2 0x17 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11 JUMPDEST PUSH2 0x27 PUSH2 0x22 PUSH2 0x5E JUMP JUMPDEST PUSH2 0x96 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH2 0x4E DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24C PUSH1 0x27 SWAP2 CODECOPY PUSH2 0xBA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x91 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0xB5 JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x11E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x1FC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x174 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x179 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x189 DUP3 DUP3 DUP7 PUSH2 0x193 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1A2 JUMPI POP DUP2 PUSH2 0x4E JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1B2 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x218 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1CF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x20E DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1CC JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x237 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1CC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220057FED CALL 0xD0 MUL PUSH2 0x756D MSIZE MSIZE PUSH24 0xCD89F47A23402A1CD2F45BF1CDB7D841BB6AC8F164736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "485:830:1:-:0;;;;;;2835:11:4;:9;:11::i;:::-;485:830:1;;2611:11:4;2257:110;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;6276:198:0:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:0:o;718:413::-;1078:20;1116:8;;;718:413::o;1542:147:5:-;1669:4;1542:147::o;1173:140:1:-;1240:12;1271:35;873:66:2;1223:54;-1:-1:-1;;;;;1223:54:2;;1144:140;1271:35:1;1264:42;;1173:140;:::o;883:895:4:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;6660:417:0;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:0;;216:2:7;6795:69:0;;;198:21:7;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:7;;;338:36;391:19;;6795:69:0;;;;;;;;;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:0;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:0:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:0;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:0;;;;;;;;:::i;421:258:7:-;493:1;503:113;517:6;514:1;511:13;503:113;;;593:11;;;587:18;574:11;;;567:39;539:2;532:10;503:113;;;634:6;631:1;628:13;625:48;;;669:1;660:6;655:3;651:16;644:27;625:48;;421:258;;;:::o;684:274::-;813:3;851:6;845:13;867:53;913:6;908:3;901:4;893:6;889:17;867:53;:::i;:::-;936:16;;;;;684:274;-1:-1:-1;;684:274:7:o;963:383::-;1112:2;1101:9;1094:21;1075:4;1144:6;1138:13;1187:6;1182:2;1171:9;1167:18;1160:34;1203:66;1262:6;1257:2;1246:9;1242:18;1237:2;1229:6;1225:15;1203:66;:::i;:::-;1330:2;1309:15;-1:-1:-1;;1305:29:7;1290:45;;;;1337:2;1286:54;;963:383;-1:-1:-1;;963:383:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite"
							},
							"internal": {
								"_implementation()": "2156"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1036,
									"end": 1037,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 991,
									"end": 1032,
									"name": "PUSH",
									"source": 1,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 951,
									"end": 1038,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1067,
									"end": 1073,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 878,
									"end": 1095,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2153,
									"end": 2170,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "PUSH",
									"source": 2,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 2241,
									"end": 2242,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2231,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2238,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2242,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2246,
									"end": 2255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2300,
									"end": 2317,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2319,
									"end": 2323,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551626"
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "tag",
									"source": 2,
									"value": "17"
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1375,
									"end": 1634,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1375,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1475,
									"end": 1492,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551627"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2025,
									"end": 2027,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2007,
									"end": 2028,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2064,
									"end": 2066,
									"name": "PUSH",
									"source": 7,
									"value": "2D"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2044,
									"end": 2062,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2037,
									"end": 2067,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2103,
									"end": 2137,
									"name": "PUSH",
									"source": 7,
									"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
								},
								{
									"begin": 2083,
									"end": 2101,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2083,
									"end": 2101,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2083,
									"end": 2101,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2076,
									"end": 2138,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2154,
									"end": 2172,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2154,
									"end": 2172,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2172,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2147,
									"end": 2190,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2207,
									"end": 2226,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2207,
									"end": 2226,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1627,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1580,
									"end": 1600,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1580,
									"end": 1600,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551628"
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1375,
									"end": 1634,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6371,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6411,
									"end": 6417,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH data",
									"source": 0,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6383,
									"end": 6467,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1542,
									"end": 1689,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1542,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1542,
									"end": 1689,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6771,
									"end": 6783,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2439,
									"end": 2441,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2421,
									"end": 2442,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2478,
									"end": 2480,
									"name": "PUSH",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2458,
									"end": 2476,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2458,
									"end": 2476,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2458,
									"end": 2476,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2481,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2517,
									"end": 2551,
									"name": "PUSH",
									"source": 7,
									"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
								},
								{
									"begin": 2497,
									"end": 2515,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2497,
									"end": 2515,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2497,
									"end": 2515,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2490,
									"end": 2552,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1B9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2568,
									"end": 2586,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2568,
									"end": 2586,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2568,
									"end": 2586,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2561,
									"end": 2597,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2614,
									"end": 2633,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2614,
									"end": 2633,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 2237,
									"end": 2639,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6935,
									"end": 6947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6949,
									"end": 6972,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6982,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6976,
									"end": 6995,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DELEGATECALL",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7057,
									"end": 7069,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7018,
									"end": 7035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7011,
									"end": 7070,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7083,
									"end": 7808,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 7083,
									"end": 7808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7210,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 7226,
									"end": 7233,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7256,
									"end": 7266,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 7249,
									"end": 7266,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7367,
									"end": 7384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7367,
									"end": 7384,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7367,
									"end": 7388,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7625,
									"end": 7635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7619,
									"end": 7636,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7685,
									"end": 7700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7672,
									"end": 7682,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7668,
									"end": 7670,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7683,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7657,
									"end": 7701,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "tag",
									"source": 0,
									"value": "48"
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7764,
									"end": 7776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "51"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 146,
									"end": 404,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 146,
									"end": 404,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 218,
									"end": 219,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 341,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 228,
									"end": 341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 242,
									"end": 248,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 239,
									"end": 240,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 236,
									"end": 249,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 228,
									"end": 341,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 228,
									"end": 341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 228,
									"end": 341,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 318,
									"end": 329,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 318,
									"end": 329,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 318,
									"end": 329,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 312,
									"end": 330,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 299,
									"end": 310,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 299,
									"end": 310,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 299,
									"end": 310,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 292,
									"end": 331,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 264,
									"end": 266,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 257,
									"end": 267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 228,
									"end": 341,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 228,
									"end": 341,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 228,
									"end": 341,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 228,
									"end": 341,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 356,
									"end": 357,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 353,
									"end": 366,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 350,
									"end": 398,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 350,
									"end": 398,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "18"
								},
								{
									"begin": 350,
									"end": 398,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 394,
									"end": 395,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 392,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 376,
									"end": 392,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 369,
									"end": 396,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 146,
									"end": 404,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 497,
									"end": 503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 505,
									"end": 511,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 558,
									"end": 560,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 546,
									"end": 555,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 537,
									"end": 544,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 533,
									"end": 556,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 529,
									"end": 561,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 526,
									"end": 578,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 526,
									"end": 578,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 526,
									"end": 578,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 574,
									"end": 575,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 572,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 564,
									"end": 576,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 526,
									"end": 578,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 526,
									"end": 578,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 600,
									"end": 616,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 600,
									"end": 616,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 645,
									"end": 676,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 645,
									"end": 676,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 635,
									"end": 677,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 635,
									"end": 677,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 625,
									"end": 695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 625,
									"end": 695,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 691,
									"end": 692,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 688,
									"end": 689,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 681,
									"end": 693,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 625,
									"end": 695,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 625,
									"end": 695,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 763,
									"end": 765,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 766,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 748,
									"end": 766,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 742,
									"end": 767,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 714,
									"end": 719,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 714,
									"end": 719,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 816,
									"end": 830,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 816,
									"end": 830,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 816,
									"end": 830,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 813,
									"end": 847,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 813,
									"end": 847,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 813,
									"end": 847,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 843,
									"end": 844,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 841,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 833,
									"end": 845,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 813,
									"end": 847,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 813,
									"end": 847,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 881,
									"end": 887,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 870,
									"end": 879,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 866,
									"end": 888,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 856,
									"end": 888,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 856,
									"end": 888,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 926,
									"end": 933,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 919,
									"end": 923,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 915,
									"end": 917,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 911,
									"end": 924,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 907,
									"end": 934,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 897,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 897,
									"end": 952,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 945,
									"end": 946,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 938,
									"end": 950,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 897,
									"end": 952,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 897,
									"end": 952,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 977,
									"end": 979,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 971,
									"end": 980,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 999,
									"end": 1001,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 995,
									"end": 997,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 992,
									"end": 1002,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 989,
									"end": 1025,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 989,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 989,
									"end": 1025,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 1005,
									"end": 1023,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1080,
									"end": 1082,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1074,
									"end": 1083,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1050,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1134,
									"end": 1147,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1130,
									"end": 1152,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1154,
									"end": 1156,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 1126,
									"end": 1157,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1122,
									"end": 1162,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1110,
									"end": 1163,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1110,
									"end": 1163,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1110,
									"end": 1163,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1178,
									"end": 1196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1178,
									"end": 1196,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1178,
									"end": 1196,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1198,
									"end": 1220,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1175,
									"end": 1221,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1172,
									"end": 1244,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1172,
									"end": 1244,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1172,
									"end": 1244,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1224,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1224,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1224,
									"end": 1242,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1224,
									"end": 1242,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 1224,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1264,
									"end": 1274,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1260,
									"end": 1262,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1253,
									"end": 1275,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1299,
									"end": 1301,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1291,
									"end": 1297,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1284,
									"end": 1302,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1339,
									"end": 1346,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1334,
									"end": 1336,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1329,
									"end": 1331,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1325,
									"end": 1327,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1321,
									"end": 1332,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1317,
									"end": 1337,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1314,
									"end": 1347,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1364,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1311,
									"end": 1364,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1361,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1350,
									"end": 1362,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1311,
									"end": 1364,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 1311,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 1425,
									"end": 1427,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1420,
									"end": 1422,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1412,
									"end": 1418,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1408,
									"end": 1423,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1403,
									"end": 1405,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1399,
									"end": 1401,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1395,
									"end": 1406,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1373,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1373,
									"end": 1428,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1373,
									"end": 1428,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 1373,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1447,
									"end": 1453,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1437,
									"end": 1453,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 409,
									"end": 1459,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1464,
									"end": 1686,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 1464,
									"end": 1686,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1504,
									"end": 1508,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1532,
									"end": 1533,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1529,
									"end": 1530,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1526,
									"end": 1534,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1654,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1654,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1523,
									"end": 1654,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1586,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1571,
									"end": 1574,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1567,
									"end": 1587,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1564,
									"end": 1565,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1557,
									"end": 1588,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1611,
									"end": 1615,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1608,
									"end": 1609,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1601,
									"end": 1616,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1639,
									"end": 1643,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1636,
									"end": 1637,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1629,
									"end": 1644,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1523,
									"end": 1654,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 1523,
									"end": 1654,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1680,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1671,
									"end": 1680,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1464,
									"end": 1686,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1691,
									"end": 1818,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 1691,
									"end": 1818,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1752,
									"end": 1762,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1747,
									"end": 1750,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1743,
									"end": 1763,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1733,
									"end": 1764,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1783,
									"end": 1787,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1780,
									"end": 1781,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1773,
									"end": 1788,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1807,
									"end": 1811,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1804,
									"end": 1805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1797,
									"end": 1812,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2644,
									"end": 2918,
									"name": "tag",
									"source": 7,
									"value": "39"
								},
								{
									"begin": 2644,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2773,
									"end": 2776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2811,
									"end": 2817,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2805,
									"end": 2818,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 2880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2873,
									"end": 2879,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2868,
									"end": 2871,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2861,
									"end": 2865,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2853,
									"end": 2859,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 2849,
									"end": 2866,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2827,
									"end": 2880,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2827,
									"end": 2880,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 2827,
									"end": 2880,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 2827,
									"end": 2880,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2912,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2912,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2912,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2912,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2896,
									"end": 2912,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2644,
									"end": 2918,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2644,
									"end": 2918,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2923,
									"end": 3306,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 2923,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3072,
									"end": 3074,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3061,
									"end": 3070,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3054,
									"end": 3075,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3035,
									"end": 3039,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3104,
									"end": 3110,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3098,
									"end": 3111,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3153,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3142,
									"end": 3144,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3131,
									"end": 3140,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3127,
									"end": 3145,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3120,
									"end": 3154,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3163,
									"end": 3229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3222,
									"end": 3228,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3206,
									"end": 3215,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 3202,
									"end": 3220,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3197,
									"end": 3199,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3189,
									"end": 3195,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3185,
									"end": 3200,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3163,
									"end": 3229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 3163,
									"end": 3229,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3163,
									"end": 3229,
									"name": "tag",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 3163,
									"end": 3229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3290,
									"end": 3292,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 3269,
									"end": 3284,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3265,
									"end": 3294,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3295,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3295,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3250,
									"end": 3295,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3297,
									"end": 3299,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 3246,
									"end": 3300,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3246,
									"end": 3300,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2923,
									"end": 3306,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2923,
									"end": 3306,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 2923,
									"end": 3306,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2923,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 485,
									"end": 1315,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220057fedf1d00261756d595977cd89f47a23402a1cd2f45bf1cdb7d841bb6ac8f164736f6c634300080d0033",
									".code": [
										{
											"begin": 485,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 485,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2257,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2257,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2367,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6371,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH data",
											"source": 0,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6467,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1173,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1173,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1271,
											"end": 1306,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1271,
											"end": 1306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1313,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 883,
											"end": 1778,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 883,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1277,
											"end": 1291,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1292,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1486,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1493,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1584,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1759,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 216,
											"end": 218,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 219,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 255,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 235,
											"end": 253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 235,
											"end": 253,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 228,
											"end": 258,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 294,
											"end": 328,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 274,
											"end": 292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 274,
											"end": 292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 267,
											"end": 329,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 345,
											"end": 363,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 345,
											"end": 363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 345,
											"end": 363,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 338,
											"end": 374,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 391,
											"end": 410,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 391,
											"end": 410,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6976,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7036,
											"end": 7043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7210,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 421,
											"end": 679,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 421,
											"end": 679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 493,
											"end": 494,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 503,
											"end": 616,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 503,
											"end": 616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 514,
											"end": 515,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 511,
											"end": 524,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 503,
											"end": 616,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 503,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 503,
											"end": 616,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 593,
											"end": 604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 593,
											"end": 604,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 593,
											"end": 604,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 587,
											"end": 605,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 574,
											"end": 585,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 574,
											"end": 585,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 574,
											"end": 585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 567,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 539,
											"end": 541,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 532,
											"end": 542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 503,
											"end": 616,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 503,
											"end": 616,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 503,
											"end": 616,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 503,
											"end": 616,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 640,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 631,
											"end": 632,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 628,
											"end": 641,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 625,
											"end": 673,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 625,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 625,
											"end": 673,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 660,
											"end": 666,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 655,
											"end": 658,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 651,
											"end": 667,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 644,
											"end": 671,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 625,
											"end": 673,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 625,
											"end": 673,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 625,
											"end": 673,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 421,
											"end": 679,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 684,
											"end": 958,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 684,
											"end": 958,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 813,
											"end": 816,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 851,
											"end": 857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 845,
											"end": 858,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 908,
											"end": 911,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 901,
											"end": 905,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 893,
											"end": 899,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 889,
											"end": 906,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 867,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 867,
											"end": 920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 936,
											"end": 952,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 936,
											"end": 952,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 684,
											"end": 958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 684,
											"end": 958,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 963,
											"end": 1346,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 963,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1112,
											"end": 1114,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1101,
											"end": 1110,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1115,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1079,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1144,
											"end": 1150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1138,
											"end": 1151,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1193,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1182,
											"end": 1184,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1171,
											"end": 1180,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1167,
											"end": 1185,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1160,
											"end": 1194,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1262,
											"end": 1268,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1257,
											"end": 1259,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1246,
											"end": 1255,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1242,
											"end": 1260,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1237,
											"end": 1239,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1229,
											"end": 1235,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1225,
											"end": 1240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1203,
											"end": 1269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 1203,
											"end": 1269,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1203,
											"end": 1269,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1203,
											"end": 1269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1330,
											"end": 1332,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 1309,
											"end": 1324,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1305,
											"end": 1334,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1335,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1335,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1335,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1337,
											"end": 1339,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1286,
											"end": 1340,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1286,
											"end": 1340,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 963,
											"end": 1346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 963,
											"end": 1346,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the upgradeable proxy with an initial implementation specified by `_logic`. If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded function call, and allows initializating the storage of the proxy like a Solidity constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Proxy.sol\":{\"keccak256\":\"0x2f7c97e3a1541fcd00af599fb6be770518af3af0f984a634d88416b28e9648b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07f75eb2339f80a4fb2c1aa631c67cb6db5e4e4cefaef4cd95a9fb7cfb18b506\",\"dweb:/ipfs/QmbP7hu2HUyrrBnXEh86Kq5C3FZgzyFY8SnbFbYtnGT8Cn\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/Proxy.sol\":{\"keccak256\":\"0x1b9788d2f62369d55aef39442b0a8c9b05114ff6cb0c59b4f0f4485d1648f0f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d1f8588cf1c70820a1aa2249862d663db591327cc0f94efad1d615c3ec76b4\",\"dweb:/ipfs/QmT4FW1G1unTdr7MTNHaUvDndjrM5Gj5AYcFMvkvq3HnXh\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is upgraded."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Proxy.sol\":{\"keccak256\":\"0x1b9788d2f62369d55aef39442b0a8c9b05114ff6cb0c59b4f0f4485d1648f0f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d1f8588cf1c70820a1aa2249862d663db591327cc0f94efad1d615c3ec76b4\",\"dweb:/ipfs/QmT4FW1G1unTdr7MTNHaUvDndjrM5Gj5AYcFMvkvq3HnXh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/StorageSlot.sol\":1207:2426  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1207:2426  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d01d932b696a46728b8687b2b841ad27a000705f211aeee3fe945874dd42db2564736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d01d932b696a46728b8687b2b841ad27a000705f211aeee3fe945874dd42db2564736f6c634300080d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 SAR SWAP4 0x2B PUSH10 0x6A46728B8687B2B841AD 0x27 LOG0 STOP PUSH17 0x5F211AEEE3FE945874DD42DB2564736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "1207:1219:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1207:1219:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d01d932b696a46728b8687b2b841ad27a000705f211aeee3fe945874dd42db2564736f6c634300080d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 SAR SWAP4 0x2B PUSH10 0x6A46728B8687B2B841AD 0x27 LOG0 STOP PUSH17 0x5F211AEEE3FE945874DD42DB2564736F6C PUSH4 0x4300080D STOP CALLER ",
							"sourceMap": "1207:1219:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d01d932b696a46728b8687b2b841ad27a000705f211aeee3fe945874dd42db2564736f6c634300080d0033",
									".code": [
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/TransparentUpgradeableProxy.sol": {
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_logic",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \"admin cannot fallback to proxy target\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.",
						"kind": "dev",
						"methods": {
							"admin()": {
								"details": "Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
							},
							"changeAdmin(address)": {
								"details": "Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
							},
							"constructor": {
								"details": "Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
							},
							"implementation()": {
								"details": "Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
							},
							"upgradeTo(address)": {
								"details": "Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
							},
							"upgradeToAndCall(address,bytes)": {
								"details": "Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1540:5066  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1814:2038  constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1899:1905  _logic */\n  dup3\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1907:1912  _data */\n  dup2\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":983:1037  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_6\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1036:1037  1 */\n  0x01\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":991:1032  keccak256(\"eip1967.proxy.implementation\") */\n  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":983:1037  uint256(keccak256(\"eip1967.proxy.implementation\")) - 1 */\n  tag_7\n  jump\t// in\ntag_6:\n  0x00\n  dup1\n  mload\n  0x20\n  data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":951:1038  _IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1) */\n  eq\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":944:1039  assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.implementation\")) - 1)) */\n  tag_9\n  jumpi\n  tag_9\n  tag_10\n  jump\t// in\ntag_9:\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1049:1088  _upgradeToAndCall(_logic, _data, false) */\n  tag_11\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1067:1073  _logic */\n  dup3\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1075:1080  _data */\n  dup3\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1082:1087  false */\n  0x00\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1049:1066  _upgradeToAndCall */\n  tag_12\n    /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1049:1088  _upgradeToAndCall(_logic, _data, false) */\n  jump\t// in\ntag_11:\n  pop\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1954:1999  uint256(keccak256(\"eip1967.proxy.admin\")) - 1 */\n  tag_14\n  swap1\n  pop\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1998:1999  1 */\n  0x01\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1962:1994  keccak256(\"eip1967.proxy.admin\") */\n  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1954:1999  uint256(keccak256(\"eip1967.proxy.admin\")) - 1 */\n  tag_7\n  jump\t// in\ntag_14:\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1931:2000  _ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1) */\n  eq\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1924:2001  assert(_ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1)) */\n  tag_16\n  jumpi\n  tag_16\n  tag_10\n  jump\t// in\ntag_16:\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2011:2031  _changeAdmin(admin_) */\n  tag_17\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2024:2030  admin_ */\n  dup3\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2011:2023  _changeAdmin */\n  tag_18\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2011:2031  _changeAdmin(admin_) */\n  jump\t// in\ntag_17:\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1814:2038  constructor(address _logic, address admin_, bytes memory _data) payable ERC1967Proxy(_logic, _data) {... */\n  pop\n  pop\n  pop\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1540:5066  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  jump(tag_76)\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2026:2341  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\ntag_12:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2171  _setImplementation(newImplementation) */\n  tag_21\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2153:2170  newImplementation */\n  dup4\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2152  _setImplementation */\n  tag_22\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2171  _setImplementation(newImplementation) */\n  jump\t// in\ntag_21:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2186:2213  Upgraded(newImplementation) */\n  mload(0x40)\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  swap1\n  0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n  swap1\n  0x00\n  swap1\n  log2\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2241:2242  0 */\n  0x00\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2231  data */\n  dup3\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2238  data.length */\n  mload\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2242  data.length > 0 */\n  gt\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2255  data.length > 0 || forceCall */\n  dup1\n  tag_23\n  jumpi\n  pop\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2246:2255  forceCall */\n  dup1\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2255  data.length > 0 || forceCall */\ntag_23:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2223:2335  if (data.length > 0 || forceCall) {... */\n  iszero\n  tag_24\n  jumpi\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2324  Address.functionDelegateCall(newImplementation, data) */\n  tag_25\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2300:2317  newImplementation */\n  dup4\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2319:2323  data */\n  dup4\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2299  Address.functionDelegateCall */\n  or(tag_0_37, shl(0x20, tag_26))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2324  Address.functionDelegateCall(newImplementation, data) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n  pop\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2223:2335  if (data.length > 0 || forceCall) {... */\ntag_24:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2026:2341  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5465:5600  function _changeAdmin(address newAdmin) internal {... */\ntag_18:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5529:5564  AdminChanged(_getAdmin(), newAdmin) */\n  0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5542:5553  _getAdmin() */\n  tag_28\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5542:5551  _getAdmin */\n  tag_29\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5542:5553  _getAdmin() */\n  jump\t// in\ntag_28:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5529:5564  AdminChanged(_getAdmin(), newAdmin) */\n  0x40\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":2238:2253   */\n  swap3\n  dup4\n  and\n    /* \"#utility.yul\":2220:2254   */\n  dup2\n  mstore\n    /* \"#utility.yul\":2290:2305   */\n  swap2\n  dup5\n  and\n    /* \"#utility.yul\":2285:2287   */\n  0x20\n    /* \"#utility.yul\":2270:2288   */\n  dup4\n  add\n    /* \"#utility.yul\":2263:2306   */\n  mstore\n    /* \"#utility.yul\":2155:2173   */\n  add\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5529:5564  AdminChanged(_getAdmin(), newAdmin) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5574:5593  _setAdmin(newAdmin) */\n  tag_32\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5584:5592  newAdmin */\n  dup2\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5574:5583  _setAdmin */\n  tag_33\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5574:5593  _setAdmin(newAdmin) */\n  jump\t// in\ntag_32:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5465:5600  function _changeAdmin(address newAdmin) internal {... */\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\ntag_22:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n  tag_35\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1475:1492  newImplementation */\n  dup2\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1474  Address.isContract */\n  or(tag_0_38, shl(0x20, tag_36))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  tag_37\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2519:2521   */\n  0x20\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2501:2522   */\n  mstore\n    /* \"#utility.yul\":2558:2560   */\n  0x2d\n    /* \"#utility.yul\":2538:2556   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2531:2561   */\n  mstore\n    /* \"#utility.yul\":2597:2631   */\n  0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n    /* \"#utility.yul\":2577:2595   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2570:2632   */\n  mstore\n  shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n    /* \"#utility.yul\":2648:2666   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":2641:2684   */\n  mstore\n    /* \"#utility.yul\":2701:2720   */\n  0x84\n  add\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\ntag_38:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_37:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1610:1627  newImplementation */\n  dup1\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  tag_40\n  0x00\n  dup1\n  mload\n  0x20\n  data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1580:1600  _IMPLEMENTATION_SLOT */\n  0x00\n  shl\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1579  StorageSlot.getAddressSlot */\n  or(tag_0_69, shl(0x20, tag_41))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_40:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1627  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\ntag_26:\n    /* \"contracts/NFTContract2/Address.sol\":6359:6371  bytes memory */\n  0x60\n    /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  tag_43\n    /* \"contracts/NFTContract2/Address.sol\":6411:6417  target */\n  dup4\n    /* \"contracts/NFTContract2/Address.sol\":6419:6423  data */\n  dup4\n    /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n  0x27\n  swap2\n  codecopy\n    /* \"contracts/NFTContract2/Address.sol\":6390:6410  functionDelegateCall */\n  tag_44\n    /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  jump\t// in\ntag_43:\n    /* \"contracts/NFTContract2/Address.sol\":6383:6467  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n  swap4\n    /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4949:5071  function _getAdmin() internal view returns (address) {... */\ntag_29:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4993:5000  address */\n  0x00\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5019:5058  StorageSlot.getAddressSlot(_ADMIN_SLOT) */\n  tag_46\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5046:5057  _ADMIN_SLOT */\n  0x00\n  shl\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5019:5045  StorageSlot.getAddressSlot */\n  or(tag_0_69, shl(0x20, tag_41))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5019:5058  StorageSlot.getAddressSlot(_ADMIN_SLOT) */\n  0x20\n  shr\n  jump\t// in\ntag_46:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5019:5064  StorageSlot.getAddressSlot(_ADMIN_SLOT).value */\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap2\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4949:5071  function _getAdmin() internal view returns (address) {... */\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5153:5354  function _setAdmin(address newAdmin) private {... */\ntag_33:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5216:5238  newAdmin != address(0) */\n  dup2\n  and\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n  tag_48\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":2933:2935   */\n  0x20\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":2915:2936   */\n  mstore\n    /* \"#utility.yul\":2972:2974   */\n  0x26\n    /* \"#utility.yul\":2952:2970   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":2945:2975   */\n  mstore\n    /* \"#utility.yul\":3011:3045   */\n  0x455243313936373a206e65772061646d696e20697320746865207a65726f2061\n    /* \"#utility.yul\":2991:3009   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":2984:3046   */\n  mstore\n  shl(0xd0, 0x646472657373)\n    /* \"#utility.yul\":3062:3080   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3055:3091   */\n  mstore\n    /* \"#utility.yul\":3108:3127   */\n  0x84\n  add\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n  tag_38\n    /* \"#utility.yul\":2731:3133   */\n  jump\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\ntag_48:\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5339:5347  newAdmin */\n  dup1\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5291:5330  StorageSlot.getAddressSlot(_ADMIN_SLOT) */\n  tag_40\n  0x00\n  dup1\n  mload\n  0x20\n  data_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5318:5329  _ADMIN_SLOT */\n  0x00\n  shl\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5291:5317  StorageSlot.getAddressSlot */\n  or(tag_0_69, shl(0x20, tag_41))\n    /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5291:5330  StorageSlot.getAddressSlot(_ADMIN_SLOT) */\n  0x20\n  shr\n  jump\t// in\n    /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\ntag_36:\n    /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n  extcodesize\n    /* \"contracts/NFTContract2/Address.sol\":1116:1124  size > 0 */\n  iszero\n  iszero\n  swap1\n    /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n  jump\t// out\n    /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\ntag_41:\n    /* \"contracts/NFTContract2/StorageSlot.sol\":1669:1673  slot */\n  swap1\n    /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\ntag_44:\n    /* \"contracts/NFTContract2/Address.sol\":6771:6783  bytes memory */\n  0x60\n    /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n  dup4\n  extcodesize\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_56\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":3340:3342   */\n  0x20\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3322:3343   */\n  mstore\n    /* \"#utility.yul\":3379:3381   */\n  0x26\n    /* \"#utility.yul\":3359:3377   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":3352:3382   */\n  mstore\n    /* \"#utility.yul\":3418:3452   */\n  0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n    /* \"#utility.yul\":3398:3416   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":3391:3453   */\n  mstore\n  shl(0xd2, 0x1b9d1c9858dd)\n    /* \"#utility.yul\":3469:3487   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":3462:3498   */\n  mstore\n    /* \"#utility.yul\":3515:3534   */\n  0x84\n  add\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n  tag_38\n    /* \"#utility.yul\":3138:3540   */\n  jump\n    /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\ntag_56:\n    /* \"contracts/NFTContract2/Address.sol\":6935:6947  bool success */\n  0x00\n    /* \"contracts/NFTContract2/Address.sol\":6949:6972  bytes memory returndata */\n  dup1\n    /* \"contracts/NFTContract2/Address.sol\":6976:6982  target */\n  dup6\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/NFTContract2/Address.sol\":6976:6995  target.delegatecall */\n  and\n    /* \"contracts/NFTContract2/Address.sol\":6996:7000  data */\n  dup6\n    /* \"contracts/NFTContract2/Address.sol\":6976:7001  target.delegatecall(data) */\n  mload(0x40)\n  tag_59\n  swap2\n  swap1\n  tag_60\n  jump\t// in\ntag_59:\n  0x00\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup6\n  gas\n  delegatecall\n  swap2\n  pop\n  pop\n  returndatasize\n  dup1\n  0x00\n  dup2\n  eq\n  tag_63\n  jumpi\n  mload(0x40)\n  swap2\n  pop\n  and(add(returndatasize, 0x3f), not(0x1f))\n  dup3\n  add\n  0x40\n  mstore\n  returndatasize\n  dup3\n  mstore\n  returndatasize\n  0x00\n  0x20\n  dup5\n  add\n  returndatacopy\n  jump(tag_62)\ntag_63:\n  0x60\n  swap2\n  pop\ntag_62:\n  pop\n    /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  swap1\n  swap3\n  pop\n  swap1\n  pop\n    /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n  tag_64\n    /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n  dup3\n  dup3\n    /* \"contracts/NFTContract2/Address.sol\":7057:7069  errorMessage */\n  dup7\n    /* \"contracts/NFTContract2/Address.sol\":7018:7035  _verifyCallResult */\n  tag_65\n    /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n  jump\t// in\ntag_64:\n    /* \"contracts/NFTContract2/Address.sol\":7011:7070  return _verifyCallResult(success, returndata, errorMessage) */\n  swap7\n    /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\ntag_65:\n    /* \"contracts/NFTContract2/Address.sol\":7198:7210  bytes memory */\n  0x60\n    /* \"contracts/NFTContract2/Address.sol\":7226:7233  success */\n  dup4\n    /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"contracts/NFTContract2/Address.sol\":7256:7266  returndata */\n  dup2\n    /* \"contracts/NFTContract2/Address.sol\":7249:7266  return returndata */\n  jump(tag_43)\n    /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\ntag_67:\n    /* \"contracts/NFTContract2/Address.sol\":7367:7384  returndata.length */\n  dup3\n  mload\n    /* \"contracts/NFTContract2/Address.sol\":7367:7388  returndata.length > 0 */\n  iszero\n    /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n  tag_69\n  jumpi\n    /* \"contracts/NFTContract2/Address.sol\":7625:7635  returndata */\n  dup3\n    /* \"contracts/NFTContract2/Address.sol\":7619:7636  mload(returndata) */\n  mload\n    /* \"contracts/NFTContract2/Address.sol\":7685:7700  returndata_size */\n  dup1\n    /* \"contracts/NFTContract2/Address.sol\":7672:7682  returndata */\n  dup5\n    /* \"contracts/NFTContract2/Address.sol\":7668:7670  32 */\n  0x20\n    /* \"contracts/NFTContract2/Address.sol\":7664:7683  add(32, returndata) */\n  add\n    /* \"contracts/NFTContract2/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n  revert\n    /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\ntag_69:\n    /* \"contracts/NFTContract2/Address.sol\":7764:7776  errorMessage */\n  dup2\n    /* \"contracts/NFTContract2/Address.sol\":7757:7777  revert(errorMessage) */\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x04\n  add\n  tag_38\n  swap2\n  swap1\n  tag_72\n  jump\t// in\n    /* \"#utility.yul\":14:191   */\ntag_73:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_78:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:323   */\ntag_74:\n    /* \"#utility.yul\":257:267   */\n  0x4e487b71\n    /* \"#utility.yul\":252:255   */\n  0xe0\n    /* \"#utility.yul\":248:268   */\n  shl\n    /* \"#utility.yul\":245:246   */\n  0x00\n    /* \"#utility.yul\":238:269   */\n  mstore\n    /* \"#utility.yul\":288:292   */\n  0x41\n    /* \"#utility.yul\":285:286   */\n  0x04\n    /* \"#utility.yul\":278:293   */\n  mstore\n    /* \"#utility.yul\":312:316   */\n  0x24\n    /* \"#utility.yul\":309:310   */\n  0x00\n    /* \"#utility.yul\":302:317   */\n  revert\n    /* \"#utility.yul\":328:586   */\ntag_75:\n    /* \"#utility.yul\":400:401   */\n  0x00\n    /* \"#utility.yul\":410:523   */\ntag_81:\n    /* \"#utility.yul\":424:430   */\n  dup4\n    /* \"#utility.yul\":421:422   */\n  dup2\n    /* \"#utility.yul\":418:431   */\n  lt\n    /* \"#utility.yul\":410:523   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":500:511   */\n  dup2\n  dup2\n  add\n    /* \"#utility.yul\":494:512   */\n  mload\n    /* \"#utility.yul\":481:492   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":474:513   */\n  mstore\n    /* \"#utility.yul\":446:448   */\n  0x20\n    /* \"#utility.yul\":439:449   */\n  add\n    /* \"#utility.yul\":410:523   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":541:547   */\n  dup4\n    /* \"#utility.yul\":538:539   */\n  dup2\n    /* \"#utility.yul\":535:548   */\n  gt\n    /* \"#utility.yul\":532:580   */\n  iszero\n  tag_25\n  jumpi\n  pop\n  pop\n    /* \"#utility.yul\":576:577   */\n  0x00\n    /* \"#utility.yul\":558:574   */\n  swap2\n  add\n    /* \"#utility.yul\":551:578   */\n  mstore\n    /* \"#utility.yul\":328:586   */\n  jump\t// out\n    /* \"#utility.yul\":591:1644   */\ntag_2:\n    /* \"#utility.yul\":688:694   */\n  0x00\n    /* \"#utility.yul\":696:702   */\n  dup1\n    /* \"#utility.yul\":704:710   */\n  0x00\n    /* \"#utility.yul\":757:759   */\n  0x60\n    /* \"#utility.yul\":745:754   */\n  dup5\n    /* \"#utility.yul\":736:743   */\n  dup7\n    /* \"#utility.yul\":732:755   */\n  sub\n    /* \"#utility.yul\":728:760   */\n  slt\n    /* \"#utility.yul\":725:777   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":773:774   */\n  0x00\n    /* \"#utility.yul\":770:771   */\n  dup1\n    /* \"#utility.yul\":763:775   */\n  revert\n    /* \"#utility.yul\":725:777   */\ntag_86:\n    /* \"#utility.yul\":796:836   */\n  tag_87\n    /* \"#utility.yul\":826:835   */\n  dup5\n    /* \"#utility.yul\":796:836   */\n  tag_73\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":786:836   */\n  swap3\n  pop\n    /* \"#utility.yul\":855:904   */\n  tag_88\n    /* \"#utility.yul\":900:902   */\n  0x20\n    /* \"#utility.yul\":889:898   */\n  dup6\n    /* \"#utility.yul\":885:903   */\n  add\n    /* \"#utility.yul\":855:904   */\n  tag_73\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":948:950   */\n  0x40\n    /* \"#utility.yul\":933:951   */\n  dup6\n  add\n    /* \"#utility.yul\":927:952   */\n  mload\n    /* \"#utility.yul\":845:904   */\n  swap1\n  swap3\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1001:1015   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":998:1032   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1028:1029   */\n  0x00\n    /* \"#utility.yul\":1025:1026   */\n  dup1\n    /* \"#utility.yul\":1018:1030   */\n  revert\n    /* \"#utility.yul\":998:1032   */\ntag_89:\n    /* \"#utility.yul\":1066:1072   */\n  dup2\n    /* \"#utility.yul\":1055:1064   */\n  dup7\n    /* \"#utility.yul\":1051:1073   */\n  add\n    /* \"#utility.yul\":1041:1073   */\n  swap2\n  pop\n    /* \"#utility.yul\":1111:1118   */\n  dup7\n    /* \"#utility.yul\":1104:1108   */\n  0x1f\n    /* \"#utility.yul\":1100:1102   */\n  dup4\n    /* \"#utility.yul\":1096:1109   */\n  add\n    /* \"#utility.yul\":1092:1119   */\n  slt\n    /* \"#utility.yul\":1082:1137   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1133:1134   */\n  0x00\n    /* \"#utility.yul\":1130:1131   */\n  dup1\n    /* \"#utility.yul\":1123:1135   */\n  revert\n    /* \"#utility.yul\":1082:1137   */\ntag_90:\n    /* \"#utility.yul\":1162:1164   */\n  dup2\n    /* \"#utility.yul\":1156:1165   */\n  mload\n    /* \"#utility.yul\":1184:1186   */\n  dup2\n    /* \"#utility.yul\":1180:1182   */\n  dup2\n    /* \"#utility.yul\":1177:1187   */\n  gt\n    /* \"#utility.yul\":1174:1210   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1190:1208   */\n  tag_92\n  tag_74\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1265:1267   */\n  0x40\n    /* \"#utility.yul\":1259:1268   */\n  mload\n    /* \"#utility.yul\":1233:1235   */\n  0x1f\n    /* \"#utility.yul\":1319:1332   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":1315:1337   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":1339:1341   */\n  0x3f\n    /* \"#utility.yul\":1311:1342   */\n  add\n    /* \"#utility.yul\":1307:1347   */\n  and\n    /* \"#utility.yul\":1295:1348   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":1363:1381   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":1383:1405   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":1360:1406   */\n  or\n    /* \"#utility.yul\":1357:1429   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":1409:1427   */\n  tag_94\n  tag_74\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1449:1459   */\n  dup2\n    /* \"#utility.yul\":1445:1447   */\n  0x40\n    /* \"#utility.yul\":1438:1460   */\n  mstore\n    /* \"#utility.yul\":1484:1486   */\n  dup3\n    /* \"#utility.yul\":1476:1482   */\n  dup2\n    /* \"#utility.yul\":1469:1487   */\n  mstore\n    /* \"#utility.yul\":1524:1531   */\n  dup10\n    /* \"#utility.yul\":1519:1521   */\n  0x20\n    /* \"#utility.yul\":1514:1516   */\n  dup5\n    /* \"#utility.yul\":1510:1512   */\n  dup8\n    /* \"#utility.yul\":1506:1517   */\n  add\n    /* \"#utility.yul\":1502:1522   */\n  add\n    /* \"#utility.yul\":1499:1532   */\n  gt\n    /* \"#utility.yul\":1496:1549   */\n  iszero\n  tag_95\n  jumpi\n    /* \"#utility.yul\":1545:1546   */\n  0x00\n    /* \"#utility.yul\":1542:1543   */\n  dup1\n    /* \"#utility.yul\":1535:1547   */\n  revert\n    /* \"#utility.yul\":1496:1549   */\ntag_95:\n    /* \"#utility.yul\":1558:1613   */\n  tag_96\n    /* \"#utility.yul\":1610:1612   */\n  dup4\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1597:1603   */\n  dup4\n    /* \"#utility.yul\":1593:1608   */\n  add\n    /* \"#utility.yul\":1588:1590   */\n  0x20\n    /* \"#utility.yul\":1584:1586   */\n  dup9\n    /* \"#utility.yul\":1580:1591   */\n  add\n    /* \"#utility.yul\":1558:1613   */\n  tag_75\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":1632:1638   */\n  dup1\n    /* \"#utility.yul\":1622:1638   */\n  swap6\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":591:1644   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1649:1871   */\ntag_7:\n    /* \"#utility.yul\":1689:1693   */\n  0x00\n    /* \"#utility.yul\":1717:1718   */\n  dup3\n    /* \"#utility.yul\":1714:1715   */\n  dup3\n    /* \"#utility.yul\":1711:1719   */\n  lt\n    /* \"#utility.yul\":1708:1839   */\n  iszero\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1761:1771   */\n  0x4e487b71\n    /* \"#utility.yul\":1756:1759   */\n  0xe0\n    /* \"#utility.yul\":1752:1772   */\n  shl\n    /* \"#utility.yul\":1749:1750   */\n  0x00\n    /* \"#utility.yul\":1742:1773   */\n  mstore\n    /* \"#utility.yul\":1796:1800   */\n  0x11\n    /* \"#utility.yul\":1793:1794   */\n  0x04\n    /* \"#utility.yul\":1786:1801   */\n  mstore\n    /* \"#utility.yul\":1824:1828   */\n  0x24\n    /* \"#utility.yul\":1821:1822   */\n  0x00\n    /* \"#utility.yul\":1814:1829   */\n  revert\n    /* \"#utility.yul\":1708:1839   */\ntag_98:\n  pop\n    /* \"#utility.yul\":1856:1865   */\n  sub\n  swap1\n    /* \"#utility.yul\":1649:1871   */\n  jump\t// out\n    /* \"#utility.yul\":1876:2003   */\ntag_10:\n    /* \"#utility.yul\":1937:1947   */\n  0x4e487b71\n    /* \"#utility.yul\":1932:1935   */\n  0xe0\n    /* \"#utility.yul\":1928:1948   */\n  shl\n    /* \"#utility.yul\":1925:1926   */\n  0x00\n    /* \"#utility.yul\":1918:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x01\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":3545:3819   */\ntag_60:\n    /* \"#utility.yul\":3674:3677   */\n  0x00\n    /* \"#utility.yul\":3712:3718   */\n  dup3\n    /* \"#utility.yul\":3706:3719   */\n  mload\n    /* \"#utility.yul\":3728:3781   */\n  tag_105\n    /* \"#utility.yul\":3774:3780   */\n  dup2\n    /* \"#utility.yul\":3769:3772   */\n  dup5\n    /* \"#utility.yul\":3762:3766   */\n  0x20\n    /* \"#utility.yul\":3754:3760   */\n  dup8\n    /* \"#utility.yul\":3750:3767   */\n  add\n    /* \"#utility.yul\":3728:3781   */\n  tag_75\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":3797:3813   */\n  swap2\n  swap1\n  swap2\n  add\n  swap3\n    /* \"#utility.yul\":3545:3819   */\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3824:4207   */\ntag_72:\n    /* \"#utility.yul\":3973:3975   */\n  0x20\n    /* \"#utility.yul\":3962:3971   */\n  dup2\n    /* \"#utility.yul\":3955:3976   */\n  mstore\n    /* \"#utility.yul\":3936:3940   */\n  0x00\n    /* \"#utility.yul\":4005:4011   */\n  dup3\n    /* \"#utility.yul\":3999:4012   */\n  mload\n    /* \"#utility.yul\":4048:4054   */\n  dup1\n    /* \"#utility.yul\":4043:4045   */\n  0x20\n    /* \"#utility.yul\":4032:4041   */\n  dup5\n    /* \"#utility.yul\":4028:4046   */\n  add\n    /* \"#utility.yul\":4021:4055   */\n  mstore\n    /* \"#utility.yul\":4064:4130   */\n  tag_107\n    /* \"#utility.yul\":4123:4129   */\n  dup2\n    /* \"#utility.yul\":4118:4120   */\n  0x40\n    /* \"#utility.yul\":4107:4116   */\n  dup6\n    /* \"#utility.yul\":4103:4121   */\n  add\n    /* \"#utility.yul\":4098:4100   */\n  0x20\n    /* \"#utility.yul\":4090:4096   */\n  dup8\n    /* \"#utility.yul\":4086:4101   */\n  add\n    /* \"#utility.yul\":4064:4130   */\n  tag_75\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4191:4193   */\n  0x1f\n    /* \"#utility.yul\":4170:4185   */\n  add\n  not(0x1f)\n    /* \"#utility.yul\":4166:4195   */\n  and\n    /* \"#utility.yul\":4151:4196   */\n  swap2\n  swap1\n  swap2\n  add\n    /* \"#utility.yul\":4198:4200   */\n  0x40\n    /* \"#utility.yul\":4147:4201   */\n  add\n  swap3\n    /* \"#utility.yul\":3824:4207   */\n  swap2\n  pop\n  pop\n  jump\t// out\ntag_76:\n    /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1540:5066  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_52df0bdf5a5f92d8037cf11e50f13d8017aefc99d20a73c826416df79570d481 b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\ndata_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\ndata_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1540:5066  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5c60da1b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/NFTContract2/Proxy.sol\":2835:2846  _fallback() */\n      tag_10\n        /* \"contracts/NFTContract2/Proxy.sol\":2835:2844  _fallback */\n      tag_11\n        /* \"contracts/NFTContract2/Proxy.sol\":2835:2846  _fallback() */\n      jump\t// in\n    tag_10:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":1540:5066  contract TransparentUpgradeableProxy is ERC1967Proxy {... */\n      stop\n    tag_2:\n        /* \"contracts/NFTContract2/Proxy.sol\":2611:2622  _fallback() */\n      tag_10\n        /* \"contracts/NFTContract2/Proxy.sol\":2611:2620  _fallback */\n      tag_11\n        /* \"contracts/NFTContract2/Proxy.sol\":2611:2622  _fallback() */\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3908:4042  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      tag_10\n      tag_17\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_17:\n      tag_19\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4418:4582  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {... */\n    tag_4:\n      tag_10\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3311:3440  function implementation() external ifAdmin returns (address implementation_) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1217:1249   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1199:1250   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1187:1189   */\n      0x20\n        /* \"#utility.yul\":1172:1190   */\n      add\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3311:3440  function implementation() external ifAdmin returns (address implementation_) {... */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3645:3748  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_10\n      tag_31\n      calldatasize\n      0x04\n      tag_18\n      jump\t// in\n    tag_31:\n      tag_32\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2755:2851  function admin() external ifAdmin returns (address admin_) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_25\n      tag_35\n      jump\t// in\n        /* \"contracts/NFTContract2/Proxy.sol\":2257:2367  function _fallback() internal virtual {... */\n    tag_11:\n        /* \"contracts/NFTContract2/Proxy.sol\":2305:2322  _beforeFallback() */\n      tag_41\n        /* \"contracts/NFTContract2/Proxy.sol\":2305:2320  _beforeFallback */\n      tag_42\n        /* \"contracts/NFTContract2/Proxy.sol\":2305:2322  _beforeFallback() */\n      jump\t// in\n    tag_41:\n        /* \"contracts/NFTContract2/Proxy.sol\":2332:2360  _delegate(_implementation()) */\n      tag_43\n        /* \"contracts/NFTContract2/Proxy.sol\":2342:2359  _implementation() */\n      tag_44\n        /* \"contracts/NFTContract2/Proxy.sol\":2342:2357  _implementation */\n      tag_45\n        /* \"contracts/NFTContract2/Proxy.sol\":2342:2359  _implementation() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/NFTContract2/Proxy.sol\":2332:2341  _delegate */\n      tag_46\n        /* \"contracts/NFTContract2/Proxy.sol\":2332:2360  _delegate(_implementation()) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/NFTContract2/Proxy.sol\":2257:2367  function _fallback() internal virtual {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3908:4042  function upgradeTo(address newImplementation) external ifAdmin {... */\n    tag_19:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      tag_48\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2235  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      jump\t// in\n    tag_48:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      and\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2222  msg.sender */\n      caller\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      sub\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n      tag_50\n      jumpi\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3981:4035  _upgradeToAndCall(newImplementation, bytes(\"\"), false) */\n      tag_52\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3999:4016  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4018:4027  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4029:4034  false */\n      0x00\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3981:3998  _upgradeToAndCall */\n      tag_53\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3981:4035  _upgradeToAndCall(newImplementation, bytes(\"\"), false) */\n      jump\t// in\n    tag_52:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3908:4042  function upgradeTo(address newImplementation) external ifAdmin {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n    tag_50:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2296  _fallback() */\n      tag_52\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2294  _fallback */\n      tag_11\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2296  _fallback() */\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4418:4582  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {... */\n    tag_23:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      tag_57\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2235  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      jump\t// in\n    tag_57:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      and\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2222  msg.sender */\n      caller\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      sub\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n      tag_58\n      jumpi\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4527:4575  _upgradeToAndCall(newImplementation, data, true) */\n      tag_60\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4545:4562  newImplementation */\n      dup4\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4564:4568  data */\n      dup4\n      dup4\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4527:4575  _upgradeToAndCall(newImplementation, data, true) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4570:4574  true */\n      0x01\n      swap3\n      pop\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4527:4544  _upgradeToAndCall */\n      tag_53\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4527:4575  _upgradeToAndCall(newImplementation, data, true) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4418:4582  function upgradeToAndCall(address newImplementation, bytes calldata data) external payable ifAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n    tag_58:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2296  _fallback() */\n      tag_60\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2294  _fallback */\n      tag_11\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2296  _fallback() */\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3311:3440  function implementation() external ifAdmin returns (address implementation_) {... */\n    tag_26:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3363:3386  address implementation_ */\n      0x00\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      tag_64\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2235  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      and\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2222  msg.sender */\n      caller\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      sub\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n      tag_65\n      jumpi\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3416:3433  _implementation() */\n      tag_67\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3416:3431  _implementation */\n      tag_45\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3416:3433  _implementation() */\n      jump\t// in\n    tag_67:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3398:3433  implementation_ = _implementation() */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3311:3440  function implementation() external ifAdmin returns (address implementation_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n    tag_65:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2296  _fallback() */\n      tag_69\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2294  _fallback */\n      tag_11\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2285:2296  _fallback() */\n      jump\t// in\n    tag_69:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3311:3440  function implementation() external ifAdmin returns (address implementation_) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3645:3748  function changeAdmin(address newAdmin) external virtual ifAdmin {... */\n    tag_32:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      tag_71\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2235  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      jump\t// in\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      and\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2222  msg.sender */\n      caller\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      sub\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n      tag_50\n      jumpi\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3719:3741  _changeAdmin(newAdmin) */\n      tag_52\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3732:3740  newAdmin */\n      dup2\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3719:3731  _changeAdmin */\n      tag_75\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":3719:3741  _changeAdmin(newAdmin) */\n      jump\t// in\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2755:2851  function admin() external ifAdmin returns (address admin_) {... */\n    tag_35:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2798:2812  address admin_ */\n      0x00\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      tag_79\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2235  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2226:2237  _getAdmin() */\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      and\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2222  msg.sender */\n      caller\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2212:2237  msg.sender == _getAdmin() */\n      sub\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2208:2307  if (msg.sender == _getAdmin()) {... */\n      tag_65\n      jumpi\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2833:2844  _getAdmin() */\n      tag_67\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2833:2842  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":2833:2844  _getAdmin() */\n      jump\t// in\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_37:\n        /* \"contracts/NFTContract2/Address.sol\":6359:6371  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_86\n        /* \"contracts/NFTContract2/Address.sol\":6411:6417  target */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6419:6423  data */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/NFTContract2/Address.sol\":6390:6410  functionDelegateCall */\n      tag_87\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_86:\n        /* \"contracts/NFTContract2/Address.sol\":6383:6467  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_38:\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"contracts/NFTContract2/Address.sol\":1116:1124  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4857:5064  function _beforeFallback() internal virtual override {... */\n    tag_42:\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4942:4953  _getAdmin() */\n      tag_91\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4942:4951  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4942:4953  _getAdmin() */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4928:4953  msg.sender != _getAdmin() */\n      and\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4928:4938  msg.sender */\n      caller\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4928:4953  msg.sender != _getAdmin() */\n      sub\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4920:5024  require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\") */\n      tag_43\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1463:1465   */\n      0x20\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4920:5024  require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1445:1466   */\n      mstore\n        /* \"#utility.yul\":1502:1504   */\n      0x42\n        /* \"#utility.yul\":1482:1500   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1475:1505   */\n      mstore\n        /* \"#utility.yul\":1541:1575   */\n      0x5472616e73706172656e745570677261646561626c6550726f78793a2061646d\n        /* \"#utility.yul\":1521:1539   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1514:1576   */\n      mstore\n        /* \"#utility.yul\":1612:1646   */\n      0x696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267\n        /* \"#utility.yul\":1592:1610   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1585:1647   */\n      mstore\n      shl(0xf2, 0x195d)\n        /* \"#utility.yul\":1663:1682   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":1656:1689   */\n      mstore\n        /* \"#utility.yul\":1706:1725   */\n      0xa4\n      add\n        /* \"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":4920:5024  require(msg.sender != _getAdmin(), \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\") */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1173:1313  function _implementation() internal view virtual override returns (address impl) {... */\n    tag_45:\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1240:1252  address impl */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1271:1306  ERC1967Upgrade._getImplementation() */\n      tag_67\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1271:1304  ERC1967Upgrade._getImplementation */\n      tag_99\n        /* \"contracts/NFTContract2/ERC1967Proxy.sol\":1271:1306  ERC1967Upgrade._getImplementation() */\n      jump\t// in\n        /* \"contracts/NFTContract2/Proxy.sol\":883:1778  function _delegate(address implementation) internal virtual {... */\n    tag_46:\n        /* \"contracts/NFTContract2/Proxy.sol\":1277:1291  calldatasize() */\n      calldatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1274:1275  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1271:1272  0 */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1258:1292  calldatacopy(0, 0, calldatasize()) */\n      calldatacopy\n        /* \"contracts/NFTContract2/Proxy.sol\":1491:1492  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1488:1489  0 */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1472:1486  calldatasize() */\n      calldatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1469:1470  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1453:1467  implementation */\n      dup5\n        /* \"contracts/NFTContract2/Proxy.sol\":1446:1451  gas() */\n      gas\n        /* \"contracts/NFTContract2/Proxy.sol\":1433:1493  delegatecall(gas(), implementation, 0, calldatasize(), 0, 0) */\n      delegatecall\n        /* \"contracts/NFTContract2/Proxy.sol\":1567:1583  returndatasize() */\n      returndatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1564:1565  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1561:1562  0 */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1546:1584  returndatacopy(0, 0, returndatasize()) */\n      returndatacopy\n        /* \"contracts/NFTContract2/Proxy.sol\":1605:1611  result */\n      dup1\n        /* \"contracts/NFTContract2/Proxy.sol\":1672:1710  case 0 { revert(0, returndatasize()) } */\n      dup1\n      iszero\n      tag_102\n      jumpi\n        /* \"contracts/NFTContract2/Proxy.sol\":1743:1759  returndatasize() */\n      returndatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1740:1741  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1733:1760  return(0, returndatasize()) */\n      return\n        /* \"contracts/NFTContract2/Proxy.sol\":1672:1710  case 0 { revert(0, returndatasize()) } */\n    tag_102:\n        /* \"contracts/NFTContract2/Proxy.sol\":1691:1707  returndatasize() */\n      returndatasize\n        /* \"contracts/NFTContract2/Proxy.sol\":1688:1689  0 */\n      0x00\n        /* \"contracts/NFTContract2/Proxy.sol\":1681:1708  revert(0, returndatasize()) */\n      revert\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4949:5071  function _getAdmin() internal view returns (address) {... */\n    tag_49:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4993:5000  address */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4683:4749  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5019:5058  StorageSlot.getAddressSlot(_ADMIN_SLOT) */\n    tag_104:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5019:5064  StorageSlot.getAddressSlot(_ADMIN_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4949:5071  function _getAdmin() internal view returns (address) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2026:2341  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_53:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2171  _setImplementation(newImplementation) */\n      tag_106\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2153:2170  newImplementation */\n      dup4\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2152  _setImplementation */\n      tag_107\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2134:2171  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_106:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2186:2213  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2241:2242  0 */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2231  data */\n      dup3\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2238  data.length */\n      mload\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2242  data.length > 0 */\n      gt\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2255  data.length > 0 || forceCall */\n      dup1\n      tag_108\n      jumpi\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2246:2255  forceCall */\n      dup1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2227:2255  data.length > 0 || forceCall */\n    tag_108:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2223:2335  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2324  Address.functionDelegateCall(newImplementation, data) */\n      tag_110\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2300:2317  newImplementation */\n      dup4\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2319:2323  data */\n      dup4\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2299  Address.functionDelegateCall */\n      tag_37\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2271:2324  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_110:\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2026:2341  function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5465:5600  function _changeAdmin(address newAdmin) internal {... */\n    tag_75:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5529:5564  AdminChanged(_getAdmin(), newAdmin) */\n      0x7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5542:5553  _getAdmin() */\n      tag_112\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5542:5551  _getAdmin */\n      tag_49\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5542:5553  _getAdmin() */\n      jump\t// in\n    tag_112:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5529:5564  AdminChanged(_getAdmin(), newAdmin) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1966:1981   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":1948:1982   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2018:2033   */\n      swap2\n      dup5\n      and\n        /* \"#utility.yul\":2013:2015   */\n      0x20\n        /* \"#utility.yul\":1998:2016   */\n      dup4\n      add\n        /* \"#utility.yul\":1991:2034   */\n      mstore\n        /* \"#utility.yul\":1883:1901   */\n      add\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5529:5564  AdminChanged(_getAdmin(), newAdmin) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5574:5593  _setAdmin(newAdmin) */\n      tag_52\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5584:5592  newAdmin */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5574:5583  _setAdmin */\n      tag_116\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5574:5593  _setAdmin(newAdmin) */\n      jump\t// in\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_87:\n        /* \"contracts/NFTContract2/Address.sol\":6771:6783  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      dup4\n      extcodesize\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2247:2249   */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2229:2250   */\n      mstore\n        /* \"#utility.yul\":2286:2288   */\n      0x26\n        /* \"#utility.yul\":2266:2284   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2259:2289   */\n      mstore\n        /* \"#utility.yul\":2325:2359   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":2305:2323   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2298:2360   */\n      mstore\n      shl(0xd2, 0x1b9d1c9858dd)\n        /* \"#utility.yul\":2376:2394   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2369:2405   */\n      mstore\n        /* \"#utility.yul\":2422:2441   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_93\n        /* \"#utility.yul\":2045:2447   */\n      jump\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n    tag_119:\n        /* \"contracts/NFTContract2/Address.sol\":6935:6947  bool success */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":6949:6972  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":6976:6982  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/Address.sol\":6976:6995  target.delegatecall */\n      and\n        /* \"contracts/NFTContract2/Address.sol\":6996:7000  data */\n      dup6\n        /* \"contracts/NFTContract2/Address.sol\":6976:7001  target.delegatecall(data) */\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_126\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_125)\n    tag_126:\n      0x60\n      swap2\n      pop\n    tag_125:\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      tag_127\n        /* \"contracts/NFTContract2/Address.sol\":7036:7043  success */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7045:7055  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7057:7069  errorMessage */\n      dup7\n        /* \"contracts/NFTContract2/Address.sol\":7018:7035  _verifyCallResult */\n      tag_128\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/NFTContract2/Address.sol\":7011:7070  return _verifyCallResult(success, returndata, errorMessage) */\n      swap7\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1144:1284  function _getImplementation() internal view returns (address) {... */\n    tag_99:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1197:1204  address */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1271  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_104\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n    tag_107:\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      dup1\n      extcodesize\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3196:3198   */\n      0x20\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3178:3199   */\n      mstore\n        /* \"#utility.yul\":3235:3237   */\n      0x2d\n        /* \"#utility.yul\":3215:3233   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3208:3238   */\n      mstore\n        /* \"#utility.yul\":3274:3308   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":3254:3272   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3247:3309   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":3325:3343   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3318:3361   */\n      mstore\n        /* \"#utility.yul\":3378:3397   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_93\n        /* \"#utility.yul\":2994:3403   */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_134:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1610:1627  newImplementation */\n      dup1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n    tag_137:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1627  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5153:5354  function _setAdmin(address newAdmin) private {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5216:5238  newAdmin != address(0) */\n      dup2\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3610:3612   */\n      0x20\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3592:3613   */\n      mstore\n        /* \"#utility.yul\":3649:3651   */\n      0x26\n        /* \"#utility.yul\":3629:3647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3622:3652   */\n      mstore\n        /* \"#utility.yul\":3688:3722   */\n      0x455243313936373a206e65772061646d696e20697320746865207a65726f2061\n        /* \"#utility.yul\":3668:3686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3661:3723   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":3739:3757   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3732:3768   */\n      mstore\n        /* \"#utility.yul\":3785:3804   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n      tag_93\n        /* \"#utility.yul\":3408:3810   */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5208:5281  require(newAdmin != address(0), \"ERC1967: new admin is the zero address\") */\n    tag_139:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5339:5347  newAdmin */\n      dup1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":4683:4749  0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103 */\n      0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":5291:5330  StorageSlot.getAddressSlot(_ADMIN_SLOT) */\n      tag_137\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      jump\n        /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_128:\n        /* \"contracts/NFTContract2/Address.sol\":7198:7210  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":7226:7233  success */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n      iszero\n      tag_144\n      jumpi\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7256:7266  returndata */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7249:7266  return returndata */\n      jump(tag_86)\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n    tag_144:\n        /* \"contracts/NFTContract2/Address.sol\":7367:7384  returndata.length */\n      dup3\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7367:7388  returndata.length > 0 */\n      iszero\n        /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n      tag_146\n      jumpi\n        /* \"contracts/NFTContract2/Address.sol\":7625:7635  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7619:7636  mload(returndata) */\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7685:7700  returndata_size */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":7672:7682  returndata */\n      dup5\n        /* \"contracts/NFTContract2/Address.sol\":7668:7670  32 */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":7664:7683  add(32, returndata) */\n      add\n        /* \"contracts/NFTContract2/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n    tag_146:\n        /* \"contracts/NFTContract2/Address.sol\":7764:7776  errorMessage */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7757:7777  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_150:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_154\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_154:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_18:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_156:\n        /* \"#utility.yul\":343:372   */\n      tag_86\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_150\n      jump\t// in\n        /* \"#utility.yul\":383:1048   */\n    tag_22:\n        /* \"#utility.yul\":462:468   */\n      0x00\n        /* \"#utility.yul\":470:476   */\n      dup1\n        /* \"#utility.yul\":478:484   */\n      0x00\n        /* \"#utility.yul\":531:533   */\n      0x40\n        /* \"#utility.yul\":519:528   */\n      dup5\n        /* \"#utility.yul\":510:517   */\n      dup7\n        /* \"#utility.yul\":506:529   */\n      sub\n        /* \"#utility.yul\":502:534   */\n      slt\n        /* \"#utility.yul\":499:551   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":547:548   */\n      0x00\n        /* \"#utility.yul\":544:545   */\n      dup1\n        /* \"#utility.yul\":537:549   */\n      revert\n        /* \"#utility.yul\":499:551   */\n    tag_159:\n        /* \"#utility.yul\":570:599   */\n      tag_160\n        /* \"#utility.yul\":589:598   */\n      dup5\n        /* \"#utility.yul\":570:599   */\n      tag_150\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":560:599   */\n      swap3\n      pop\n        /* \"#utility.yul\":650:652   */\n      0x20\n        /* \"#utility.yul\":639:648   */\n      dup5\n        /* \"#utility.yul\":635:653   */\n      add\n        /* \"#utility.yul\":622:654   */\n      calldataload\n        /* \"#utility.yul\":673:691   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":714:716   */\n      dup1\n        /* \"#utility.yul\":706:712   */\n      dup3\n        /* \"#utility.yul\":703:717   */\n      gt\n        /* \"#utility.yul\":700:734   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":730:731   */\n      0x00\n        /* \"#utility.yul\":727:728   */\n      dup1\n        /* \"#utility.yul\":720:732   */\n      revert\n        /* \"#utility.yul\":700:734   */\n    tag_161:\n        /* \"#utility.yul\":768:774   */\n      dup2\n        /* \"#utility.yul\":757:766   */\n      dup7\n        /* \"#utility.yul\":753:775   */\n      add\n        /* \"#utility.yul\":743:775   */\n      swap2\n      pop\n        /* \"#utility.yul\":813:820   */\n      dup7\n        /* \"#utility.yul\":806:810   */\n      0x1f\n        /* \"#utility.yul\":802:804   */\n      dup4\n        /* \"#utility.yul\":798:811   */\n      add\n        /* \"#utility.yul\":794:821   */\n      slt\n        /* \"#utility.yul\":784:839   */\n      tag_162\n      jumpi\n        /* \"#utility.yul\":835:836   */\n      0x00\n        /* \"#utility.yul\":832:833   */\n      dup1\n        /* \"#utility.yul\":825:837   */\n      revert\n        /* \"#utility.yul\":784:839   */\n    tag_162:\n        /* \"#utility.yul\":875:877   */\n      dup2\n        /* \"#utility.yul\":862:878   */\n      calldataload\n        /* \"#utility.yul\":901:903   */\n      dup2\n        /* \"#utility.yul\":893:899   */\n      dup2\n        /* \"#utility.yul\":890:904   */\n      gt\n        /* \"#utility.yul\":887:921   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":917:918   */\n      0x00\n        /* \"#utility.yul\":914:915   */\n      dup1\n        /* \"#utility.yul\":907:919   */\n      revert\n        /* \"#utility.yul\":887:921   */\n    tag_163:\n        /* \"#utility.yul\":962:969   */\n      dup8\n        /* \"#utility.yul\":957:959   */\n      0x20\n        /* \"#utility.yul\":948:954   */\n      dup3\n        /* \"#utility.yul\":944:946   */\n      dup6\n        /* \"#utility.yul\":940:955   */\n      add\n        /* \"#utility.yul\":936:960   */\n      add\n        /* \"#utility.yul\":933:970   */\n      gt\n        /* \"#utility.yul\":930:987   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":983:984   */\n      0x00\n        /* \"#utility.yul\":980:981   */\n      dup1\n        /* \"#utility.yul\":973:985   */\n      revert\n        /* \"#utility.yul\":930:987   */\n    tag_164:\n        /* \"#utility.yul\":1014:1016   */\n      0x20\n        /* \"#utility.yul\":1010:1012   */\n      dup4\n        /* \"#utility.yul\":1006:1017   */\n      add\n        /* \"#utility.yul\":996:1017   */\n      swap5\n      pop\n        /* \"#utility.yul\":1036:1042   */\n      dup1\n        /* \"#utility.yul\":1026:1042   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":383:1048   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2452:2710   */\n    tag_151:\n        /* \"#utility.yul\":2524:2525   */\n      0x00\n        /* \"#utility.yul\":2534:2647   */\n    tag_170:\n        /* \"#utility.yul\":2548:2554   */\n      dup4\n        /* \"#utility.yul\":2545:2546   */\n      dup2\n        /* \"#utility.yul\":2542:2555   */\n      lt\n        /* \"#utility.yul\":2534:2647   */\n      iszero\n      tag_172\n      jumpi\n        /* \"#utility.yul\":2624:2635   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":2618:2636   */\n      mload\n        /* \"#utility.yul\":2605:2616   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":2598:2637   */\n      mstore\n        /* \"#utility.yul\":2570:2572   */\n      0x20\n        /* \"#utility.yul\":2563:2573   */\n      add\n        /* \"#utility.yul\":2534:2647   */\n      jump(tag_170)\n    tag_172:\n        /* \"#utility.yul\":2665:2671   */\n      dup4\n        /* \"#utility.yul\":2662:2663   */\n      dup2\n        /* \"#utility.yul\":2659:2672   */\n      gt\n        /* \"#utility.yul\":2656:2704   */\n      iszero\n      tag_110\n      jumpi\n      pop\n      pop\n        /* \"#utility.yul\":2700:2701   */\n      0x00\n        /* \"#utility.yul\":2682:2698   */\n      swap2\n      add\n        /* \"#utility.yul\":2675:2702   */\n      mstore\n        /* \"#utility.yul\":2452:2710   */\n      jump\t// out\n        /* \"#utility.yul\":2715:2989   */\n    tag_123:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2882:2888   */\n      dup3\n        /* \"#utility.yul\":2876:2889   */\n      mload\n        /* \"#utility.yul\":2898:2951   */\n      tag_175\n        /* \"#utility.yul\":2944:2950   */\n      dup2\n        /* \"#utility.yul\":2939:2942   */\n      dup5\n        /* \"#utility.yul\":2932:2936   */\n      0x20\n        /* \"#utility.yul\":2924:2930   */\n      dup8\n        /* \"#utility.yul\":2920:2937   */\n      add\n        /* \"#utility.yul\":2898:2951   */\n      tag_151\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":2967:2983   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":2715:2989   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4198   */\n    tag_149:\n        /* \"#utility.yul\":3964:3966   */\n      0x20\n        /* \"#utility.yul\":3953:3962   */\n      dup2\n        /* \"#utility.yul\":3946:3967   */\n      mstore\n        /* \"#utility.yul\":3927:3931   */\n      0x00\n        /* \"#utility.yul\":3996:4002   */\n      dup3\n        /* \"#utility.yul\":3990:4003   */\n      mload\n        /* \"#utility.yul\":4039:4045   */\n      dup1\n        /* \"#utility.yul\":4034:4036   */\n      0x20\n        /* \"#utility.yul\":4023:4032   */\n      dup5\n        /* \"#utility.yul\":4019:4037   */\n      add\n        /* \"#utility.yul\":4012:4046   */\n      mstore\n        /* \"#utility.yul\":4055:4121   */\n      tag_179\n        /* \"#utility.yul\":4114:4120   */\n      dup2\n        /* \"#utility.yul\":4109:4111   */\n      0x40\n        /* \"#utility.yul\":4098:4107   */\n      dup6\n        /* \"#utility.yul\":4094:4112   */\n      add\n        /* \"#utility.yul\":4089:4091   */\n      0x20\n        /* \"#utility.yul\":4081:4087   */\n      dup8\n        /* \"#utility.yul\":4077:4092   */\n      add\n        /* \"#utility.yul\":4055:4121   */\n      tag_151\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":4182:4184   */\n      0x1f\n        /* \"#utility.yul\":4161:4176   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4157:4186   */\n      and\n        /* \"#utility.yul\":4142:4187   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4189:4191   */\n      0x40\n        /* \"#utility.yul\":4138:4192   */\n      add\n      swap3\n        /* \"#utility.yul\":3815:4198   */\n      swap2\n      pop\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa264697066735822122008db308feee3715a2cd3cfb8dbd1b1b79a72809f40ebe8d50212d871dd87b33264736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_335": {
									"entryPoint": null,
									"id": 335,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_868": {
									"entryPoint": null,
									"id": 868,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_changeAdmin_646": {
									"entryPoint": 344,
									"id": 646,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_getAdmin_603": {
									"entryPoint": 682,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setAdmin_629": {
									"entryPoint": 739,
									"id": 629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_403": {
									"entryPoint": 435,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_452": {
									"entryPoint": 231,
									"id": 452,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_verifyCallResult_294": {
									"entryPoint": 1113,
									"id": 294,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionDelegateCall_229": {
									"entryPoint": 635,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_264": {
									"entryPoint": 892,
									"id": 264,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_793": {
									"entryPoint": 889,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 883,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 1175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory": {
									"entryPoint": 1273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1557,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1226,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x01": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1204,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4209:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:7"
															},
															"nodeType": "YulIf",
															"src": "115:70:7"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:7",
														"type": ""
													}
												],
												"src": "14:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "228:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "245:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "252:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "257:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "248:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "248:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "238:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "238:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "238:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "285:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "288:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "278:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "278:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "278:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "309:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "312:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "302:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "302:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "302:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "196:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "381:205:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "391:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "400:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "395:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "460:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "485:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "490:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "481:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "481:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "504:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "509:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "500:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "500:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "494:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "494:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "474:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "474:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "474:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "421:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "424:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "418:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "432:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "434:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "443:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "446:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "439:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "439:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "434:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "414:3:7",
																"statements": []
															},
															"src": "410:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "549:31:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "562:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "567:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "558:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "558:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "576:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "538:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "541:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "535:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:13:7"
															},
															"nodeType": "YulIf",
															"src": "532:48:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "359:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "364:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "369:6:7",
														"type": ""
													}
												],
												"src": "328:258:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:929:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "770:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "773:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "763:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:7"
															},
															"nodeType": "YulIf",
															"src": "725:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "786:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "826:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "796:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:40:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "845:59:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "889:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "900:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "885:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "885:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "855:29:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "855:49:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "913:39:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "948:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "933:18:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "927:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:25:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "917:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "961:28:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "979:2:7",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "983:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "975:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "975:10:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "987:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "971:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "971:18:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "965:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1016:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1025:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1028:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1018:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1018:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1018:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1004:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1012:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1001:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1001:14:7"
															},
															"nodeType": "YulIf",
															"src": "998:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1041:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1055:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1066:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1051:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1051:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1045:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1121:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1130:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1133:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1123:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1123:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1123:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1100:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1104:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1096:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1096:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1111:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1092:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1092:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1085:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1085:35:7"
															},
															"nodeType": "YulIf",
															"src": "1082:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1146:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1162:2:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1156:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:9:7"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1150:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1188:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1190:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1190:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1190:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1180:2:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1184:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1177:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:10:7"
															},
															"nodeType": "YulIf",
															"src": "1174:36:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1219:17:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1233:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "1229:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1229:7:7"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1223:2:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1245:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1265:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1259:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1259:9:7"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1249:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1277:71:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1323:2:7"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1327:4:7",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1319:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1319:13:7"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1334:2:7"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1315:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1315:22:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1339:2:7",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1311:31:7"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1344:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1307:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1307:40:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1295:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1295:53:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1281:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1407:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1409:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1409:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1409:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1366:10:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1378:2:7"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1363:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1363:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1386:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1398:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1383:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1383:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1360:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1360:46:7"
															},
															"nodeType": "YulIf",
															"src": "1357:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1445:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1449:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1438:22:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1438:22:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1484:2:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1469:18:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1469:18:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1533:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1542:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1545:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1535:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1535:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1535:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1510:2:7"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1514:2:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1506:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1506:11:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1519:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1502:20:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1524:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1499:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:33:7"
															},
															"nodeType": "YulIf",
															"src": "1496:53:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1584:2:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1588:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:11:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1597:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1605:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1593:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1593:15:7"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1610:2:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1558:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:55:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1558:55:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1622:16:7",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1632:6:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "665:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "676:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "688:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "696:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "704:6:7",
														"type": ""
													}
												],
												"src": "591:1053:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1698:173:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1728:111:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1749:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1756:3:7",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1761:10:7",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1752:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1752:20:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1742:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1742:31:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1742:31:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1793:1:7",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1796:4:7",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1786:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1786:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1786:15:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1821:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1824:4:7",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1814:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1814:15:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:15:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1714:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1717:1:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1711:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1711:8:7"
															},
															"nodeType": "YulIf",
															"src": "1708:131:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1848:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1860:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1863:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1856:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1856:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "1848:4:7"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1680:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1683:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "1689:4:7",
														"type": ""
													}
												],
												"src": "1649:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1908:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1925:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1932:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1937:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1928:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1928:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1918:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1918:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:7",
																		"type": "",
																		"value": "0x01"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1958:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1982:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:7"
														}
													]
												},
												"name": "panic_error_0x01",
												"nodeType": "YulFunctionDefinition",
												"src": "1876:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2137:175:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2147:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2159:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2170:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2155:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2147:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2182:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2200:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2205:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2196:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2196:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2209:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2192:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2186:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2227:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2242:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2250:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2238:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2238:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2274:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2285:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2270:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2294:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2302:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2290:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2290:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2263:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2098:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2109:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2117:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2128:4:7",
														"type": ""
													}
												],
												"src": "2008:304:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2491:235:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2508:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2519:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2501:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2501:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2501:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2542:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2553:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2538:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2558:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2531:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2531:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2581:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2592:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2577:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2577:18:7"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2597:34:7",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2570:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2570:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2570:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2663:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2648:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:18:7"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2668:15:7",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2641:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2641:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2641:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2693:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2705:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2716:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2701:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2701:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2693:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2468:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2482:4:7",
														"type": ""
													}
												],
												"src": "2317:409:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2922:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2933:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2915:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2915:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2915:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2972:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2945:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2945:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2945:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2995:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3006:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2991:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2991:18:7"
																	},
																	{
																		"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3011:34:7",
																		"type": "",
																		"value": "ERC1967: new admin is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2984:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3066:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3077:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3062:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3062:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3082:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3055:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3055:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3100:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3112:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3123:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3108:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3108:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3100:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2882:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2896:4:7",
														"type": ""
													}
												],
												"src": "2731:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3312:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3329:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3340:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3322:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3322:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3363:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3359:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3359:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3379:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3352:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3352:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3352:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3402:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3413:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3398:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3398:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3418:34:7",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3391:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3391:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3391:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3473:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3484:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3469:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3469:18:7"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3489:8:7",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3462:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3507:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3519:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3530:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3515:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3515:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3507:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3289:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3303:4:7",
														"type": ""
													}
												],
												"src": "3138:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3682:137:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3692:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3712:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3706:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3706:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3696:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3762:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3750:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3750:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3769:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3774:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3728:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3728:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3790:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3801:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3806:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3797:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3790:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3658:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3663:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3674:3:7",
														"type": ""
													}
												],
												"src": "3545:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3945:262:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3962:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3973:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3955:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3985:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4005:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3999:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3989:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4032:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4043:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4028:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4028:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4048:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4021:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4021:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4021:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4090:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4098:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4086:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4086:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4107:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4118:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4103:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4103:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4123:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4064:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4064:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4064:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4139:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4155:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4174:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4182:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4170:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4170:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4191:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4187:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4187:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4166:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4166:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4151:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4151:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4198:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4147:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4147:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4139:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3914:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3925:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3936:4:7",
														"type": ""
													}
												],
												"src": "3824:383:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        let offset := mload(add(headStart, 64))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value2 := memPtr\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function panic_error_0x01()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x01)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1967: new admin is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260405162000ee338038062000ee38339810160408190526200002691620004f9565b82816200005560017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd620005d9565b60008051602062000e9c83398151915214620000755762000075620005ff565b6200008382826000620000e7565b50620000b3905060017fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104620005d9565b60008051602062000e7c83398151915214620000d357620000d3620005ff565b620000de8262000158565b50505062000668565b620000f283620001b3565b6040516001600160a01b038416907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2600082511180620001345750805b1562000153576200015183836200027b60201b6200022e1760201c565b505b505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f62000183620002aa565b604080516001600160a01b03928316815291841660208301520160405180910390a1620001b081620002e3565b50565b620001c9816200037360201b6200025a1760201c565b620002315760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806200025a60008051602062000e9c83398151915260001b6200037960201b620001ea1760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060620002a3838360405180606001604052806027815260200162000ebc602791396200037c565b9392505050565b6000620002d460008051602062000e7c83398151915260001b6200037960201b620001ea1760201c565b546001600160a01b0316919050565b6001600160a01b0381166200034a5760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b606482015260840162000228565b806200025a60008051602062000e7c83398151915260001b6200037960201b620001ea1760201c565b3b151590565b90565b6060833b620003dd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840162000228565b600080856001600160a01b031685604051620003fa919062000615565b600060405180830381855af49150503d806000811462000437576040519150601f19603f3d011682016040523d82523d6000602084013e6200043c565b606091505b5090925090506200044f82828662000459565b9695505050505050565b606083156200046a575081620002a3565b8251156200047b5782518084602001fd5b8160405162461bcd60e51b815260040162000228919062000633565b80516001600160a01b0381168114620004af57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004e7578181015183820152602001620004cd565b83811115620001515750506000910152565b6000806000606084860312156200050f57600080fd5b6200051a8462000497565b92506200052a6020850162000497565b60408501519092506001600160401b03808211156200054857600080fd5b818601915086601f8301126200055d57600080fd5b815181811115620005725762000572620004b4565b604051601f8201601f19908116603f011681019083821181831017156200059d576200059d620004b4565b81604052828152896020848701011115620005b757600080fd5b620005ca836020830160208801620004ca565b80955050505050509250925092565b600082821015620005fa57634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825162000629818460208701620004ca565b9190910192915050565b602081526000825180602084015262000654816040850160208701620004ca565b601f01601f19169190910160400192915050565b61080480620006786000396000f3fe60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b61008036600461068e565b610118565b61005b6100933660046106a9565b610155565b3480156100a457600080fd5b506100ad6101bc565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e436600461068e565b6101ed565b3480156100f557600080fd5b506100ad61020d565b610106610260565b6101166101116102f5565b6102ff565b565b610120610323565b6001600160a01b0316330361014d5761014a81604051806020016040528060008152506000610356565b50565b61014a6100fe565b61015d610323565b6001600160a01b031633036101b4576101af8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610356915050565b505050565b6101af6100fe565b60006101c6610323565b6001600160a01b031633036101e2576101dd6102f5565b905090565b6101ea6100fe565b90565b6101f5610323565b6001600160a01b0316330361014d5761014a816103b5565b6000610217610323565b6001600160a01b031633036101e2576101dd610323565b606061025383836040518060600160405280602781526020016107a860279139610409565b9392505050565b3b151590565b610268610323565b6001600160a01b031633036101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101dd6104dd565b3660008037600080366000845af43d6000803e80801561031e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b61035f83610505565b6040516001600160a01b038416907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a26000825111806103a05750805b156101af576103af838361022e565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103de610323565b604080516001600160a01b03928316815291841660208301520160405180910390a161014a816105ad565b6060833b6104685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102ec565b600080856001600160a01b0316856040516104839190610758565b600060405180830381855af49150503d80600081146104be576040519150601f19603f3d011682016040523d82523d6000602084013e6104c3565b606091505b50915091506104d3828286610639565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610347565b803b6105695760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102ec565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381166106125760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ec565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610361058c565b60608315610648575081610253565b8251156106585782518084602001fd5b8160405162461bcd60e51b81526004016102ec9190610774565b80356001600160a01b038116811461068957600080fd5b919050565b6000602082840312156106a057600080fd5b61025382610672565b6000806000604084860312156106be57600080fd5b6106c784610672565b9250602084013567ffffffffffffffff808211156106e457600080fd5b818601915086601f8301126106f857600080fd5b81358181111561070757600080fd5b87602082850101111561071957600080fd5b6020830194508093505050509250925092565b60005b8381101561074757818101518382015260200161072f565b838111156103af5750506000910152565b6000825161076a81846020870161072c565b9190910192915050565b602081526000825180602084015261079381604085016020870161072c565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122008db308feee3715a2cd3cfb8dbd1b1b79a72809f40ebe8d50212d871dd87b33264736f6c634300080d0033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH3 0xEE3 CODESIZE SUB DUP1 PUSH3 0xEE3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x26 SWAP2 PUSH3 0x4F9 JUMP JUMPDEST DUP3 DUP2 PUSH3 0x55 PUSH1 0x1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD PUSH3 0x5D9 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xE9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH3 0x75 JUMPI PUSH3 0x75 PUSH3 0x5FF JUMP JUMPDEST PUSH3 0x83 DUP3 DUP3 PUSH1 0x0 PUSH3 0xE7 JUMP JUMPDEST POP PUSH3 0xB3 SWAP1 POP PUSH1 0x1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6104 PUSH3 0x5D9 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xE7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE EQ PUSH3 0xD3 JUMPI PUSH3 0xD3 PUSH3 0x5FF JUMP JUMPDEST PUSH3 0xDE DUP3 PUSH3 0x158 JUMP JUMPDEST POP POP POP PUSH3 0x668 JUMP JUMPDEST PUSH3 0xF2 DUP4 PUSH3 0x1B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH3 0x134 JUMPI POP DUP1 JUMPDEST ISZERO PUSH3 0x153 JUMPI PUSH3 0x151 DUP4 DUP4 PUSH3 0x27B PUSH1 0x20 SHL PUSH3 0x22E OR PUSH1 0x20 SHR JUMP JUMPDEST POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH3 0x183 PUSH3 0x2AA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH3 0x1B0 DUP2 PUSH3 0x2E3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH3 0x1C9 DUP2 PUSH3 0x373 PUSH1 0x20 SHL PUSH3 0x25A OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x231 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH3 0x25A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xE9C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x379 PUSH1 0x20 SHL PUSH3 0x1EA OR PUSH1 0x20 SHR JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x60 PUSH3 0x2A3 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0xEBC PUSH1 0x27 SWAP2 CODECOPY PUSH3 0x37C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D4 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xE7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x379 PUSH1 0x20 SHL PUSH3 0x1EA OR PUSH1 0x20 SHR JUMP JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x34A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x228 JUMP JUMPDEST DUP1 PUSH3 0x25A PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0xE7C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x0 SHL PUSH3 0x379 PUSH1 0x20 SHL PUSH3 0x1EA OR PUSH1 0x20 SHR JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH3 0x3DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x228 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH3 0x3FA SWAP2 SWAP1 PUSH3 0x615 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x437 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x43C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x44F DUP3 DUP3 DUP7 PUSH3 0x459 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x46A JUMPI POP DUP2 PUSH3 0x2A3 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x47B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x228 SWAP2 SWAP1 PUSH3 0x633 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x4E7 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x4CD JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x151 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x50F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x51A DUP5 PUSH3 0x497 JUMP JUMPDEST SWAP3 POP PUSH3 0x52A PUSH1 0x20 DUP6 ADD PUSH3 0x497 JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x548 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x55D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x572 JUMPI PUSH3 0x572 PUSH3 0x4B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x59D JUMPI PUSH3 0x59D PUSH3 0x4B4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x5B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x5CA DUP4 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP9 ADD PUSH3 0x4CA JUMP JUMPDEST DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x5FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH3 0x629 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH3 0x4CA JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH3 0x654 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH3 0x4CA JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x804 DUP1 PUSH3 0x678 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xE9 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0x5B PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH2 0x20D JUMP JUMPDEST PUSH2 0x106 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x111 PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x120 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14D JUMPI PUSH2 0x14A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x356 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14A PUSH2 0xFE JUMP JUMPDEST PUSH2 0x15D PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1B4 JUMPI PUSH2 0x1AF DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 SWAP3 POP PUSH2 0x356 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AF PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1E2 JUMPI PUSH2 0x1DD PUSH2 0x2F5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0xFE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14D JUMPI PUSH2 0x14A DUP2 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1E2 JUMPI PUSH2 0x1DD PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x253 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7A8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x409 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DD PUSH2 0x4DD JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F DUP4 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3A0 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1AF JUMPI PUSH2 0x3AF DUP4 DUP4 PUSH2 0x22E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x3DE PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14A DUP2 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4D3 DUP3 DUP3 DUP7 PUSH2 0x639 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x347 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x648 JUMPI POP DUP2 PUSH2 0x253 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x658 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x774 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x253 DUP3 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C7 DUP5 PUSH2 0x672 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x747 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x72F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x76A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x72C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x793 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122008DB30 DUP16 0xEE 0xE3 PUSH18 0x5A2CD3CFB8DBD1B1B79A72809F40EBE8D502 SLT 0xD8 PUSH18 0xDD87B33264736F6C634300080D0033B53127 PUSH9 0x4A568B3173AE13B9F8 0xA6 ADD PUSH15 0x243E63B6E8EE1178D6A717850B5D61 SUB CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC416464726573733A206C6F PUSH24 0x2D6C6576656C2064656C65676174652063616C6C20666169 PUSH13 0x65640000000000000000000000 ",
							"sourceMap": "1540:3526:6:-:0;;;1814:224;;;;;;;;;;;;;;;;;;:::i;:::-;1899:6;1907:5;983:54:1;1036:1;991:41;983:54;:::i;:::-;-1:-1:-1;;;;;;;;;;;951:87:1;944:95;;;;:::i;:::-;1049:39;1067:6;1075:5;1082;1049:17;:39::i;:::-;-1:-1:-1;1954:45:6::1;::::0;-1:-1:-1;1998:1:6::1;1962:32;1954:45;:::i;:::-;-1:-1:-1::0;;;;;;;;;;;1931:69:6::1;1924:77;;;;:::i;:::-;2011:20;2024:6:::0;2011:12:::1;:20::i;:::-;1814:224:::0;;;1540:3526;;2026:315:2;2134:37;2153:17;2134:18;:37::i;:::-;2186:27;;-1:-1:-1;;;;;2186:27:2;;;;;;;;2241:1;2227:4;:11;:15;:28;;;;2246:9;2227:28;2223:112;;;2271:53;2300:17;2319:4;2271:28;;;;;:53;;:::i;:::-;;2223:112;2026:315;;;:::o;5465:135::-;5529:35;5542:11;:9;:11::i;:::-;5529:35;;;-1:-1:-1;;;;;2238:15:7;;;2220:34;;2290:15;;;2285:2;2270:18;;2263:43;2155:18;5529:35:2;;;;;;;5574:19;5584:8;5574:9;:19::i;:::-;5465:135;:::o;1375:259::-;1456:37;1475:17;1456:18;;;;;:37;;:::i;:::-;1448:95;;;;-1:-1:-1;;;1448:95:2;;2519:2:7;1448:95:2;;;2501:21:7;2558:2;2538:18;;;2531:30;2597:34;2577:18;;;2570:62;-1:-1:-1;;;2648:18:7;;;2641:43;2701:19;;1448:95:2;;;;;;;;;1610:17;1553:48;-1:-1:-1;;;;;;;;;;;1580:20:2;;1553:26;;;;;:48;;:::i;:::-;:74;;-1:-1:-1;;;;;;1553:74:2;-1:-1:-1;;;;;1553:74:2;;;;;;;;;;-1:-1:-1;1375:259:2:o;6276:198:0:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:0:o;4949:122:2:-;4993:7;5019:39;-1:-1:-1;;;;;;;;;;;5046:11:2;;5019:26;;;;;:39;;:::i;:::-;:45;-1:-1:-1;;;;;5019:45:2;;4949:122;-1:-1:-1;4949:122:2:o;5153:201::-;-1:-1:-1;;;;;5216:22:2;;5208:73;;;;-1:-1:-1;;;5208:73:2;;2933:2:7;5208:73:2;;;2915:21:7;2972:2;2952:18;;;2945:30;3011:34;2991:18;;;2984:62;-1:-1:-1;;;3062:18:7;;;3055:36;3108:19;;5208:73:2;2731:402:7;5208:73:2;5339:8;5291:39;-1:-1:-1;;;;;;;;;;;5318:11:2;;5291:26;;;;;:39;;:::i;718:413:0:-;1078:20;1116:8;;;718:413::o;1542:147:5:-;1669:4;1542:147::o;6660:417:0:-;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:0;;3340:2:7;6795:69:0;;;3322:21:7;3379:2;3359:18;;;3352:30;3418:34;3398:18;;;3391:62;-1:-1:-1;;;3469:18:7;;;3462:36;3515:19;;6795:69:0;3138:402:7;6795:69:0;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:0;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6934:67:0;;-1:-1:-1;6934:67:0;-1:-1:-1;7018:52:0;6934:67;;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:0:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:0;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:0;;;;;;;;:::i;14:177:7:-;93:13;;-1:-1:-1;;;;;135:31:7;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:258;400:1;410:113;424:6;421:1;418:13;410:113;;;500:11;;;494:18;481:11;;;474:39;446:2;439:10;410:113;;;541:6;538:1;535:13;532:48;;;-1:-1:-1;;576:1:7;558:16;;551:27;328:258::o;591:1053::-;688:6;696;704;757:2;745:9;736:7;732:23;728:32;725:52;;;773:1;770;763:12;725:52;796:40;826:9;796:40;:::i;:::-;786:50;;855:49;900:2;889:9;885:18;855:49;:::i;:::-;948:2;933:18;;927:25;845:59;;-1:-1:-1;;;;;;1001:14:7;;;998:34;;;1028:1;1025;1018:12;998:34;1066:6;1055:9;1051:22;1041:32;;1111:7;1104:4;1100:2;1096:13;1092:27;1082:55;;1133:1;1130;1123:12;1082:55;1162:2;1156:9;1184:2;1180;1177:10;1174:36;;;1190:18;;:::i;:::-;1265:2;1259:9;1233:2;1319:13;;-1:-1:-1;;1315:22:7;;;1339:2;1311:31;1307:40;1295:53;;;1363:18;;;1383:22;;;1360:46;1357:72;;;1409:18;;:::i;:::-;1449:10;1445:2;1438:22;1484:2;1476:6;1469:18;1524:7;1519:2;1514;1510;1506:11;1502:20;1499:33;1496:53;;;1545:1;1542;1535:12;1496:53;1558:55;1610:2;1605;1597:6;1593:15;1588:2;1584;1580:11;1558:55;:::i;:::-;1632:6;1622:16;;;;;;;591:1053;;;;;:::o;1649:222::-;1689:4;1717:1;1714;1711:8;1708:131;;;1761:10;1756:3;1752:20;1749:1;1742:31;1796:4;1793:1;1786:15;1824:4;1821:1;1814:15;1708:131;-1:-1:-1;1856:9:7;;1649:222::o;1876:127::-;1937:10;1932:3;1928:20;1925:1;1918:31;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;3545:274;3674:3;3712:6;3706:13;3728:53;3774:6;3769:3;3762:4;3754:6;3750:17;3728:53;:::i;:::-;3797:16;;;;;3545:274;-1:-1:-1;;3545:274:7:o;3824:383::-;3973:2;3962:9;3955:21;3936:4;4005:6;3999:13;4048:6;4043:2;4032:9;4028:18;4021:34;4064:66;4123:6;4118:2;4107:9;4103:18;4098:2;4090:6;4086:15;4064:66;:::i;:::-;4191:2;4170:15;-1:-1:-1;;4166:29:7;4151:45;;;;4198:2;4147:54;;3824:383;-1:-1:-1;;3824:383:7:o;:::-;1540:3526:6;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_753": {
									"entryPoint": null,
									"id": 753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_761": {
									"entryPoint": null,
									"id": 761,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_766": {
									"entryPoint": null,
									"id": 766,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_beforeFallback_990": {
									"entryPoint": 608,
									"id": 990,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_changeAdmin_646": {
									"entryPoint": 949,
									"id": 646,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_delegate_726": {
									"entryPoint": 767,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_fallback_745": {
									"entryPoint": 254,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getAdmin_603": {
									"entryPoint": 803,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getImplementation_379": {
									"entryPoint": 1245,
									"id": 379,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_implementation_347": {
									"entryPoint": 757,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setAdmin_629": {
									"entryPoint": 1453,
									"id": 629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_403": {
									"entryPoint": 1285,
									"id": 403,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_upgradeToAndCall_452": {
									"entryPoint": 854,
									"id": 452,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_verifyCallResult_294": {
									"entryPoint": 1593,
									"id": 294,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@admin_898": {
									"entryPoint": 525,
									"id": 898,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@changeAdmin_925": {
									"entryPoint": 493,
									"id": 925,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_229": {
									"entryPoint": 558,
									"id": 229,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@functionDelegateCall_264": {
									"entryPoint": 1033,
									"id": 264,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getAddressSlot_793": {
									"entryPoint": null,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@implementation_912": {
									"entryPoint": 444,
									"id": 912,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_19": {
									"entryPoint": 602,
									"id": 19,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@upgradeToAndCall_960": {
									"entryPoint": 341,
									"id": 960,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@upgradeTo_943": {
									"entryPoint": 280,
									"id": 943,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_calldata_ptr": {
									"entryPoint": 1705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4200:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "489:559:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "535:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "544:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "547:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "537:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "537:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "537:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "510:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "519:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:32:7"
															},
															"nodeType": "YulIf",
															"src": "499:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "560:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "589:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "570:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "560:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "608:46:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "650:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "622:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "622:32:7"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "612:6:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "663:28:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "673:18:7",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "667:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "718:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "727:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "730:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "720:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "720:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "720:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "714:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "703:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "703:14:7"
															},
															"nodeType": "YulIf",
															"src": "700:34:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "743:32:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "757:9:7"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "753:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "753:22:7"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "747:2:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "823:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "832:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "835:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "825:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "825:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "825:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "802:2:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "806:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "798:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "798:13:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "813:7:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "794:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "794:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "787:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:35:7"
															},
															"nodeType": "YulIf",
															"src": "784:55:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "848:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "875:2:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "862:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:16:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "852:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "905:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "914:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "917:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "907:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "907:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "907:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "893:6:7"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "901:2:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "890:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:14:7"
															},
															"nodeType": "YulIf",
															"src": "887:34:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "971:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "980:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "983:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "973:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "973:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "973:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "944:2:7"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "948:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "940:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "940:15:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "957:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "936:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "936:24:7"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "962:7:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "933:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "933:37:7"
															},
															"nodeType": "YulIf",
															"src": "930:57:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "996:21:7",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1010:2:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1014:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1006:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1006:11:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "996:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1026:16:7",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "1036:6:7"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1026:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "439:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "450:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "462:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "470:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "478:6:7",
														"type": ""
													}
												],
												"src": "383:665:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1154:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1164:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1176:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1187:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1172:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1172:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1164:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1206:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1221:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1237:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1242:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1233:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1233:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1246:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1229:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1229:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1199:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1199:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1199:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1123:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1134:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1145:4:7",
														"type": ""
													}
												],
												"src": "1053:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1435:296:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1452:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1463:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1445:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1445:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1486:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1497:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1482:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1482:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1502:2:7",
																		"type": "",
																		"value": "66"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1475:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1475:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1525:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1536:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1521:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1521:18:7"
																	},
																	{
																		"hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1541:34:7",
																		"type": "",
																		"value": "TransparentUpgradeableProxy: adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1514:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1514:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1514:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1607:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1592:18:7"
																	},
																	{
																		"hexValue": "696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1612:34:7",
																		"type": "",
																		"value": "in cannot fallback to proxy targ"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1585:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1585:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1585:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1667:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1678:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1663:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:19:7"
																	},
																	{
																		"hexValue": "6574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1684:4:7",
																		"type": "",
																		"value": "et"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1656:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1656:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1656:33:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1698:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1710:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1721:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1706:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1706:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1698:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1412:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1426:4:7",
														"type": ""
													}
												],
												"src": "1261:470:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1865:175:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1875:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1887:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1898:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1875:4:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1910:29:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1928:3:7",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1933:1:7",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1924:11:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1937:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1920:19:7"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1914:2:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1955:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1970:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1978:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1966:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1966:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1948:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1948:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2022:6:7"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2030:2:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:15:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1991:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1991:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1991:43:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1826:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1837:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1845:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1856:4:7",
														"type": ""
													}
												],
												"src": "1736:304:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2219:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2236:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2247:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2229:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2229:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2270:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2281:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2266:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2266:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2286:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2259:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2259:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2309:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2320:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2305:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:18:7"
																	},
																	{
																		"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2325:34:7",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2298:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2298:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2380:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2391:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2376:18:7"
																	},
																	{
																		"hexValue": "6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2396:8:7",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2369:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2369:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2369:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2414:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2426:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2437:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2422:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2422:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2414:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2196:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2210:4:7",
														"type": ""
													}
												],
												"src": "2045:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2505:205:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2515:10:7",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2524:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2519:1:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2584:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2609:3:7"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "2614:1:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2605:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "2628:3:7"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2633:1:7"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2624:3:7"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2624:11:7"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2618:5:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2618:18:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2598:39:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2598:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2545:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2548:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2542:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2542:13:7"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2556:19:7",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2558:15:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2567:1:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2570:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2563:3:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2563:10:7"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2558:1:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2538:3:7",
																"statements": []
															},
															"src": "2534:113:7"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2673:31:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "2686:3:7"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "2691:6:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2682:3:7"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2682:16:7"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2700:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2675:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2675:27:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2675:27:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2662:1:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2665:6:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2659:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2659:13:7"
															},
															"nodeType": "YulIf",
															"src": "2656:48:7"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2483:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2488:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2493:6:7",
														"type": ""
													}
												],
												"src": "2452:258:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2852:137:7",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2862:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2882:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2876:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2876:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2866:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2932:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2920:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2920:17:7"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2939:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2944:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2898:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:53:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2898:53:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2960:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2971:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2967:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2967:16:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2960:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2828:3:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2833:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:7",
														"type": ""
													}
												],
												"src": "2715:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3168:235:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3185:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3196:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3178:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3178:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3178:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3219:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3230:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3215:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3215:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3235:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3208:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3208:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3258:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3269:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3254:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3254:18:7"
																	},
																	{
																		"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3274:34:7",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3247:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3329:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3340:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3325:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3325:18:7"
																	},
																	{
																		"hexValue": "6f74206120636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3345:15:7",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3318:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3318:43:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3318:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3370:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3382:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3393:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3378:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3378:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3370:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3145:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3159:4:7",
														"type": ""
													}
												],
												"src": "2994:409:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3582:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3599:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3610:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3592:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3592:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3644:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3649:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3622:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3622:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3622:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3672:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3683:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3668:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:18:7"
																	},
																	{
																		"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3688:34:7",
																		"type": "",
																		"value": "ERC1967: new admin is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3661:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3743:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3754:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3739:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3739:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3759:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3732:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3732:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3777:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3789:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3800:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3785:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3785:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3777:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3559:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3573:4:7",
														"type": ""
													}
												],
												"src": "3408:402:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3936:262:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3953:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3964:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3946:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3946:21:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3976:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3996:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3990:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3990:13:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3980:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4023:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4034:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4019:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4019:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4039:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4012:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4012:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4012:34:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4081:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4089:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4077:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4077:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4098:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4109:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4094:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4094:18:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4114:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4055:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4055:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4055:66:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4130:62:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4146:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4165:6:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4173:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4161:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4161:15:7"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4182:2:7",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4178:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4178:7:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4157:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4157:29:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4142:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4142:45:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4189:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4138:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4138:54:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4130:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3905:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3916:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3927:4:7",
														"type": ""
													}
												],
												"src": "3815:383:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"TransparentUpgradeableProxy: adm\")\n        mstore(add(headStart, 96), \"in cannot fallback to proxy targ\")\n        mstore(add(headStart, 128), \"et\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC1967: new admin is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80633659cfe6146100655780634f1ef286146100855780635c60da1b146100985780638f283970146100c9578063f851a440146100e95761005d565b3661005d5761005b6100fe565b005b61005b6100fe565b34801561007157600080fd5b5061005b61008036600461068e565b610118565b61005b6100933660046106a9565b610155565b3480156100a457600080fd5b506100ad6101bc565b6040516001600160a01b03909116815260200160405180910390f35b3480156100d557600080fd5b5061005b6100e436600461068e565b6101ed565b3480156100f557600080fd5b506100ad61020d565b610106610260565b6101166101116102f5565b6102ff565b565b610120610323565b6001600160a01b0316330361014d5761014a81604051806020016040528060008152506000610356565b50565b61014a6100fe565b61015d610323565b6001600160a01b031633036101b4576101af8383838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525060019250610356915050565b505050565b6101af6100fe565b60006101c6610323565b6001600160a01b031633036101e2576101dd6102f5565b905090565b6101ea6100fe565b90565b6101f5610323565b6001600160a01b0316330361014d5761014a816103b5565b6000610217610323565b6001600160a01b031633036101e2576101dd610323565b606061025383836040518060600160405280602781526020016107a860279139610409565b9392505050565b3b151590565b610268610323565b6001600160a01b031633036101165760405162461bcd60e51b815260206004820152604260248201527f5472616e73706172656e745570677261646561626c6550726f78793a2061646d60448201527f696e2063616e6e6f742066616c6c6261636b20746f2070726f78792074617267606482015261195d60f21b608482015260a4015b60405180910390fd5b60006101dd6104dd565b3660008037600080366000845af43d6000803e80801561031e573d6000f35b3d6000fd5b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b61035f83610505565b6040516001600160a01b038416907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a26000825111806103a05750805b156101af576103af838361022e565b50505050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6103de610323565b604080516001600160a01b03928316815291841660208301520160405180910390a161014a816105ad565b6060833b6104685760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016102ec565b600080856001600160a01b0316856040516104839190610758565b600060405180830381855af49150503d80600081146104be576040519150601f19603f3d011682016040523d82523d6000602084013e6104c3565b606091505b50915091506104d3828286610639565b9695505050505050565b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc610347565b803b6105695760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016102ec565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6001600160a01b0381166106125760405162461bcd60e51b815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ec565b807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610361058c565b60608315610648575081610253565b8251156106585782518084602001fd5b8160405162461bcd60e51b81526004016102ec9190610774565b80356001600160a01b038116811461068957600080fd5b919050565b6000602082840312156106a057600080fd5b61025382610672565b6000806000604084860312156106be57600080fd5b6106c784610672565b9250602084013567ffffffffffffffff808211156106e457600080fd5b818601915086601f8301126106f857600080fd5b81358181111561070757600080fd5b87602082850101111561071957600080fd5b6020830194508093505050509250925092565b60005b8381101561074757818101518382015260200161072f565b838111156103af5750506000910152565b6000825161076a81846020870161072c565b9190910192915050565b602081526000825180602084015261079381604085016020870161072c565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122008db308feee3715a2cd3cfb8dbd1b1b79a72809f40ebe8d50212d871dd87b33264736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x85 JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0xC9 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0xE9 JUMPI PUSH2 0x5D JUMP JUMPDEST CALLDATASIZE PUSH2 0x5D JUMPI PUSH2 0x5B PUSH2 0xFE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5B PUSH2 0xFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0x80 CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x118 JUMP JUMPDEST PUSH2 0x5B PUSH2 0x93 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A9 JUMP JUMPDEST PUSH2 0x155 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH2 0x1BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5B PUSH2 0xE4 CALLDATASIZE PUSH1 0x4 PUSH2 0x68E JUMP JUMPDEST PUSH2 0x1ED JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD PUSH2 0x20D JUMP JUMPDEST PUSH2 0x106 PUSH2 0x260 JUMP JUMPDEST PUSH2 0x116 PUSH2 0x111 PUSH2 0x2F5 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x120 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14D JUMPI PUSH2 0x14A DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0x356 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x14A PUSH2 0xFE JUMP JUMPDEST PUSH2 0x15D PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1B4 JUMPI PUSH2 0x1AF DUP4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH1 0x1 SWAP3 POP PUSH2 0x356 SWAP2 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1AF PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C6 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1E2 JUMPI PUSH2 0x1DD PUSH2 0x2F5 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1EA PUSH2 0xFE JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x14D JUMPI PUSH2 0x14A DUP2 PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x217 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1E2 JUMPI PUSH2 0x1DD PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x253 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7A8 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x409 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x268 PUSH2 0x323 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x42 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73706172656E745570677261646561626C6550726F78793A2061646D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267 PUSH1 0x64 DUP3 ADD MSTORE PUSH2 0x195D PUSH1 0xF2 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1DD PUSH2 0x4DD JUMP JUMPDEST CALLDATASIZE PUSH1 0x0 DUP1 CALLDATACOPY PUSH1 0x0 DUP1 CALLDATASIZE PUSH1 0x0 DUP5 GAS DELEGATECALL RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY DUP1 DUP1 ISZERO PUSH2 0x31E JUMPI RETURNDATASIZE PUSH1 0x0 RETURN JUMPDEST RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 JUMPDEST SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F DUP4 PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 PUSH1 0x0 DUP3 MLOAD GT DUP1 PUSH2 0x3A0 JUMPI POP DUP1 JUMPDEST ISZERO PUSH2 0x1AF JUMPI PUSH2 0x3AF DUP4 DUP4 PUSH2 0x22E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH2 0x3DE PUSH2 0x323 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 DUP5 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x14A DUP2 PUSH2 0x5AD JUMP JUMPDEST PUSH1 0x60 DUP4 EXTCODESIZE PUSH2 0x468 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x758 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4D3 DUP3 DUP3 DUP7 PUSH2 0x639 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH2 0x347 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2EC JUMP JUMPDEST DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 PUSH2 0x58C JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x648 JUMPI POP DUP2 PUSH2 0x253 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x658 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x774 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x689 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x253 DUP3 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C7 DUP5 PUSH2 0x672 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x6E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x719 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 POP DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x747 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x72F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x3AF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x76A DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x72C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x793 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x7066735822122008DB30 DUP16 0xEE 0xE3 PUSH18 0x5A2CD3CFB8DBD1B1B79A72809F40EBE8D502 SLT 0xD8 PUSH18 0xDD87B33264736F6C634300080D0033000000 ",
							"sourceMap": "1540:3526:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2835:11:4;:9;:11::i;:::-;1540:3526:6;;2611:11:4;:9;:11::i;3908:134:6:-;;;;;;;;;;-1:-1:-1;3908:134:6;;;;;:::i;:::-;;:::i;4418:164::-;;;;;;:::i;:::-;;:::i;3311:129::-;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1217:32:7;;;1199:51;;1187:2;1172:18;3311:129:6;;;;;;;3645:103;;;;;;;;;;-1:-1:-1;3645:103:6;;;;;:::i;:::-;;:::i;2755:96::-;;;;;;;;;;;;;:::i;2257:110:4:-;2305:17;:15;:17::i;:::-;2332:28;2342:17;:15;:17::i;:::-;2332:9;:28::i;:::-;2257:110::o;3908:134:6:-;2226:11;:9;:11::i;:::-;-1:-1:-1;;;;;2212:25:6;:10;:25;2208:99;;3981:54:::1;3999:17;4018:9;;;;;;;;;;;::::0;4029:5:::1;3981:17;:54::i;:::-;3908:134:::0;:::o;2208:99::-;2285:11;:9;:11::i;4418:164::-;2226:11;:9;:11::i;:::-;-1:-1:-1;;;;;2212:25:6;:10;:25;2208:99;;4527:48:::1;4545:17;4564:4;;4527:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4570:4:6::1;::::0;-1:-1:-1;4527:17:6::1;::::0;-1:-1:-1;;4527:48:6:i:1;:::-;4418:164:::0;;;:::o;2208:99::-;2285:11;:9;:11::i;3311:129::-;3363:23;2226:11;:9;:11::i;:::-;-1:-1:-1;;;;;2212:25:6;:10;:25;2208:99;;3416:17:::1;:15;:17::i;:::-;3398:35;;3311:129:::0;:::o;2208:99::-;2285:11;:9;:11::i;:::-;3311:129;:::o;3645:103::-;2226:11;:9;:11::i;:::-;-1:-1:-1;;;;;2212:25:6;:10;:25;2208:99;;3719:22:::1;3732:8;3719:12;:22::i;2755:96::-:0;2798:14;2226:11;:9;:11::i;:::-;-1:-1:-1;;;;;2212:25:6;:10;:25;2208:99;;2833:11:::1;:9;:11::i;6276:198:0:-:0;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:0:o;718:413::-;1078:20;1116:8;;;718:413::o;4857:207:6:-;4942:11;:9;:11::i;:::-;-1:-1:-1;;;;;4928:25:6;:10;:25;4920:104;;;;-1:-1:-1;;;4920:104:6;;1463:2:7;4920:104:6;;;1445:21:7;1502:2;1482:18;;;1475:30;1541:34;1521:18;;;1514:62;1612:34;1592:18;;;1585:62;-1:-1:-1;;;1663:19:7;;;1656:33;1706:19;;4920:104:6;;;;;;;;1173:140:1;1240:12;1271:35;:33;:35::i;883:895:4:-;1277:14;1274:1;1271;1258:34;1491:1;1488;1472:14;1469:1;1453:14;1446:5;1433:60;1567:16;1564:1;1561;1546:38;1605:6;1672:38;;;;1743:16;1740:1;1733:27;1672:38;1691:16;1688:1;1681:27;4949:122:2;4993:7;4683:66;5019:39;:45;-1:-1:-1;;;;;5019:45:2;;4949:122;-1:-1:-1;4949:122:2:o;2026:315::-;2134:37;2153:17;2134:18;:37::i;:::-;2186:27;;-1:-1:-1;;;;;2186:27:2;;;;;;;;2241:1;2227:4;:11;:15;:28;;;;2246:9;2227:28;2223:112;;;2271:53;2300:17;2319:4;2271:28;:53::i;:::-;;2026:315;;;:::o;5465:135::-;5529:35;5542:11;:9;:11::i;:::-;5529:35;;;-1:-1:-1;;;;;1966:15:7;;;1948:34;;2018:15;;;2013:2;1998:18;;1991:43;1883:18;5529:35:2;;;;;;;5574:19;5584:8;5574:9;:19::i;6660:417:0:-;6771:12;1078:20;;6795:69;;;;-1:-1:-1;;;6795:69:0;;2247:2:7;6795:69:0;;;2229:21:7;2286:2;2266:18;;;2259:30;2325:34;2305:18;;;2298:62;-1:-1:-1;;;2376:18:7;;;2369:36;2422:19;;6795:69:0;2045:402:7;6795:69:0;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:0;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:0:o;1144:140:2:-;1197:7;873:66;1223:48;1542:147:5;1375:259:2;1078:20:0;;1448:95:2;;;;-1:-1:-1;;;1448:95:2;;3196:2:7;1448:95:2;;;3178:21:7;3235:2;3215:18;;;3208:30;3274:34;3254:18;;;3247:62;-1:-1:-1;;;3325:18:7;;;3318:43;3378:19;;1448:95:2;2994:409:7;1448:95:2;1610:17;873:66;1553:48;:74;;-1:-1:-1;;;;;;1553:74:2;-1:-1:-1;;;;;1553:74:2;;;;;;;;;;-1:-1:-1;1375:259:2:o;5153:201::-;-1:-1:-1;;;;;5216:22:2;;5208:73;;;;-1:-1:-1;;;5208:73:2;;3610:2:7;5208:73:2;;;3592:21:7;3649:2;3629:18;;;3622:30;3688:34;3668:18;;;3661:62;-1:-1:-1;;;3739:18:7;;;3732:36;3785:19;;5208:73:2;3408:402:7;5208:73:2;5339:8;4683:66;5291:39;1542:147:5;7083:725:0;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:0;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7363:429;7764:12;7757:20;;-1:-1:-1;;;7757:20:0;;;;;;;;:::i;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:665::-;462:6;470;478;531:2;519:9;510:7;506:23;502:32;499:52;;;547:1;544;537:12;499:52;570:29;589:9;570:29;:::i;:::-;560:39;;650:2;639:9;635:18;622:32;673:18;714:2;706:6;703:14;700:34;;;730:1;727;720:12;700:34;768:6;757:9;753:22;743:32;;813:7;806:4;802:2;798:13;794:27;784:55;;835:1;832;825:12;784:55;875:2;862:16;901:2;893:6;890:14;887:34;;;917:1;914;907:12;887:34;962:7;957:2;948:6;944:2;940:15;936:24;933:37;930:57;;;983:1;980;973:12;930:57;1014:2;1010;1006:11;996:21;;1036:6;1026:16;;;;;383:665;;;;;:::o;2452:258::-;2524:1;2534:113;2548:6;2545:1;2542:13;2534:113;;;2624:11;;;2618:18;2605:11;;;2598:39;2570:2;2563:10;2534:113;;;2665:6;2662:1;2659:13;2656:48;;;-1:-1:-1;;2700:1:7;2682:16;;2675:27;2452:258::o;2715:274::-;2844:3;2882:6;2876:13;2898:53;2944:6;2939:3;2932:4;2924:6;2920:17;2898:53;:::i;:::-;2967:16;;;;;2715:274;-1:-1:-1;;2715:274:7:o;3815:383::-;3964:2;3953:9;3946:21;3927:4;3996:6;3990:13;4039:6;4034:2;4023:9;4019:18;4012:34;4055:66;4114:6;4109:2;4098:9;4094:18;4089:2;4081:6;4077:15;4055:66;:::i;:::-;4182:2;4161:15;-1:-1:-1;;4157:29:7;4142:45;;;;4189:2;4138:54;;3815:383;-1:-1:-1;;3815:383:7:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "410400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "infinite",
								"admin()": "infinite",
								"changeAdmin(address)": "infinite",
								"implementation()": "infinite",
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_admin()": "infinite",
								"_beforeFallback()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1899,
									"end": 1905,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1907,
									"end": 1912,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1036,
									"end": 1037,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 991,
									"end": 1032,
									"name": "PUSH",
									"source": 1,
									"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBD"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 983,
									"end": 1037,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 951,
									"end": 1038,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 944,
									"end": 1039,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1067,
									"end": 1073,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1080,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1087,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1049,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1049,
									"end": 1088,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1954,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1954,
									"end": 1999,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1998,
									"end": 1999,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1962,
									"end": 1994,
									"name": "PUSH",
									"source": 6,
									"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6104"
								},
								{
									"begin": 1954,
									"end": 1999,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1954,
									"end": 1999,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1954,
									"end": 1999,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 1954,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1931,
									"end": 2000,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 1924,
									"end": 2001,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2031,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2024,
									"end": 2030,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2011,
									"end": 2023,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 2011,
									"end": 2031,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 2011,
									"end": 2031,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 2011,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1814,
									"end": 2038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2153,
									"end": 2170,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2134,
									"end": 2152,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 2134,
									"end": 2171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "PUSH",
									"source": 2,
									"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2186,
									"end": 2213,
									"name": "LOG2",
									"source": 2
								},
								{
									"begin": 2241,
									"end": 2242,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2231,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2238,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2242,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2246,
									"end": 2255,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 2227,
									"end": 2255,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2300,
									"end": 2317,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2319,
									"end": 2323,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551653"
								},
								{
									"begin": 2271,
									"end": 2299,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2271,
									"end": 2324,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 2223,
									"end": 2335,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2026,
									"end": 2341,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 5465,
									"end": 5600,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 5465,
									"end": 5600,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "PUSH",
									"source": 2,
									"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
								},
								{
									"begin": 5542,
									"end": 5553,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5542,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 5542,
									"end": 5553,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 5542,
									"end": 5553,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 5542,
									"end": 5553,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2238,
									"end": 2253,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2238,
									"end": 2253,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2238,
									"end": 2253,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2254,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2220,
									"end": 2254,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2305,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2305,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2290,
									"end": 2305,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2285,
									"end": 2287,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2270,
									"end": 2288,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2288,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2263,
									"end": 2306,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2155,
									"end": 2173,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 5529,
									"end": 5564,
									"name": "LOG1",
									"source": 2
								},
								{
									"begin": 5574,
									"end": 5593,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5584,
									"end": 5592,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5574,
									"end": 5583,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5574,
									"end": 5593,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 5574,
									"end": 5593,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 5574,
									"end": 5593,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5465,
									"end": 5600,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 5465,
									"end": 5600,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1375,
									"end": 1634,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1375,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1475,
									"end": 1492,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551654"
								},
								{
									"begin": 1456,
									"end": 1474,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 1456,
									"end": 1493,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2519,
									"end": 2521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2501,
									"end": 2522,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2558,
									"end": 2560,
									"name": "PUSH",
									"source": 7,
									"value": "2D"
								},
								{
									"begin": 2538,
									"end": 2556,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2538,
									"end": 2556,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2556,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2531,
									"end": 2561,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2597,
									"end": 2631,
									"name": "PUSH",
									"source": 7,
									"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2577,
									"end": 2595,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2632,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1BDD08184818DBDB9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "9A"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2648,
									"end": 2666,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 2648,
									"end": 2666,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2648,
									"end": 2666,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2641,
									"end": 2684,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2701,
									"end": 2720,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 2701,
									"end": 2720,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 1448,
									"end": 1543,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1610,
									"end": 1627,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 1580,
									"end": 1600,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1580,
									"end": 1600,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551685"
								},
								{
									"begin": 1553,
									"end": 1579,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1553,
									"end": 1601,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "AND",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1553,
									"end": 1627,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1375,
									"end": 1634,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6359,
									"end": 6371,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6411,
									"end": 6417,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6419,
									"end": 6423,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH data",
									"source": 0,
									"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "PUSH",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6390,
									"end": 6410,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 6390,
									"end": 6467,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6383,
									"end": 6467,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6276,
									"end": 6474,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 4949,
									"end": 5071,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 4949,
									"end": 5071,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 4993,
									"end": 5000,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5019,
									"end": 5058,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "46"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5046,
									"end": 5057,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5046,
									"end": 5057,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 5019,
									"end": 5045,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5019,
									"end": 5045,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5045,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551685"
								},
								{
									"begin": 5019,
									"end": 5045,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5058,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5019,
									"end": 5058,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5058,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 5019,
									"end": 5058,
									"name": "tag",
									"source": 2,
									"value": "46"
								},
								{
									"begin": 5019,
									"end": 5058,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5064,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5019,
									"end": 5064,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5019,
									"end": 5064,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 4949,
									"end": 5071,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4949,
									"end": 5071,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 5153,
									"end": 5354,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 5153,
									"end": 5354,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 5216,
									"end": 5238,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5216,
									"end": 5238,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2933,
									"end": 2935,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 2915,
									"end": 2936,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2972,
									"end": 2974,
									"name": "PUSH",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 2952,
									"end": 2970,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2952,
									"end": 2970,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2952,
									"end": 2970,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2945,
									"end": 2975,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3011,
									"end": 3045,
									"name": "PUSH",
									"source": 7,
									"value": "455243313936373A206E65772061646D696E20697320746865207A65726F2061"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2991,
									"end": 3009,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2984,
									"end": 3046,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3062,
									"end": 3080,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3055,
									"end": 3091,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3108,
									"end": 3127,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3108,
									"end": 3127,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 2731,
									"end": 3133,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "tag",
									"source": 2,
									"value": "48"
								},
								{
									"begin": 5208,
									"end": 5281,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 5339,
									"end": 5347,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 5291,
									"end": 5330,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 5318,
									"end": 5329,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 5318,
									"end": 5329,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5291,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 5291,
									"end": 5317,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5291,
									"end": 5317,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 5291,
									"end": 5317,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18446744073709551685"
								},
								{
									"begin": 5291,
									"end": 5317,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 5291,
									"end": 5330,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 5291,
									"end": 5330,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 5291,
									"end": 5330,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1116,
									"end": 1124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 718,
									"end": 1131,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1542,
									"end": 1689,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 1542,
									"end": 1689,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1669,
									"end": 1673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1542,
									"end": 1689,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6771,
									"end": 6783,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1078,
									"end": 1098,
									"name": "EXTCODESIZE",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3342,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3322,
									"end": 3343,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3379,
									"end": 3381,
									"name": "PUSH",
									"source": 7,
									"value": "26"
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3359,
									"end": 3377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3352,
									"end": 3382,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3418,
									"end": 3452,
									"name": "PUSH",
									"source": 7,
									"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
								},
								{
									"begin": 3398,
									"end": 3416,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 3398,
									"end": 3416,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3398,
									"end": 3416,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3391,
									"end": 3453,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1B9D1C9858DD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "D2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 3469,
									"end": 3487,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3469,
									"end": 3487,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3469,
									"end": 3487,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3462,
									"end": 3498,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3515,
									"end": 3534,
									"name": "PUSH",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 3515,
									"end": 3534,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 3138,
									"end": 3540,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "tag",
									"source": 0,
									"value": "56"
								},
								{
									"begin": 6795,
									"end": 6864,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6935,
									"end": 6947,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6949,
									"end": 6972,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 6982,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6976,
									"end": 6995,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6996,
									"end": 7000,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "59"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DELEGATECALL",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "3F"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "63"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "tag",
									"source": 0,
									"value": "62"
								},
								{
									"begin": 6976,
									"end": 7001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6934,
									"end": 7001,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7057,
									"end": 7069,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7018,
									"end": 7035,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "tag",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 7018,
									"end": 7070,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7011,
									"end": 7070,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6660,
									"end": 7077,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7083,
									"end": 7808,
									"name": "tag",
									"source": 0,
									"value": "65"
								},
								{
									"begin": 7083,
									"end": 7808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7198,
									"end": 7210,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 7226,
									"end": 7233,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7256,
									"end": 7266,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7249,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 7249,
									"end": 7266,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "tag",
									"source": 0,
									"value": "67"
								},
								{
									"begin": 7222,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7367,
									"end": 7384,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7367,
									"end": 7384,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7367,
									"end": 7388,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7625,
									"end": 7635,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7619,
									"end": 7636,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7685,
									"end": 7700,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7672,
									"end": 7682,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7668,
									"end": 7670,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7664,
									"end": 7683,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7657,
									"end": 7701,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "tag",
									"source": 0,
									"value": "69"
								},
								{
									"begin": 7363,
									"end": 7792,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7764,
									"end": 7776,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "72"
								},
								{
									"begin": 7757,
									"end": 7777,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 7,
									"value": "78"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 196,
									"end": 323,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 257,
									"end": 267,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 252,
									"end": 255,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 248,
									"end": 268,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 245,
									"end": 246,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 269,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 288,
									"end": 292,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 285,
									"end": 286,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 278,
									"end": 293,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 312,
									"end": 316,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 309,
									"end": 310,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 302,
									"end": 317,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 328,
									"end": 586,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 328,
									"end": 586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 400,
									"end": 401,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 523,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 410,
									"end": 523,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 424,
									"end": 430,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 421,
									"end": 422,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 418,
									"end": 431,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 410,
									"end": 523,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 410,
									"end": 523,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 410,
									"end": 523,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 500,
									"end": 511,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 500,
									"end": 511,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 500,
									"end": 511,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 494,
									"end": 512,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 481,
									"end": 492,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 481,
									"end": 492,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 481,
									"end": 492,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 474,
									"end": 513,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 446,
									"end": 448,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 439,
									"end": 449,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 410,
									"end": 523,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 410,
									"end": 523,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 410,
									"end": 523,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 410,
									"end": 523,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 541,
									"end": 547,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 538,
									"end": 539,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 535,
									"end": 548,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 532,
									"end": 580,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 532,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 532,
									"end": 580,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 576,
									"end": 577,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 574,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 558,
									"end": 574,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 551,
									"end": 578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 328,
									"end": 586,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "tag",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 688,
									"end": 694,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 696,
									"end": 702,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 704,
									"end": 710,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 759,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 745,
									"end": 754,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 736,
									"end": 743,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 732,
									"end": 755,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 728,
									"end": 760,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 725,
									"end": 777,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 725,
									"end": 777,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 725,
									"end": 777,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 773,
									"end": 774,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 770,
									"end": 771,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 763,
									"end": 775,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 725,
									"end": 777,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 725,
									"end": 777,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 796,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 826,
									"end": 835,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 796,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 796,
									"end": 836,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 796,
									"end": 836,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 796,
									"end": 836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 786,
									"end": 836,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 786,
									"end": 836,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 855,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 900,
									"end": 902,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 889,
									"end": 898,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 885,
									"end": 903,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 855,
									"end": 904,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 855,
									"end": 904,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 855,
									"end": 904,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 855,
									"end": 904,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 948,
									"end": 950,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 933,
									"end": 951,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 933,
									"end": 951,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 927,
									"end": 952,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 845,
									"end": 904,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 845,
									"end": 904,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1001,
									"end": 1015,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1015,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1015,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1032,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1032,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 998,
									"end": 1032,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1028,
									"end": 1029,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1025,
									"end": 1026,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1018,
									"end": 1030,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 998,
									"end": 1032,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 998,
									"end": 1032,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1066,
									"end": 1072,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1055,
									"end": 1064,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1051,
									"end": 1073,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1073,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1041,
									"end": 1073,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1111,
									"end": 1118,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1104,
									"end": 1108,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1100,
									"end": 1102,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1096,
									"end": 1109,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1092,
									"end": 1119,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1137,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1082,
									"end": 1137,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1133,
									"end": 1134,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1130,
									"end": 1131,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1123,
									"end": 1135,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1082,
									"end": 1137,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1082,
									"end": 1137,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1156,
									"end": 1165,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1184,
									"end": 1186,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1177,
									"end": 1187,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1210,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1174,
									"end": 1210,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1174,
									"end": 1210,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 1190,
									"end": 1208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1265,
									"end": 1267,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1259,
									"end": 1268,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1233,
									"end": 1235,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 1319,
									"end": 1332,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1319,
									"end": 1332,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1315,
									"end": 1337,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1337,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1315,
									"end": 1337,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1339,
									"end": 1341,
									"name": "PUSH",
									"source": 7,
									"value": "3F"
								},
								{
									"begin": 1311,
									"end": 1342,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1307,
									"end": 1347,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1348,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1348,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1295,
									"end": 1348,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1381,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1381,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1363,
									"end": 1381,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1383,
									"end": 1405,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1360,
									"end": 1406,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1357,
									"end": 1429,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1357,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1357,
									"end": 1429,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1409,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1409,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 1409,
									"end": 1427,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1409,
									"end": 1427,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1409,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1449,
									"end": 1459,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1445,
									"end": 1447,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1438,
									"end": 1460,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1484,
									"end": 1486,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1487,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1524,
									"end": 1531,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 1519,
									"end": 1521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1514,
									"end": 1516,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 1510,
									"end": 1512,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1506,
									"end": 1517,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1502,
									"end": 1522,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1499,
									"end": 1532,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1549,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1549,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1496,
									"end": 1549,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1545,
									"end": 1546,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1543,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1535,
									"end": 1547,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1496,
									"end": 1549,
									"name": "tag",
									"source": 7,
									"value": "95"
								},
								{
									"begin": 1496,
									"end": 1549,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1613,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1610,
									"end": 1612,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1597,
									"end": 1603,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1593,
									"end": 1608,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1588,
									"end": 1590,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1584,
									"end": 1586,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1580,
									"end": 1591,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1558,
									"end": 1613,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 1558,
									"end": 1613,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 1558,
									"end": 1613,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1558,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1632,
									"end": 1638,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1622,
									"end": 1638,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 591,
									"end": 1644,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1649,
									"end": 1871,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 1649,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1689,
									"end": 1693,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1717,
									"end": 1718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1714,
									"end": 1715,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1711,
									"end": 1719,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1839,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1708,
									"end": 1839,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1761,
									"end": 1771,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1756,
									"end": 1759,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1752,
									"end": 1772,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1749,
									"end": 1750,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1742,
									"end": 1773,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1796,
									"end": 1800,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 1793,
									"end": 1794,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1786,
									"end": 1801,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1824,
									"end": 1828,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1821,
									"end": 1822,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1814,
									"end": 1829,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1708,
									"end": 1839,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1708,
									"end": 1839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1856,
									"end": 1865,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1856,
									"end": 1865,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1649,
									"end": 1871,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 1876,
									"end": 2003,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 1876,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1937,
									"end": 1947,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 1932,
									"end": 1935,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 1928,
									"end": 1948,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 1925,
									"end": 1926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1918,
									"end": 1949,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 3545,
									"end": 3819,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3545,
									"end": 3819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3674,
									"end": 3677,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3712,
									"end": 3718,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3706,
									"end": 3719,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3774,
									"end": 3780,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3769,
									"end": 3772,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3762,
									"end": 3766,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3754,
									"end": 3760,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 3750,
									"end": 3767,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3728,
									"end": 3781,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 3728,
									"end": 3781,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 3728,
									"end": 3781,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 3728,
									"end": 3781,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3797,
									"end": 3813,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3797,
									"end": 3813,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3797,
									"end": 3813,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3797,
									"end": 3813,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 3797,
									"end": 3813,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3545,
									"end": 3819,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3545,
									"end": 3819,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3824,
									"end": 4207,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 3824,
									"end": 4207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3973,
									"end": 3975,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 3962,
									"end": 3971,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3955,
									"end": 3976,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 3936,
									"end": 3940,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4005,
									"end": 4011,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3999,
									"end": 4012,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 4048,
									"end": 4054,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4043,
									"end": 4045,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4032,
									"end": 4041,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4028,
									"end": 4046,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4021,
									"end": 4055,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 4064,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4123,
									"end": 4129,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4118,
									"end": 4120,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4107,
									"end": 4116,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4103,
									"end": 4121,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4098,
									"end": 4100,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4090,
									"end": 4096,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 4086,
									"end": 4101,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4064,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 4064,
									"end": 4130,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 4064,
									"end": 4130,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 4064,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4191,
									"end": 4193,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4170,
									"end": 4185,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4166,
									"end": 4195,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4196,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4196,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4151,
									"end": 4196,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4198,
									"end": 4200,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 4147,
									"end": 4201,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4147,
									"end": 4201,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3824,
									"end": 4207,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3824,
									"end": 4207,
									"name": "JUMP",
									"source": 7,
									"value": "[out]"
								},
								{
									"begin": 3824,
									"end": 4207,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 3824,
									"end": 4207,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1540,
									"end": 5066,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008db308feee3715a2cd3cfb8dbd1b1b79a72809f40ebe8d50212d871dd87b33264736f6c634300080d0033",
									".code": [
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "3659CFE6"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "4F1EF286"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "5C60DA1B"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "8F283970"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH",
											"source": 6,
											"value": "F851A440"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2835,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2835,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1540,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2611,
											"end": 2622,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2611,
											"end": 2620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2611,
											"end": 2622,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1217,
											"end": 1249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1249,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1249,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1250,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1189,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1190,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2257,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2305,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 2305,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2342,
											"end": 2357,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 2342,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 2332,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2257,
											"end": 2367,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3981,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4018,
											"end": 4027,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 3998,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3981,
											"end": 4035,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4035,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3981,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3908,
											"end": 4042,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4545,
											"end": 4562,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4564,
											"end": 4568,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4570,
											"end": 4574,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4527,
											"end": 4544,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4527,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4418,
											"end": 4582,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3386,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3416,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3416,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2285,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2285,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3311,
											"end": 3440,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3645,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3732,
											"end": 3740,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 3719,
											"end": 3741,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2798,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2226,
											"end": 2235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2226,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2222,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2237,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2208,
											"end": 2307,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2833,
											"end": 2842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 2833,
											"end": 2844,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6371,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH data",
											"source": 0,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6467,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4857,
											"end": 5064,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4857,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4942,
											"end": 4951,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 4942,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4928,
											"end": 4953,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4938,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4928,
											"end": 4953,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1463,
											"end": 1465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1445,
											"end": 1466,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1502,
											"end": 1504,
											"name": "PUSH",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1482,
											"end": 1500,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1505,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1541,
											"end": 1575,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73706172656E745570677261646561626C6550726F78793A2061646D"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1521,
											"end": 1539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1514,
											"end": 1576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1612,
											"end": 1646,
											"name": "PUSH",
											"source": 7,
											"value": "696E2063616E6E6F742066616C6C6261636B20746F2070726F78792074617267"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1592,
											"end": 1610,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1585,
											"end": 1647,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1663,
											"end": 1682,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 1663,
											"end": 1682,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1682,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1689,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 1706,
											"end": 1725,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4920,
											"end": 5024,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1173,
											"end": 1313,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1173,
											"end": 1313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1240,
											"end": 1252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 1271,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1271,
											"end": 1306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 883,
											"end": 1778,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 883,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1277,
											"end": 1291,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1258,
											"end": 1292,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 1491,
											"end": 1492,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1489,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1486,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1469,
											"end": 1470,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1446,
											"end": 1451,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1433,
											"end": 1493,
											"name": "DELEGATECALL",
											"source": 4
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1564,
											"end": 1565,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1562,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1584,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1743,
											"end": 1759,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1760,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1672,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1691,
											"end": 1707,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1688,
											"end": 1689,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1681,
											"end": 1708,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4949,
											"end": 5071,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 4949,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4993,
											"end": 5000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4683,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 5019,
											"end": 5058,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 5019,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5064,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5019,
											"end": 5064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5019,
											"end": 5064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 5071,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 5071,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2026,
											"end": 2341,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2026,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2153,
											"end": 2170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2134,
											"end": 2152,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 2134,
											"end": 2171,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2134,
											"end": 2171,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 2134,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2213,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2241,
											"end": 2242,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2227,
											"end": 2231,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2238,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2242,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2246,
											"end": 2255,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2227,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2335,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2223,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2223,
											"end": 2335,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2300,
											"end": 2317,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2319,
											"end": 2323,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2324,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2341,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2026,
											"end": 2341,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5465,
											"end": 5600,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 5465,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "PUSH",
											"source": 2,
											"value": "7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F"
										},
										{
											"begin": 5542,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5542,
											"end": 5553,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5542,
											"end": 5553,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 5542,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1982,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1948,
											"end": 1982,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2018,
											"end": 2033,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2013,
											"end": 2015,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1998,
											"end": 2016,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1991,
											"end": 2034,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5529,
											"end": 5564,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 5574,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 5584,
											"end": 5592,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5574,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5574,
											"end": 5593,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2247,
											"end": 2249,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2229,
											"end": 2250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2286,
											"end": 2288,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2259,
											"end": 2289,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2325,
											"end": 2359,
											"name": "PUSH",
											"source": 7,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2360,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2376,
											"end": 2394,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2405,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2422,
											"end": 2441,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 2422,
											"end": 2441,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2045,
											"end": 2447,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6976,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7036,
											"end": 7043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3198,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3199,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3235,
											"end": 3237,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3215,
											"end": 3233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3208,
											"end": 3238,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3274,
											"end": 3308,
											"name": "PUSH",
											"source": 7,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 3254,
											"end": 3272,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3254,
											"end": 3272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3254,
											"end": 3272,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3247,
											"end": 3309,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3325,
											"end": 3343,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3318,
											"end": 3361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3378,
											"end": 3397,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3378,
											"end": 3397,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2994,
											"end": 3403,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 2,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1553,
											"end": 1601,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1553,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5153,
											"end": 5354,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 5153,
											"end": 5354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5216,
											"end": 5238,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5216,
											"end": 5238,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3612,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3592,
											"end": 3613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3651,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3629,
											"end": 3647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3622,
											"end": 3652,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3688,
											"end": 3722,
											"name": "PUSH",
											"source": 7,
											"value": "455243313936373A206E65772061646D696E20697320746865207A65726F2061"
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3661,
											"end": 3723,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3739,
											"end": 3757,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3739,
											"end": 3757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3739,
											"end": 3757,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3804,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 3785,
											"end": 3804,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3408,
											"end": 3810,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 5208,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5339,
											"end": 5347,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4749,
											"name": "PUSH",
											"source": 2,
											"value": "B53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103"
										},
										{
											"begin": 5291,
											"end": 5330,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7210,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 462,
											"end": 468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 470,
											"end": 476,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 478,
											"end": 484,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 528,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 510,
											"end": 517,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 506,
											"end": 529,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 502,
											"end": 534,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 499,
											"end": 551,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 499,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 499,
											"end": 551,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 547,
											"end": 548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 544,
											"end": 545,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 537,
											"end": 549,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 499,
											"end": 551,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 499,
											"end": 551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 570,
											"end": 599,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "tag",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 570,
											"end": 599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 560,
											"end": 599,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 560,
											"end": 599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 650,
											"end": 652,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 648,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 635,
											"end": 653,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 622,
											"end": 654,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 673,
											"end": 691,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 714,
											"end": 716,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 706,
											"end": 712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 703,
											"end": 717,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 700,
											"end": 734,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 700,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 700,
											"end": 734,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 730,
											"end": 731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 727,
											"end": 728,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 720,
											"end": 732,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 700,
											"end": 734,
											"name": "tag",
											"source": 7,
											"value": "161"
										},
										{
											"begin": 700,
											"end": 734,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 757,
											"end": 766,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 753,
											"end": 775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 743,
											"end": 775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 743,
											"end": 775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 813,
											"end": 820,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 802,
											"end": 804,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 798,
											"end": 811,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 794,
											"end": 821,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 784,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 784,
											"end": 839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 835,
											"end": 836,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 833,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 825,
											"end": 837,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 784,
											"end": 839,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 784,
											"end": 839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 875,
											"end": 877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 862,
											"end": 878,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 901,
											"end": 903,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 893,
											"end": 899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 890,
											"end": 904,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 887,
											"end": 921,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 917,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 915,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 907,
											"end": 919,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 887,
											"end": 921,
											"name": "tag",
											"source": 7,
											"value": "163"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 962,
											"end": 969,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 957,
											"end": 959,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 954,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 944,
											"end": 946,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 940,
											"end": 955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 936,
											"end": 960,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 933,
											"end": 970,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 930,
											"end": 987,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 930,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 930,
											"end": 987,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 983,
											"end": 984,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 980,
											"end": 981,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 973,
											"end": 985,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 930,
											"end": 987,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 930,
											"end": 987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1017,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 996,
											"end": 1017,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1042,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1042,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1026,
											"end": 1042,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 383,
											"end": 1048,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2452,
											"end": 2710,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2452,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2524,
											"end": 2525,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2542,
											"end": 2555,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2624,
											"end": 2635,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2618,
											"end": 2636,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2616,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2616,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2616,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2598,
											"end": 2637,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2570,
											"end": 2572,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2563,
											"end": 2573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "170"
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 2534,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2671,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2662,
											"end": 2663,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2672,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2656,
											"end": 2704,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2700,
											"end": 2701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2682,
											"end": 2698,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2702,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2452,
											"end": 2710,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2715,
											"end": 2989,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2715,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2888,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2876,
											"end": 2889,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2944,
											"end": 2950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2939,
											"end": 2942,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2932,
											"end": 2936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2924,
											"end": 2930,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2937,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "tag",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 2898,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2983,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2983,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2715,
											"end": 2989,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 3815,
											"end": 4198,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3815,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3964,
											"end": 3966,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3953,
											"end": 3962,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 3967,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3927,
											"end": 3931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3996,
											"end": 4002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 4003,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4023,
											"end": 4032,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4019,
											"end": 4037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4012,
											"end": 4046,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4109,
											"end": 4111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4098,
											"end": 4107,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4089,
											"end": 4091,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4077,
											"end": 4092,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4055,
											"end": 4121,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 4055,
											"end": 4121,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 4055,
											"end": 4121,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 4055,
											"end": 4121,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4182,
											"end": 4184,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 4161,
											"end": 4176,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4157,
											"end": 4186,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4142,
											"end": 4187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4189,
											"end": 4191,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4138,
											"end": 4192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4138,
											"end": 4192,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3815,
											"end": 4198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3815,
											"end": 4198,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								},
								"52DF0BDF5A5F92D8037CF11E50F13D8017AEFC99D20A73C826416DF79570D481": "b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103",
								"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
								"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
							}
						},
						"methodIdentifiers": {
							"admin()": "f851a440",
							"changeAdmin(address)": "8f283970",
							"implementation()": "5c60da1b",
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing], which can potentially be used in an attack, this contract uses the https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two things that go hand in hand: 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if that call matches one of the admin functions exposed by the proxy itself. 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the implementation. If the admin tries to call a function on the implementation it will fail with an error that says \\\"admin cannot fallback to proxy target\\\". These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due to sudden errors when trying to call a function from the proxy implementation. Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way, you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy.\",\"kind\":\"dev\",\"methods\":{\"admin()\":{\"details\":\"Returns the current admin. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\"},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Emits an {AdminChanged} event. NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}.\"},\"constructor\":{\"details\":\"Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}.\"},\"implementation()\":{\"details\":\"Returns the current implementation. NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}. TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call. `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\"},\"upgradeTo(address)\":{\"details\":\"Upgrade the implementation of the proxy. NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}.\"},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the implementation of the proxy, and then call a function from the new implementation as specified by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the proxied contract. NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Proxy.sol\":{\"keccak256\":\"0x2f7c97e3a1541fcd00af599fb6be770518af3af0f984a634d88416b28e9648b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07f75eb2339f80a4fb2c1aa631c67cb6db5e4e4cefaef4cd95a9fb7cfb18b506\",\"dweb:/ipfs/QmbP7hu2HUyrrBnXEh86Kq5C3FZgzyFY8SnbFbYtnGT8Cn\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/Proxy.sol\":{\"keccak256\":\"0x1b9788d2f62369d55aef39442b0a8c9b05114ff6cb0c59b4f0f4485d1648f0f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d1f8588cf1c70820a1aa2249862d663db591327cc0f94efad1d615c3ec76b4\",\"dweb:/ipfs/QmT4FW1G1unTdr7MTNHaUvDndjrM5Gj5AYcFMvkvq3HnXh\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x4ae6dcba77144ea2929c40fc64c96fd18c2783d409ab6aa9fb7141bddad279bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16e89f9e79c5f0e6807489c9df37da942522d747574afd4409401b9e98ba2b1b\",\"dweb:/ipfs/QmboxeMJbtaXdFraVFWhz5kDscVria5WLQfaYT8bqdWE5v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTContract2/Address.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/Address.sol",
					"exportedSymbols": {
						"Address": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "Address",
							"nameLocation": "134:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "784:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1059:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1116:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1109:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "738:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 295,
									"src": "718:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2119:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2162:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2291:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2309:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2067:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2094:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:0"
									},
									"scope": 295,
									"src": "2048:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3269:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3284:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3277:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 295,
									"src": "3180:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3690:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3746:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3707:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3700:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3611:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3630:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3676:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:0"
									},
									"scope": 295,
									"src": "3573:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4241:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4258:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4251:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4159:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4175:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4194:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4227:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:0"
									},
									"scope": 295,
									"src": "4128:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4741:382:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4861:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4973:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4987:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5042:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "5014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5034:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5091:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5103:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5064:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5057:59:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4681:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4727:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:0"
									},
									"scope": 295,
									"src": "4600:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5400:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5436:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5417:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5410:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5344:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5386:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:0"
									},
									"scope": 295,
									"src": "5300:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5809:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5838:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5827:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5957:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5971:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5998:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6077:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6038:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "6031:59:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5744:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5795:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:0"
									},
									"scope": 295,
									"src": "5681:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6373:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6411:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6390:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6383:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6285:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6314:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6322:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6359:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:0"
									},
									"scope": 295,
									"src": "6276:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6785:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6814:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6940:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6935:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6962:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6949:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7057:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "7018:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "7011:59:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6669:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6698:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6690:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6706:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6739:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6725:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6771:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:0"
									},
									"scope": 295,
									"src": "6660:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7212:596:0",
										"statements": [
											{
												"condition": {
													"id": 275,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "7226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7283:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 279,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7367:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "7739:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 286,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "7764:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 285,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:0"
																	}
																]
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "7363:429:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "7390:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 283,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "7222:580:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7235:42:0",
													"statements": [
														{
															"expression": {
																"id": 276,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "7256:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 274,
															"id": 277,
															"nodeType": "Return",
															"src": "7249:17:0"
														}
													]
												}
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7092:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7115:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7110:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7137:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7124:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7149:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7198:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:0"
									},
									"scope": 295,
									"src": "7083:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 296,
							"src": "126:7684:0",
							"usedErrors": []
						}
					],
					"src": "33:7777:0"
				},
				"id": 0
			},
			"contracts/NFTContract2/ERC1967Proxy.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/ERC1967Proxy.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Proxy": [
							348
						],
						"ERC1967Upgrade": [
							705
						],
						"IBeacon": [
							715
						],
						"Proxy": [
							767
						],
						"StorageSlot": [
							827
						]
					},
					"id": 349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/NFTContract2/Proxy.sol",
							"file": "./Proxy.sol",
							"id": 298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 349,
							"sourceUnit": 768,
							"src": "58:21:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/ERC1967Upgrade.sol",
							"file": "./ERC1967Upgrade.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 349,
							"sourceUnit": 706,
							"src": "80:30:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 301,
										"name": "Proxy",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 767,
										"src": "510:5:1"
									},
									"id": 302,
									"nodeType": "InheritanceSpecifier",
									"src": "510:5:1"
								},
								{
									"baseName": {
										"id": 303,
										"name": "ERC1967Upgrade",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 705,
										"src": "517:14:1"
									},
									"id": 304,
									"nodeType": "InheritanceSpecifier",
									"src": "517:14:1"
								}
							],
							"canonicalName": "ERC1967Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 300,
								"nodeType": "StructuredDocumentation",
								"src": "112:372:1",
								"text": " @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."
							},
							"fullyImplemented": true,
							"id": 348,
							"linearizedBaseContracts": [
								348,
								705,
								767
							],
							"name": "ERC1967Proxy",
							"nameLocation": "494:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "934:161:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 313,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "951:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e696d706c656d656e746174696f6e",
																							"id": 319,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1001:30:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							},
																							"value": "eip1967.proxy.implementation"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd",
																								"typeString": "literal_string \"eip1967.proxy.implementation\""
																							}
																						],
																						"id": 318,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "991:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 320,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "991:41:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "983:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 316,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "983:7:1",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 321,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "983:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1036:1:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "983:54:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "975:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 314,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "975:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "975:63:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "951:87:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 312,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "944:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "944:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "944:95:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 329,
															"name": "_logic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "1067:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 330,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "1075:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 328,
														"name": "_upgradeToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "1049:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1049:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "1049:39:1"
											}
										]
									},
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "538:335:1",
										"text": " @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\n If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\n function call, and allows initializating the storage of the proxy like a Solidity constructor."
									},
									"id": 335,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "898:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "890:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "919:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "906:18:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "906:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:36:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "934:0:1"
									},
									"scope": 348,
									"src": "878:217:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										732
									],
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "1254:59:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 342,
															"name": "ERC1967Upgrade",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "1271:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC1967Upgrade_$705_$",
																"typeString": "type(contract ERC1967Upgrade)"
															}
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_getImplementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 379,
														"src": "1271:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1271:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 341,
												"id": 345,
												"nodeType": "Return",
												"src": "1264:42:1"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1101:67:1",
										"text": " @dev Returns the current implementation address."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1182:15:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 338,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1222:8:1"
									},
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1197:2:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "impl",
												"nameLocation": "1248:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1240:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1240:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1239:14:1"
									},
									"scope": 348,
									"src": "1173:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 349,
							"src": "485:830:1",
							"usedErrors": []
						}
					],
					"src": "33:1282:1"
				},
				"id": 1
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Upgrade": [
							705
						],
						"IBeacon": [
							715
						],
						"StorageSlot": [
							827
						]
					},
					"id": 706,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 350,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "contracts/NFTContract2/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 706,
							"sourceUnit": 716,
							"src": "58:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/Address.sol",
							"file": "./Address.sol",
							"id": 352,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 706,
							"sourceUnit": 296,
							"src": "82:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 706,
							"sourceUnit": 828,
							"src": "106:27:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ERC1967Upgrade",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 354,
								"nodeType": "StructuredDocumentation",
								"src": "135:236:2",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 705,
							"linearizedBaseContracts": [
								705
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "390:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 357,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "515:14:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "490:108:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 355,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 356,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "532:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "605:214:2",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 361,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "850:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "824:115:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 359,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 360,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "873:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "946:68:2",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 366,
									"name": "Upgraded",
									"nameLocation": "1025:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1050:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "1034:30:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:32:2"
									},
									"src": "1019:47:2"
								},
								{
									"body": {
										"id": 378,
										"nodeType": "Block",
										"src": "1206:78:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 374,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 361,
																"src": "1250:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 372,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "1223:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "1223:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$773_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1223:48:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 772,
													"src": "1223:54:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 371,
												"id": 377,
												"nodeType": "Return",
												"src": "1216:61:2"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1072:67:2",
										"text": " @dev Returns the current implementation address."
									},
									"id": 379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1153:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:2:2"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "1197:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:9:2"
									},
									"scope": 705,
									"src": "1144:140:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 402,
										"nodeType": "Block",
										"src": "1438:196:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 388,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "1475:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 386,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "1456:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 387,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "1456:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:37:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1495:47:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 385,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1448:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "1448:95:2"
											},
											{
												"expression": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 396,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "1580:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 393,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "1553:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 793,
																"src": "1553:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$773_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1553:48:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "1553:54:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 399,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 382,
														"src": "1610:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:74:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "1553:74:2"
											}
										]
									},
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "1290:80:2",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1384:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1411:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1403:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:27:2"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:2"
									},
									"scope": 705,
									"src": "1375:259:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "1796:96:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 410,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1825:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 409,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1806:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "1806:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 414,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1867:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 413,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "1858:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "EmitStatement",
												"src": "1853:32:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1640:95:2",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1749:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1768:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "1760:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:27:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 705,
									"src": "1740:152:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2124:217:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 429,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "2153:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 428,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2134:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2134:37:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 433,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "2195:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 432,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "2186:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 435,
												"nodeType": "EmitStatement",
												"src": "2181:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 436,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2227:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2227:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2227:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 440,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 425,
														"src": "2246:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2227:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "2223:112:2",
												"trueBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "2257:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 445,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 421,
																		"src": "2300:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 446,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "2319:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 442,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2271:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "2271:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2271:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 448,
															"nodeType": "ExpressionStatement",
															"src": "2271:53:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "1898:123:2",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2035:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2061:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2053:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2093:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2080:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 422,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2080:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2104:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2099:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2099:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:62:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:0:2"
									},
									"scope": 705,
									"src": "2026:315:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "2617:1210:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "oldImplementation",
														"nameLocation": "2635:17:2",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "2627:25:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2627:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "2655:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2627:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "2747:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 467,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2728:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2728:37:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 471,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 457,
																"src": "2779:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2779:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2793:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2779:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 475,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "2798:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2779:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 485,
												"nodeType": "IfStatement",
												"src": "2775:112:2",
												"trueBody": {
													"id": 484,
													"nodeType": "Block",
													"src": "2809:78:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 480,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "2852:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 481,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 457,
																		"src": "2871:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 477,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2823:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "2823:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:53:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 483,
															"nodeType": "ExpressionStatement",
															"src": "2823:53:2"
														}
													]
												}
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "rollbackTesting",
														"nameLocation": "2989:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 540,
														"src": "2957:47:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot"
														},
														"typeName": {
															"id": 489,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 488,
																"name": "StorageSlot.BooleanSlot",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 776,
																"src": "2957:23:2"
															},
															"referencedDeclaration": 776,
															"src": "2957:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
																"typeString": "struct StorageSlot.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"id": 493,
															"name": "_ROLLBACK_SLOT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 357,
															"src": "3034:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 491,
															"name": "StorageSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "3007:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																"typeString": "type(library StorageSlot)"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getBooleanSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 804,
														"src": "3007:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$776_storage_ptr_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2957:92:2"
											},
											{
												"condition": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3063:22:2",
													"subExpression": {
														"expression": {
															"id": 496,
															"name": "rollbackTesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "3064:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
																"typeString": "struct StorageSlot.BooleanSlot storage pointer"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 775,
														"src": "3064:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 539,
												"nodeType": "IfStatement",
												"src": "3059:762:2",
												"trueBody": {
													"id": 538,
													"nodeType": "Block",
													"src": "3087:734:2",
													"statements": [
														{
															"expression": {
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 499,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "3177:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
																			"typeString": "struct StorageSlot.BooleanSlot storage pointer"
																		}
																	},
																	"id": 501,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 775,
																	"src": "3177:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3201:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3177:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 504,
															"nodeType": "ExpressionStatement",
															"src": "3177:28:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 508,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "3265:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "75706772616465546f286164647265737329",
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3345:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				"value": "upgradeTo(address)"
																			},
																			{
																				"id": 512,
																				"name": "oldImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 463,
																				"src": "3387:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 509,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3300:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "3300:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3300:122:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 505,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "3219:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "3219:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3219:217:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "3219:217:2"
														},
														{
															"expression": {
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 516,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "3450:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
																			"typeString": "struct StorageSlot.BooleanSlot storage pointer"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 775,
																	"src": "3450:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 519,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3450:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 521,
															"nodeType": "ExpressionStatement",
															"src": "3450:29:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 523,
																			"name": "oldImplementation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 463,
																			"src": "3545:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 524,
																				"name": "_getImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "3566:18:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3566:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3545:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524331393637557067726164653a207570677261646520627265616b732066757274686572207570677261646573",
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3588:49:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		},
																		"value": "ERC1967Upgrade: upgrade breaks further upgrades"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		}
																	],
																	"id": 522,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3537:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3537:101:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "3537:101:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 531,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "3746:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "3727:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3727:37:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "3727:37:2"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 535,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 455,
																		"src": "3792:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 534,
																	"name": "Upgraded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 366,
																	"src": "3783:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3783:27:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 537,
															"nodeType": "EmitStatement",
															"src": "3778:32:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "2347:161:2",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallSecure",
									"nameLocation": "2522:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2554:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2546:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2586:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2573:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2573:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2597:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2592:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 458,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2592:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:62:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2617:0:2"
									},
									"scope": 705,
									"src": "2513:1314:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "4226:217:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4247:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 551,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "4236:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4236:21:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 556,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "4287:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 555,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "4272:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 558,
												"nodeType": "EmitStatement",
												"src": "4267:30:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 562,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 559,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4311:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4311:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4311:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 563,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "4330:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4311:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "4307:130:2",
												"trueBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "4341:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 569,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 544,
																						"src": "4392:9:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 568,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 715,
																					"src": "4384:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$715_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4384:18:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$715",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 714,
																			"src": "4384:33:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4384:35:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 573,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4421:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 565,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "4355:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "4355:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4355:71:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 575,
															"nodeType": "ExpressionStatement",
															"src": "4355:71:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "3833:292:2",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "4139:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4171:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4163:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4195:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4182:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4182:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "4206:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "4201:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 547,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4201:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4162:54:2"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4226:0:2"
									},
									"scope": 705,
									"src": "4130:313:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "4449:189:2",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 583,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4669:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "4643:106:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 581,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4643:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 582,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4683:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "4756:67:2",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 590,
									"name": "AdminChanged",
									"nameLocation": "4834:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "4855:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4847:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4878:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "4870:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:41:2"
									},
									"src": "4828:60:2"
								},
								{
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "5002:69:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 598,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "5046:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 596,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "5019:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "5019:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$773_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 600,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 772,
													"src": "5019:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 595,
												"id": 601,
												"nodeType": "Return",
												"src": "5012:52:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "4894:50:2",
										"text": " @dev Returns the current admin."
									},
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4958:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4967:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "4993:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:9:2"
									},
									"scope": 705,
									"src": "4949:122:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "5198:156:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 610,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "5216:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 613,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5236:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 612,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5228:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 611,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5228:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5228:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5216:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5240:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5208:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5208:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "5208:73:2"
											},
											{
												"expression": {
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5318:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 619,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "5291:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 793,
																"src": "5291:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$773_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "5291:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 625,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5339:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5291:56:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 627,
												"nodeType": "ExpressionStatement",
												"src": "5291:56:2"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "5077:71:2",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "5162:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5180:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "5172:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:18:2"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5198:0:2"
									},
									"scope": 705,
									"src": "5153:201:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "5514:86:2",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 636,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 603,
																"src": "5542:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 638,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5555:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 635,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 590,
														"src": "5529:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "EmitStatement",
												"src": "5524:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 642,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "5584:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 641,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "5574:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "5574:19:2"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "5360:100:2",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "5474:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5495:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5487:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5486:18:2"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5514:0:2"
									},
									"scope": 705,
									"src": "5465:135:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5606:232:2",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 650,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5869:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 705,
									"src": "5843:107:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 648,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5843:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 649,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5884:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5957:60:2",
										"text": " @dev Emitted when the beacon is upgraded."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 655,
									"name": "BeaconUpgraded",
									"nameLocation": "6028:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "6059:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6043:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:24:2"
									},
									"src": "6022:45:2"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "6183:70:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 663,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 650,
																"src": "6227:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 661,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 827,
																"src": "6200:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 793,
															"src": "6200:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$773_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6200:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 772,
													"src": "6200:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 660,
												"id": 666,
												"nodeType": "Return",
												"src": "6193:53:2"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6073:51:2",
										"text": " @dev Returns the current beacon."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "6138:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6148:2:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "6174:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6173:9:2"
									},
									"scope": 705,
									"src": "6129:124:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 703,
										"nodeType": "Block",
										"src": "6382:358:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 677,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 671,
																	"src": "6432:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 675,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "6413:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "6413:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6413:29:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6456:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6392:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:113:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "6392:113:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 686,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "6563:9:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 685,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 715,
																				"src": "6555:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$715_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$715",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 714,
																		"src": "6555:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6555:35:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 683,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "6536:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "6536:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6536:55:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6605:50:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6515:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "6515:150:2"
											},
											{
												"expression": {
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 697,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "6702:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 694,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "6675:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$827_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 793,
																"src": "6675:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$773_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:40:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 772,
														"src": "6675:46:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 700,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "6724:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6675:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 702,
												"nodeType": "ExpressionStatement",
												"src": "6675:58:2"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "6259:71:2",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "6344:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6363:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 704,
												"src": "6355:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6355:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6354:19:2"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6382:0:2"
									},
									"scope": 705,
									"src": "6335:405:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 706,
							"src": "372:6370:2",
							"usedErrors": []
						}
					],
					"src": "33:6709:2"
				},
				"id": 2
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							715
						]
					},
					"id": 716,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 707,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 708,
								"nodeType": "StructuredDocumentation",
								"src": "58:79:3",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 715,
							"linearizedBaseContracts": [
								715
							],
							"name": "IBeacon",
							"nameLocation": "148:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "162:162:3",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 714,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "338:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:3"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "378:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:3"
									},
									"scope": 715,
									"src": "329:58:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 716,
							"src": "138:251:3",
							"usedErrors": []
						}
					],
					"src": "33:356:3"
				},
				"id": 3
			},
			"contracts/NFTContract2/Proxy.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/Proxy.sol",
					"exportedSymbols": {
						"Proxy": [
							767
						]
					},
					"id": 768,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 717,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Proxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 718,
								"nodeType": "StructuredDocumentation",
								"src": "58:598:4",
								"text": " @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."
							},
							"fullyImplemented": false,
							"id": 767,
							"linearizedBaseContracts": [
								767
							],
							"name": "Proxy",
							"nameLocation": "675:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "943:835:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1018:754:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1271:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1274:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1277:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1277:14:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1258:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1258:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1258:34:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1419:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nodeType": "YulIdentifier",
																			"src": "1446:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1446:5:4"
																	},
																	{
																		"name": "implementation",
																		"nodeType": "YulIdentifier",
																		"src": "1453:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1469:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "calldatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1472:12:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1472:14:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1488:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1491:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "delegatecall",
																	"nodeType": "YulIdentifier",
																	"src": "1433:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:60:4"
															},
															"variables": [
																{
																	"name": "result",
																	"nodeType": "YulTypedName",
																	"src": "1423:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1561:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1564:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "1567:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1567:16:4"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1546:14:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:38:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1546:38:4"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1679:31:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1688:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1691:14:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1691:16:4"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1681:27:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1681:27:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1672:38:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1677:1:4",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1731:31:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1740:1:4",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "returndatasize",
																								"nodeType": "YulIdentifier",
																								"src": "1743:14:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1743:16:4"
																						}
																					],
																					"functionName": {
																						"name": "return",
																						"nodeType": "YulIdentifier",
																						"src": "1733:6:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1733:27:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1733:27:4"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1723:39:4",
																	"value": "default"
																}
															],
															"expression": {
																"name": "result",
																"nodeType": "YulIdentifier",
																"src": "1605:6:4"
															},
															"nodeType": "YulSwitch",
															"src": "1598:164:4"
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 721,
														"isOffset": false,
														"isSlot": false,
														"src": "1453:14:4",
														"valueSize": 1
													}
												],
												"id": 724,
												"nodeType": "InlineAssembly",
												"src": "1009:763:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "687:191:4",
										"text": " @dev Delegates the current call to `implementation`.\n This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_delegate",
									"nameLocation": "892:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "910:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "902:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "902:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "901:24:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "943:0:4"
									},
									"scope": 767,
									"src": "883:895:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "1784:172:4",
										"text": " @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n and {_fallback} should delegate."
									},
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_implementation",
									"nameLocation": "1970:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:4"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "2019:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:9:4"
									},
									"scope": 767,
									"src": "1961:67:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "2295:72:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_beforeFallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 766,
														"src": "2305:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2305:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 738,
												"nodeType": "ExpressionStatement",
												"src": "2305:17:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 740,
																"name": "_implementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "2342:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2342:17:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 739,
														"name": "_delegate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2332:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2332:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "2332:28:4"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "2034:218:4",
										"text": " @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internall call site, it will return directly to the external caller."
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_fallback",
									"nameLocation": "2266:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2275:2:4"
									},
									"returnParameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2295:0:4"
									},
									"scope": 767,
									"src": "2257:110:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2601:28:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 749,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "2611:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2611:11:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "2611:11:4"
											}
										]
									},
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "2373:186:4",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."
									},
									"id": 753,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2573:2:4"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2601:0:4"
									},
									"scope": 767,
									"src": "2564:65:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "2825:28:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 757,
														"name": "_fallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "2835:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2835:11:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "2835:11:4"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "2635:149:4",
										"text": " @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."
									},
									"id": 761,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:2:4"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2825:0:4"
									},
									"scope": 767,
									"src": "2789:64:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 765,
										"nodeType": "Block",
										"src": "3178:7:4",
										"statements": []
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "2859:270:4",
										"text": " @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overriden should call `super._beforeFallback()`."
									},
									"id": 766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "3143:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3158:2:4"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3178:0:4"
									},
									"scope": 767,
									"src": "3134:51:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 768,
							"src": "657:2530:4",
							"usedErrors": []
						}
					],
					"src": "33:3154:4"
				},
				"id": 4
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							827
						]
					},
					"id": 828,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 769,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 770,
								"nodeType": "StructuredDocumentation",
								"src": "58:1148:5",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 827,
							"linearizedBaseContracts": [
								827
							],
							"name": "StorageSlot",
							"nameLocation": "1215:11:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 773,
									"members": [
										{
											"constant": false,
											"id": 772,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1270:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 773,
											"src": "1262:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 771,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1262:7:5",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1240:11:5",
									"nodeType": "StructDefinition",
									"scope": 827,
									"src": "1233:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 776,
									"members": [
										{
											"constant": false,
											"id": 775,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1322:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 776,
											"src": "1317:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 774,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1317:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1295:11:5",
									"nodeType": "StructDefinition",
									"scope": 827,
									"src": "1288:46:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 779,
									"members": [
										{
											"constant": false,
											"id": 778,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1377:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 779,
											"src": "1369:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 777,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1369:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1347:11:5",
									"nodeType": "StructDefinition",
									"scope": 827,
									"src": "1340:49:5",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 782,
									"members": [
										{
											"constant": false,
											"id": 781,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1432:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 782,
											"src": "1424:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 780,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1402:11:5",
									"nodeType": "StructDefinition",
									"scope": 827,
									"src": "1395:49:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "1626:63:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1645:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1659:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1669:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 789,
														"isOffset": false,
														"isSlot": true,
														"src": "1659:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 785,
														"isOffset": false,
														"isSlot": false,
														"src": "1669:4:5",
														"valueSize": 1
													}
												],
												"id": 791,
												"nodeType": "InlineAssembly",
												"src": "1636:47:5"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "1450:87:5",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1551:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1574:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1566:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 784,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:14:5"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1623:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "1603:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 787,
														"name": "AddressSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 773,
														"src": "1603:11:5"
													},
													"referencedDeclaration": 773,
													"src": "1603:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$773_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:23:5"
									},
									"scope": 827,
									"src": "1542:147:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "1871:63:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1890:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1904:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1914:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 800,
														"isOffset": false,
														"isSlot": true,
														"src": "1904:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 796,
														"isOffset": false,
														"isSlot": false,
														"src": "1914:4:5",
														"valueSize": 1
													}
												],
												"id": 802,
												"nodeType": "InlineAssembly",
												"src": "1881:47:5"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "1695:87:5",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1796:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1819:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1811:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 795,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:14:5"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1868:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "1848:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "BooleanSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 776,
														"src": "1848:11:5"
													},
													"referencedDeclaration": 776,
													"src": "1848:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$776_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:23:5"
									},
									"scope": 827,
									"src": "1787:147:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 814,
										"nodeType": "Block",
										"src": "2116:63:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2135:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2149:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2159:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 811,
														"isOffset": false,
														"isSlot": true,
														"src": "2149:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 807,
														"isOffset": false,
														"isSlot": false,
														"src": "2159:4:5",
														"valueSize": 1
													}
												],
												"id": 813,
												"nodeType": "InlineAssembly",
												"src": "2126:47:5"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "1940:87:5",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 815,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2041:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2064:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2056:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 806,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:14:5"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2113:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 815,
												"src": "2093:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$779_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 810,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 809,
														"name": "Bytes32Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 779,
														"src": "2093:11:5"
													},
													"referencedDeclaration": 779,
													"src": "2093:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$779_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:23:5"
									},
									"scope": 827,
									"src": "2032:147:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "2361:63:5",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2380:38:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2394:14:5",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2404:4:5"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 822,
														"isOffset": false,
														"isSlot": true,
														"src": "2394:6:5",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "2404:4:5",
														"valueSize": 1
													}
												],
												"id": 824,
												"nodeType": "InlineAssembly",
												"src": "2371:47:5"
											}
										]
									},
									"documentation": {
										"id": 816,
										"nodeType": "StructuredDocumentation",
										"src": "2185:87:5",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2286:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2309:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2301:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 817,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:14:5"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2358:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "2338:21:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$782_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 821,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 820,
														"name": "Uint256Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 782,
														"src": "2338:11:5"
													},
													"referencedDeclaration": 782,
													"src": "2338:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$782_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:23:5"
									},
									"scope": 827,
									"src": "2277:147:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 828,
							"src": "1207:1219:5",
							"usedErrors": []
						}
					],
					"src": "33:2393:5"
				},
				"id": 5
			},
			"contracts/NFTContract2/TransparentUpgradeableProxy.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/TransparentUpgradeableProxy.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Proxy": [
							348
						],
						"ERC1967Upgrade": [
							705
						],
						"IBeacon": [
							715
						],
						"Proxy": [
							767
						],
						"StorageSlot": [
							827
						],
						"TransparentUpgradeableProxy": [
							991
						]
					},
					"id": 992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 829,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:6"
						},
						{
							"absolutePath": "contracts/NFTContract2/ERC1967Proxy.sol",
							"file": "./ERC1967Proxy.sol",
							"id": 830,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 992,
							"sourceUnit": 349,
							"src": "58:28:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 832,
										"name": "ERC1967Proxy",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 348,
										"src": "1580:12:6"
									},
									"id": 833,
									"nodeType": "InheritanceSpecifier",
									"src": "1580:12:6"
								}
							],
							"canonicalName": "TransparentUpgradeableProxy",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 831,
								"nodeType": "StructuredDocumentation",
								"src": "88:1451:6",
								"text": " @dev This contract implements a proxy that is upgradeable by an admin.\n To avoid https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector\n clashing], which can potentially be used in an attack, this contract uses the\n https://blog.openzeppelin.com/the-transparent-proxy-pattern/[transparent proxy pattern]. This pattern implies two\n things that go hand in hand:\n 1. If any account other than the admin calls the proxy, the call will be forwarded to the implementation, even if\n that call matches one of the admin functions exposed by the proxy itself.\n 2. If the admin calls the proxy, it can access the admin functions, but its calls will never be forwarded to the\n implementation. If the admin tries to call a function on the implementation it will fail with an error that says\n \"admin cannot fallback to proxy target\".\n These properties mean that the admin account can only be used for admin actions like upgrading the proxy or changing\n the admin, so it's best if it's a dedicated account that is not used for anything else. This will avoid headaches due\n to sudden errors when trying to call a function from the proxy implementation.\n Our recommendation is for the dedicated account to be an instance of the {ProxyAdmin} contract. If set up this way,\n you should think of the `ProxyAdmin` instance as the real administrative interface of your proxy."
							},
							"fullyImplemented": true,
							"id": 991,
							"linearizedBaseContracts": [
								991,
								348,
								705,
								767
							],
							"name": "TransparentUpgradeableProxy",
							"nameLocation": "1549:27:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "1914:124:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"id": 848,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "1931:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "656970313936372e70726f78792e61646d696e",
																							"id": 854,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "1972:21:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							},
																							"value": "eip1967.proxy.admin"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
																								"typeString": "literal_string \"eip1967.proxy.admin\""
																							}
																						],
																						"id": 853,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967288,
																						"src": "1962:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 855,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1962:32:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 852,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1954:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 851,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "1954:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1954:41:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 857,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1998:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1954:45:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 849,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:54:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "1931:69:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 847,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967293,
														"src": "1924:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1924:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 862,
												"nodeType": "ExpressionStatement",
												"src": "1924:77:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 864,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "2024:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 863,
														"name": "_changeAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "2011:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2011:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "2011:20:6"
											}
										]
									},
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "1599:210:6",
										"text": " @dev Initializes an upgradeable proxy managed by `_admin`, backed by the implementation at `_logic`, and\n optionally initialized with `_data` as explained in {ERC1967Proxy-constructor}."
									},
									"id": 868,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 843,
													"name": "_logic",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 836,
													"src": "1899:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 844,
													"name": "_data",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "1907:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												}
											],
											"id": 845,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 842,
												"name": "ERC1967Proxy",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 348,
												"src": "1886:12:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1886:27:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "_logic",
												"nameLocation": "1834:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1826:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "1850:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1842:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "1871:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "1858:18:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 839,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1858:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:52:6"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1914:0:6"
									},
									"scope": 991,
									"src": "1814:224:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "2198:115:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 871,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2212:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2212:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 873,
															"name": "_getAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2226:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2226:11:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2212:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "2271:36:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 878,
																	"name": "_fallback",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 745,
																	"src": "2285:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2285:11:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "ExpressionStatement",
															"src": "2285:11:6"
														}
													]
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "2208:99:6",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "2239:26:6",
													"statements": [
														{
															"id": 876,
															"nodeType": "PlaceholderStatement",
															"src": "2253:1:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "2044:130:6",
										"text": " @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin."
									},
									"id": 884,
									"name": "ifAdmin",
									"nameLocation": "2188:7:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2195:2:6"
									},
									"src": "2179:134:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "2814:37:6",
										"statements": [
											{
												"expression": {
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 892,
														"name": "admin_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 890,
														"src": "2824:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 893,
															"name": "_getAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "2833:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2833:11:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2824:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "2824:20:6"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "2319:431:6",
										"text": " @dev Returns the current admin.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyAdmin}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"functionSelector": "f851a440",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 888,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 887,
												"name": "ifAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 884,
												"src": "2781:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2781:7:6"
										}
									],
									"name": "admin",
									"nameLocation": "2764:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2769:2:6"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "2806:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "2798:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:16:6"
									},
									"scope": 991,
									"src": "2755:96:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "3388:52:6",
										"statements": [
											{
												"expression": {
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 906,
														"name": "implementation_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3398:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 907,
															"name": "_implementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																347
															],
															"referencedDeclaration": 347,
															"src": "3416:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3416:17:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3398:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "3398:35:6"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "2857:449:6",
										"text": " @dev Returns the current implementation.\n NOTE: Only the admin can call this function. See {ProxyAdmin-getProxyImplementation}.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"
									},
									"functionSelector": "5c60da1b",
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 902,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 901,
												"name": "ifAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 884,
												"src": "3346:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3346:7:6"
										}
									],
									"name": "implementation",
									"nameLocation": "3320:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3334:2:6"
									},
									"returnParameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "implementation_",
												"nameLocation": "3371:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "3363:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3363:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3362:25:6"
									},
									"scope": 991,
									"src": "3311:129:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "3709:39:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "3732:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 920,
														"name": "_changeAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 646,
														"src": "3719:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3719:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "3719:22:6"
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "3446:194:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event.\n NOTE: Only the admin can call this function. See {ProxyAdmin-changeProxyAdmin}."
									},
									"functionSelector": "8f283970",
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 918,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 917,
												"name": "ifAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 884,
												"src": "3701:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3701:7:6"
										}
									],
									"name": "changeAdmin",
									"nameLocation": "3654:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3674:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3666:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3666:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3665:18:6"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3709:0:6"
									},
									"scope": 991,
									"src": "3645:103:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 942,
										"nodeType": "Block",
										"src": "3971:71:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 934,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "3999:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4024:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4018:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 935,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "4018:5:6",
																	"typeDescriptions": {}
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4018:9:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4029:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 933,
														"name": "_upgradeToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "3981:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3981:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "3981:54:6"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "3754:149:6",
										"text": " @dev Upgrade the implementation of the proxy.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgrade}."
									},
									"functionSelector": "3659cfe6",
									"id": 943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 931,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 930,
												"name": "ifAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 884,
												"src": "3963:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3963:7:6"
										}
									],
									"name": "upgradeTo",
									"nameLocation": "3917:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3935:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 943,
												"src": "3927:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3926:27:6"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3971:0:6"
									},
									"scope": 991,
									"src": "3908:134:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "4517:65:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 954,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "4545:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "4564:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														},
														{
															"hexValue": "74727565",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4570:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 953,
														"name": "_upgradeToAndCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "4527:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "4527:48:6"
											}
										]
									},
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "4048:365:6",
										"text": " @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n proxied contract.\n NOTE: Only the admin can call this function. See {ProxyAdmin-upgradeAndCall}."
									},
									"functionSelector": "4f1ef286",
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 951,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 950,
												"name": "ifAdmin",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 884,
												"src": "4509:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4509:7:6"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4427:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4452:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4444:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 945,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4444:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4486:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "4471:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 947,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4471:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4443:48:6"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4517:0:6"
									},
									"scope": 991,
									"src": "4418:164:6",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 969,
										"nodeType": "Block",
										"src": "4701:35:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 966,
														"name": "_getAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "4718:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4718:11:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 965,
												"id": 968,
												"nodeType": "Return",
												"src": "4711:18:6"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "4588:50:6",
										"text": " @dev Returns the current admin."
									},
									"id": 970,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_admin",
									"nameLocation": "4652:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4658:2:6"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "4692:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:9:6"
									},
									"scope": 991,
									"src": "4643:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										766
									],
									"body": {
										"id": 989,
										"nodeType": "Block",
										"src": "4910:154:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 976,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4928:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4928:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 978,
																	"name": "_getAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 603,
																	"src": "4942:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4942:11:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4928:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73706172656e745570677261646561626c6550726f78793a2061646d696e2063616e6e6f742066616c6c6261636b20746f2070726f787920746172676574",
															"id": 981,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4955:68:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
																"typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
															},
															"value": "TransparentUpgradeableProxy: admin cannot fallback to proxy target"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f5d2ea39d7e6c7d19dc32ccc2bd7ca26b7aa4a603ef4aa6f2b205c93c3ffe43d",
																"typeString": "literal_string \"TransparentUpgradeableProxy: admin cannot fallback to proxy target\""
															}
														],
														"id": 975,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4920:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4920:104:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "4920:104:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 984,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5034:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TransparentUpgradeableProxy_$991_$",
																"typeString": "type(contract super TransparentUpgradeableProxy)"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_beforeFallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 766,
														"src": "5034:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5034:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "5034:23:6"
											}
										]
									},
									"documentation": {
										"id": 971,
										"nodeType": "StructuredDocumentation",
										"src": "4742:110:6",
										"text": " @dev Makes sure the admin cannot access the fallback function. See {Proxy-_beforeFallback}."
									},
									"id": 990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeFallback",
									"nameLocation": "4866:15:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 973,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4901:8:6"
									},
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4881:2:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4910:0:6"
									},
									"scope": 991,
									"src": "4857:207:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 992,
							"src": "1540:3526:6",
							"usedErrors": []
						}
					],
					"src": "33:5033:6"
				},
				"id": 6
			}
		}
	}
}