{
	"id": "86e014098a0f09eeb6e085bc2c8dab6d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTContract2/Proxiable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"./UUPSUpgradeable.sol\";\n\nabstract contract Proxiable is UUPSUpgradeable {\n    function _authorizeUpgrade(address newImplementation) internal override {\n        _beforeUpgrade(newImplementation);\n    }\n\n    function _beforeUpgrade(address newImplementation) internal virtual;\n}\n\ncontract ChildOfProxiable is Proxiable {\n    function _beforeUpgrade(address newImplementation) internal virtual override {}\n}"
			},
			"contracts/NFTContract2/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes\n * publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify\n * continuation of the upgradability.\n *\n * The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is ERC1967Upgrade {\n    function upgradeTo(address newImplementation) external virtual {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallSecure(newImplementation, bytes(\"\"), false);\n    }\n\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallSecure(newImplementation, data, true);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}"
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\nimport \"./IBeacon.sol\";\nimport \"./Address.sol\";\nimport \"./StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {\n        address oldImplementation = _getImplementation();\n\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n\n        // Perform rollback test if not already in progress\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT);\n        if (!rollbackTesting.value) {\n            // Trigger rollback using upgradeTo from the new implementation\n            rollbackTesting.value = true;\n            Address.functionDelegateCall(\n                newImplementation,\n                abi.encodeWithSignature(\n                    \"upgradeTo(address)\",\n                    oldImplementation\n                )\n            );\n            rollbackTesting.value = false;\n            // Check rollback was effective\n            require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\");\n            // Finally reset to the new implementation and log the upgrade\n            _setImplementation(newImplementation);\n            emit Upgraded(newImplementation);\n        }\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(\n            Address.isContract(newBeacon),\n            \"ERC1967: new beacon is not a contract\"\n        );\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n}"
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}"
			},
			"contracts/NFTContract2/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTContract2/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c38522b427a9bf90fc760e4a2aa4368a75260c19dc41d5e3bfe94b4b3af2942564736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c38522b427a9bf90fc760e4a2aa4368a75260c19dc41d5e3bfe94b4b3af2942564736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 DUP6 0x22 0xB4 0x27 0xA9 0xBF SWAP1 0xFC PUSH23 0xE4A2AA4368A75260C19DC41D5E3BFE94B4B3AF2942564 PUSH20 0x6F6C634300080200330000000000000000000000 ",
							"sourceMap": "126:7684:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;126:7684:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c38522b427a9bf90fc760e4a2aa4368a75260c19dc41d5e3bfe94b4b3af2942564736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 DUP6 0x22 0xB4 0x27 0xA9 0xBF SWAP1 0xFC PUSH23 0xE4A2AA4368A75260C19DC41D5E3BFE94B4B3AF2942564 PUSH20 0x6F6C634300080200330000000000000000000000 ",
							"sourceMap": "126:7684:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c38522b427a9bf90fc760e4a2aa4368a75260c19dc41d5e3bfe94b4b3af2942564736f6c63430008020033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is upgraded."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/Proxiable.sol": {
				"ChildOfProxiable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/Proxiable.sol\":343:469  contract ChildOfProxiable is Proxiable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/Proxiable.sol\":343:469  contract ChildOfProxiable is Proxiable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      calldatasize\n      0x04\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":766:980  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {... */\n    tag_3:\n      tag_5\n      tag_10\n      calldatasize\n      0x04\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n    tag_8:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":647:683  _authorizeUpgrade(newImplementation) */\n      tag_14\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":665:682  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":647:664  _authorizeUpgrade */\n      tag_15\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":647:683  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_14:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":693:753  _upgradeToAndCallSecure(newImplementation, bytes(\"\"), false) */\n      tag_16\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":717:734  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":736:745  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":747:752  false */\n      0x00\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":693:716  _upgradeToAndCallSecure */\n      tag_17\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":693:753  _upgradeToAndCallSecure(newImplementation, bytes(\"\"), false) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":766:980  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {... */\n    tag_12:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":873:909  _authorizeUpgrade(newImplementation) */\n      tag_19\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":891:908  newImplementation */\n      dup3\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":873:890  _authorizeUpgrade */\n      tag_15\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":873:909  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":919:973  _upgradeToAndCallSecure(newImplementation, data, true) */\n      tag_20\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":943:960  newImplementation */\n      dup3\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":962:966  data */\n      dup3\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":968:972  true */\n      0x01\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":919:942  _upgradeToAndCallSecure */\n      tag_17\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":919:973  _upgradeToAndCallSecure(newImplementation, data, true) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":766:980  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Proxiable.sol\":143:265  function _authorizeUpgrade(address newImplementation) internal override {... */\n    tag_15:\n        /* \"contracts/NFTContract2/Proxiable.sol\":225:258  _beforeUpgrade(newImplementation) */\n      tag_16\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2513:3827  function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_17:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2627:2652  address oldImplementation */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2655:2675  _getImplementation() */\n      tag_25\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1277  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1144:1284  function _getImplementation() internal view returns (address) {... */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2655:2675  _getImplementation() */\n    tag_25:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2627:2675  address oldImplementation = _getImplementation() */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2728:2765  _setImplementation(newImplementation) */\n      tag_27\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2747:2764  newImplementation */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2728:2746  _setImplementation */\n      tag_28\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2728:2765  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2793:2794  0 */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2783  data */\n      dup4\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2790  data.length */\n      mload\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2794  data.length > 0 */\n      gt\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2807  data.length > 0 || forceCall */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2798:2807  forceCall */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2807  data.length > 0 || forceCall */\n    tag_29:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2775:2887  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2823:2876  Address.functionDelegateCall(newImplementation, data) */\n      tag_31\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2852:2869  newImplementation */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2871:2875  data */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2823:2851  Address.functionDelegateCall */\n      tag_32\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2823:2876  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_31:\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2775:2887  if (data.length > 0 || forceCall) {... */\n    tag_30:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":532:598  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3064:3085  rollbackTesting.value */\n      dup1\n      sload\n      0xff\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3059:3821  if (!rollbackTesting.value) {... */\n      tag_35\n      jumpi\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3177:3205  rollbackTesting.value = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3201:3205  true */\n      0x01\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3177:3205  rollbackTesting.value = true */\n      or\n      dup2\n      sstore\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3300:3422  abi.encodeWithSignature(... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1881:1913   */\n      dup4\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3300:3422  abi.encodeWithSignature(... */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1863:1914   */\n      mstore\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3219:3436  Address.functionDelegateCall(... */\n      tag_36\n      swap1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3265:3282  newImplementation */\n      dup7\n      swap1\n        /* \"#utility.yul\":1836:1854   */\n      0x44\n      add\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3300:3422  abi.encodeWithSignature(... */\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe1, 0x1b2ce7f3)\n      or\n      swap1\n      mstore\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3219:3247  Address.functionDelegateCall */\n      tag_32\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3219:3436  Address.functionDelegateCall(... */\n      jump\t// in\n    tag_36:\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3450:3479  rollbackTesting.value = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1277  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3545:3586  oldImplementation == _getImplementation() */\n      dup4\n      dup2\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1277  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap2\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3545:3586  oldImplementation == _getImplementation() */\n      eq\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3537:3638  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2515:2517   */\n      0x20\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3537:3638  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2497:2518   */\n      mstore\n        /* \"#utility.yul\":2554:2556   */\n      0x2f\n        /* \"#utility.yul\":2534:2552   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2527:2557   */\n      mstore\n        /* \"#utility.yul\":2593:2627   */\n      0x45524331393637557067726164653a207570677261646520627265616b732066\n        /* \"#utility.yul\":2573:2591   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2566:2628   */\n      mstore\n      shl(0x88, 0x757274686572207570677261646573)\n        /* \"#utility.yul\":2644:2662   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":2637:2682   */\n      mstore\n        /* \"#utility.yul\":2699:2718   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3537:3638  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3727:3764  _setImplementation(newImplementation) */\n      tag_43\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3746:3763  newImplementation */\n      dup6\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3727:3745  _setImplementation */\n      tag_28\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3727:3764  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3783:3810  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3059:3821  if (!rollbackTesting.value) {... */\n    tag_35:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2513:3827  function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n    tag_28:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n      tag_49\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1475:1492  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1474  Address.isContract */\n      tag_50\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":2931:2933   */\n      0x20\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2913:2934   */\n      mstore\n        /* \"#utility.yul\":2970:2972   */\n      0x2d\n        /* \"#utility.yul\":2950:2968   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2943:2973   */\n      mstore\n        /* \"#utility.yul\":3009:3043   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":2989:3007   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":2982:3044   */\n      mstore\n      shl(0x9a, 0x1bdd08184818dbdb9d1c9858dd)\n        /* \"#utility.yul\":3060:3078   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3053:3096   */\n      mstore\n        /* \"#utility.yul\":3113:3132   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_41\n        /* \"#utility.yul\":2903:3138   */\n      jump\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n    tag_51:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1627  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_32:\n        /* \"contracts/NFTContract2/Address.sol\":6359:6371  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_56\n        /* \"contracts/NFTContract2/Address.sol\":6411:6417  target */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6419:6423  data */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/NFTContract2/Address.sol\":6390:6410  functionDelegateCall */\n      tag_57\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_56:\n        /* \"contracts/NFTContract2/Address.sol\":6383:6467  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap4\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_50:\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      dup1\n      extcodesize\n        /* \"contracts/NFTContract2/Address.sol\":1116:1124  size > 0 */\n      iszero\n      iszero\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_60:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_57:\n        /* \"contracts/NFTContract2/Address.sol\":6771:6783  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":6803:6821  isContract(target) */\n      tag_62\n        /* \"contracts/NFTContract2/Address.sol\":6814:6820  target */\n      dup5\n        /* \"contracts/NFTContract2/Address.sol\":6803:6813  isContract */\n      tag_50\n        /* \"contracts/NFTContract2/Address.sol\":6803:6821  isContract(target) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3345:3347   */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3327:3348   */\n      mstore\n        /* \"#utility.yul\":3384:3386   */\n      0x26\n        /* \"#utility.yul\":3364:3382   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3357:3387   */\n      mstore\n        /* \"#utility.yul\":3423:3457   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":3403:3421   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3396:3458   */\n      mstore\n      shl(0xd2, 0x1b9d1c9858dd)\n        /* \"#utility.yul\":3474:3492   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3467:3503   */\n      mstore\n        /* \"#utility.yul\":3520:3539   */\n      0x84\n      add\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_41\n        /* \"#utility.yul\":3317:3545   */\n      jump\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n    tag_63:\n        /* \"contracts/NFTContract2/Address.sol\":6935:6947  bool success */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":6949:6972  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":6976:6982  target */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/NFTContract2/Address.sol\":6976:6995  target.delegatecall */\n      and\n        /* \"contracts/NFTContract2/Address.sol\":6996:7000  data */\n      dup6\n        /* \"contracts/NFTContract2/Address.sol\":6976:7001  target.delegatecall(data) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      tag_71\n        /* \"contracts/NFTContract2/Address.sol\":7036:7043  success */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7045:7055  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7057:7069  errorMessage */\n      dup7\n        /* \"contracts/NFTContract2/Address.sol\":7018:7035  _verifyCallResult */\n      tag_72\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/NFTContract2/Address.sol\":7011:7070  return _verifyCallResult(success, returndata, errorMessage) */\n      swap7\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_72:\n        /* \"contracts/NFTContract2/Address.sol\":7198:7210  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":7226:7233  success */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n      iszero\n      tag_74\n      jumpi\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7256:7266  returndata */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7249:7266  return returndata */\n      jump(tag_56)\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n    tag_74:\n        /* \"contracts/NFTContract2/Address.sol\":7367:7384  returndata.length */\n      dup3\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7367:7388  returndata.length > 0 */\n      iszero\n        /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n      tag_76\n      jumpi\n        /* \"contracts/NFTContract2/Address.sol\":7625:7635  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7619:7636  mload(returndata) */\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7685:7700  returndata_size */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":7672:7682  returndata */\n      dup5\n        /* \"contracts/NFTContract2/Address.sol\":7668:7670  32 */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":7664:7683  add(32, returndata) */\n      add\n        /* \"contracts/NFTContract2/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTContract2/Address.sol\":7574:7719  {... */\n    tag_76:\n        /* \"contracts/NFTContract2/Address.sol\":7764:7776  errorMessage */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7757:7777  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_81:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":192:388   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:274   */\n      iszero\n      tag_85\n      jumpi\n        /* \"#utility.yul\":325:331   */\n      dup1\n        /* \"#utility.yul\":317:323   */\n      dup2\n        /* \"#utility.yul\":310:332   */\n      revert\n        /* \"#utility.yul\":272:274   */\n    tag_85:\n        /* \"#utility.yul\":353:382   */\n      tag_56\n        /* \"#utility.yul\":372:381   */\n      dup3\n        /* \"#utility.yul\":353:382   */\n      tag_81\n      jump\t// in\n        /* \"#utility.yul\":393:1433   */\n    tag_11:\n      0x00\n      dup1\n        /* \"#utility.yul\":531:533   */\n      0x40\n        /* \"#utility.yul\":519:528   */\n      dup4\n        /* \"#utility.yul\":510:517   */\n      dup6\n        /* \"#utility.yul\":506:529   */\n      sub\n        /* \"#utility.yul\":502:534   */\n      slt\n        /* \"#utility.yul\":499:501   */\n      iszero\n      tag_88\n      jumpi\n        /* \"#utility.yul\":552:558   */\n      dup1\n        /* \"#utility.yul\":544:550   */\n      dup2\n        /* \"#utility.yul\":537:559   */\n      revert\n        /* \"#utility.yul\":499:501   */\n    tag_88:\n        /* \"#utility.yul\":580:609   */\n      tag_89\n        /* \"#utility.yul\":599:608   */\n      dup4\n        /* \"#utility.yul\":580:609   */\n      tag_81\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":570:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":660:662   */\n      0x20\n        /* \"#utility.yul\":649:658   */\n      dup4\n        /* \"#utility.yul\":645:663   */\n      add\n        /* \"#utility.yul\":632:664   */\n      calldataload\n        /* \"#utility.yul\":683:701   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":724:726   */\n      dup1\n        /* \"#utility.yul\":716:722   */\n      dup3\n        /* \"#utility.yul\":713:727   */\n      gt\n        /* \"#utility.yul\":710:712   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":745:751   */\n      dup3\n        /* \"#utility.yul\":737:743   */\n      dup4\n        /* \"#utility.yul\":730:752   */\n      revert\n        /* \"#utility.yul\":710:712   */\n    tag_90:\n        /* \"#utility.yul\":788:794   */\n      dup2\n        /* \"#utility.yul\":777:786   */\n      dup6\n        /* \"#utility.yul\":773:795   */\n      add\n        /* \"#utility.yul\":763:795   */\n      swap2\n      pop\n        /* \"#utility.yul\":833:840   */\n      dup6\n        /* \"#utility.yul\":826:830   */\n      0x1f\n        /* \"#utility.yul\":822:824   */\n      dup4\n        /* \"#utility.yul\":818:831   */\n      add\n        /* \"#utility.yul\":814:841   */\n      slt\n        /* \"#utility.yul\":804:806   */\n      tag_91\n      jumpi\n        /* \"#utility.yul\":860:866   */\n      dup3\n        /* \"#utility.yul\":852:858   */\n      dup4\n        /* \"#utility.yul\":845:867   */\n      revert\n        /* \"#utility.yul\":804:806   */\n    tag_91:\n        /* \"#utility.yul\":901:903   */\n      dup2\n        /* \"#utility.yul\":888:904   */\n      calldataload\n        /* \"#utility.yul\":923:925   */\n      dup2\n        /* \"#utility.yul\":919:921   */\n      dup2\n        /* \"#utility.yul\":916:926   */\n      gt\n        /* \"#utility.yul\":913:915   */\n      iszero\n      tag_93\n      jumpi\n        /* \"#utility.yul\":929:947   */\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1004:1006   */\n      0x40\n        /* \"#utility.yul\":998:1007   */\n      mload\n        /* \"#utility.yul\":972:974   */\n      0x1f\n        /* \"#utility.yul\":1058:1071   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1054:1076   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":1078:1080   */\n      0x3f\n        /* \"#utility.yul\":1050:1081   */\n      add\n        /* \"#utility.yul\":1046:1086   */\n      and\n        /* \"#utility.yul\":1034:1087   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":1102:1120   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":1122:1144   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":1099:1145   */\n      or\n        /* \"#utility.yul\":1096:1098   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":1148:1166   */\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":1188:1198   */\n      dup2\n        /* \"#utility.yul\":1184:1186   */\n      0x40\n        /* \"#utility.yul\":1177:1199   */\n      mstore\n        /* \"#utility.yul\":1223:1225   */\n      dup3\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1208:1226   */\n      mstore\n        /* \"#utility.yul\":1263:1270   */\n      dup9\n        /* \"#utility.yul\":1258:1260   */\n      0x20\n        /* \"#utility.yul\":1253:1255   */\n      dup5\n        /* \"#utility.yul\":1249:1251   */\n      dup8\n        /* \"#utility.yul\":1245:1256   */\n      add\n        /* \"#utility.yul\":1241:1261   */\n      add\n        /* \"#utility.yul\":1238:1271   */\n      gt\n        /* \"#utility.yul\":1235:1237   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":1289:1295   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup7\n        /* \"#utility.yul\":1274:1296   */\n      revert\n        /* \"#utility.yul\":1235:1237   */\n    tag_97:\n        /* \"#utility.yul\":1350:1352   */\n      dup3\n        /* \"#utility.yul\":1345:1347   */\n      0x20\n        /* \"#utility.yul\":1341:1343   */\n      dup7\n        /* \"#utility.yul\":1337:1348   */\n      add\n        /* \"#utility.yul\":1332:1334   */\n      0x20\n        /* \"#utility.yul\":1324:1330   */\n      dup4\n        /* \"#utility.yul\":1320:1335   */\n      add\n        /* \"#utility.yul\":1307:1353   */\n      calldatacopy\n        /* \"#utility.yul\":1395:1401   */\n      dup6\n        /* \"#utility.yul\":1390:1392   */\n      0x20\n        /* \"#utility.yul\":1385:1387   */\n      dup5\n        /* \"#utility.yul\":1377:1383   */\n      dup4\n        /* \"#utility.yul\":1373:1388   */\n      add\n        /* \"#utility.yul\":1369:1393   */\n      add\n        /* \"#utility.yul\":1362:1402   */\n      mstore\n        /* \"#utility.yul\":1421:1427   */\n      dup1\n        /* \"#utility.yul\":1411:1427   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":489:1433   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1438:1712   */\n    tag_67:\n      0x00\n        /* \"#utility.yul\":1605:1611   */\n      dup3\n        /* \"#utility.yul\":1599:1612   */\n      mload\n        /* \"#utility.yul\":1621:1674   */\n      tag_99\n        /* \"#utility.yul\":1667:1673   */\n      dup2\n        /* \"#utility.yul\":1662:1665   */\n      dup5\n        /* \"#utility.yul\":1655:1659   */\n      0x20\n        /* \"#utility.yul\":1647:1653   */\n      dup8\n        /* \"#utility.yul\":1643:1660   */\n      add\n        /* \"#utility.yul\":1621:1674   */\n      tag_100\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1690:1706   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":1575:1712   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1925:2308   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":2074:2076   */\n      0x20\n        /* \"#utility.yul\":2063:2072   */\n      dup3\n        /* \"#utility.yul\":2056:2077   */\n      mstore\n        /* \"#utility.yul\":2106:2112   */\n      dup3\n        /* \"#utility.yul\":2100:2113   */\n      mload\n        /* \"#utility.yul\":2149:2155   */\n      dup1\n        /* \"#utility.yul\":2144:2146   */\n      0x20\n        /* \"#utility.yul\":2133:2142   */\n      dup5\n        /* \"#utility.yul\":2129:2147   */\n      add\n        /* \"#utility.yul\":2122:2156   */\n      mstore\n        /* \"#utility.yul\":2165:2231   */\n      tag_103\n        /* \"#utility.yul\":2224:2230   */\n      dup2\n        /* \"#utility.yul\":2219:2221   */\n      0x40\n        /* \"#utility.yul\":2208:2217   */\n      dup6\n        /* \"#utility.yul\":2204:2222   */\n      add\n        /* \"#utility.yul\":2199:2201   */\n      0x20\n        /* \"#utility.yul\":2191:2197   */\n      dup8\n        /* \"#utility.yul\":2187:2202   */\n      add\n        /* \"#utility.yul\":2165:2231   */\n      tag_100\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2292:2294   */\n      0x1f\n        /* \"#utility.yul\":2271:2286   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2267:2296   */\n      and\n        /* \"#utility.yul\":2252:2297   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2299:2301   */\n      0x40\n        /* \"#utility.yul\":2248:2302   */\n      add\n      swap3\n        /* \"#utility.yul\":2046:2308   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3550:3808   */\n    tag_100:\n        /* \"#utility.yul\":3622:3623   */\n      0x00\n        /* \"#utility.yul\":3632:3745   */\n    tag_108:\n        /* \"#utility.yul\":3646:3652   */\n      dup4\n        /* \"#utility.yul\":3643:3644   */\n      dup2\n        /* \"#utility.yul\":3640:3653   */\n      lt\n        /* \"#utility.yul\":3632:3745   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":3722:3733   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":3716:3734   */\n      mload\n        /* \"#utility.yul\":3703:3714   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":3696:3735   */\n      mstore\n        /* \"#utility.yul\":3668:3670   */\n      0x20\n        /* \"#utility.yul\":3661:3671   */\n      add\n        /* \"#utility.yul\":3632:3745   */\n      jump(tag_108)\n    tag_110:\n        /* \"#utility.yul\":3763:3769   */\n      dup4\n        /* \"#utility.yul\":3760:3761   */\n      dup2\n        /* \"#utility.yul\":3757:3770   */\n      gt\n        /* \"#utility.yul\":3754:3756   */\n      iszero\n      tag_111\n      jumpi\n        /* \"#utility.yul\":3798:3799   */\n      0x00\n        /* \"#utility.yul\":3789:3795   */\n      dup5\n        /* \"#utility.yul\":3784:3787   */\n      dup5\n        /* \"#utility.yul\":3780:3796   */\n      add\n        /* \"#utility.yul\":3773:3800   */\n      mstore\n        /* \"#utility.yul\":3754:3756   */\n    tag_111:\n      pop\n        /* \"#utility.yul\":3603:3808   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3813:3940   */\n    tag_94:\n        /* \"#utility.yul\":3874:3884   */\n      0x4e487b71\n        /* \"#utility.yul\":3869:3872   */\n      0xe0\n        /* \"#utility.yul\":3865:3885   */\n      shl\n        /* \"#utility.yul\":3862:3863   */\n      0x00\n        /* \"#utility.yul\":3855:3886   */\n      mstore\n        /* \"#utility.yul\":3905:3909   */\n      0x41\n        /* \"#utility.yul\":3902:3903   */\n      0x04\n        /* \"#utility.yul\":3895:3910   */\n      mstore\n        /* \"#utility.yul\":3929:3933   */\n      0x24\n        /* \"#utility.yul\":3926:3927   */\n      0x00\n        /* \"#utility.yul\":3919:3934   */\n      revert\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa26469706673582212200c08fc46c1019c63666c464c3b5bf41093feff3554ff93e114c61e2def5cd30164736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610640806100206000396000f3fe6080604052600436106100295760003560e01c80633659cfe61461002e5780634f1ef28614610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610477565b610063565b005b61004e61005e366004610491565b61008a565b61006c816100a3565b610087816040518060200160405280600081525060006100a8565b50565b610093826100a3565b61009f828260016100a8565b5050565b610087565b60006100db7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506100e68461026a565b6000835111806100f35750815b15610104576101028484610316565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661026357805460ff191660011781556040516001600160a01b038316602482015261018390869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610316565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146102255760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084015b60405180910390fd5b61022e8561026a565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b61027381610342565b6102d55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161021c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b606061033b83836040518060600160405280602781526020016105e46027913961034c565b9392505050565b803b15155b919050565b606061035784610342565b6103b25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161021c565b600080856001600160a01b0316856040516103cd919061054e565b600060405180830381855af49150503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b509150915061041d828286610427565b9695505050505050565b6060831561043657508161033b565b8251156104465782518084602001fd5b8160405162461bcd60e51b815260040161021c919061056a565b80356001600160a01b038116811461034757600080fd5b600060208284031215610488578081fd5b61033b82610460565b600080604083850312156104a3578081fd5b6104ac83610460565b9150602083013567ffffffffffffffff808211156104c8578283fd5b818501915085601f8301126104db578283fd5b8135818111156104ed576104ed6105cd565b604051601f8201601f19908116603f01168101908382118183101715610515576105156105cd565b8160405282815288602084870101111561052d578586fd5b82602086016020830137856020848301015280955050505050509250929050565b6000825161056081846020870161059d565b9190910192915050565b600060208252825180602084015261058981604085016020870161059d565b601f01601f19169190910160400192915050565b60005b838110156105b85781810151838201526020016105a0565b838111156105c7576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200c08fc46c1019c63666c464c3b5bf41093feff3554ff93e114c61e2def5cd30164736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x640 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST PUSH2 0x6C DUP2 PUSH2 0xA3 JUMP JUMPDEST PUSH2 0x87 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH2 0x9F DUP3 DUP3 PUSH1 0x1 PUSH2 0xA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE6 DUP5 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0xF3 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x104 JUMPI PUSH2 0x102 DUP5 DUP5 PUSH2 0x316 JUMP JUMPDEST POP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x263 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x183 SWAP1 DUP7 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH2 0x316 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A207570677261646520627265616B732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x757274686572207570677261646573 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22E DUP6 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x33B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E4 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x34C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x357 DUP5 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x54E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x40D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x41D DUP3 DUP3 DUP7 PUSH2 0x427 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x436 JUMPI POP DUP2 PUSH2 0x33B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x446 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x488 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x33B DUP3 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4AC DUP4 PUSH2 0x460 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4C8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4ED PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x515 JUMPI PUSH2 0x515 PUSH2 0x5CD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x52D JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x560 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x59D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x589 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5A0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212200C08FC CHAINID 0xC1 ADD SWAP13 PUSH4 0x666C464C EXTCODESIZE JUMPDEST DELEGATECALL LT SWAP4 INVALID SELFDESTRUCT CALLDATALOAD SLOAD SELFDESTRUCT SWAP4 0xE1 EQ 0xC6 0x1E 0x2D 0xEF 0x5C 0xD3 ADD PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "343:126:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3942:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nodeType": "YulIf",
															"src": "111:2:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:126:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "317:6:6"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "325:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nodeType": "YulIf",
															"src": "272:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "372:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "353:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:196:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "489:944:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "535:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "544:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "552:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "537:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "537:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "537:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "510:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "519:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:32:6"
															},
															"nodeType": "YulIf",
															"src": "499:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "570:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "599:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "580:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "580:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "618:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "649:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "660:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "645:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "645:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "632:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "632:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "622:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "673:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "683:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "677:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "728:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "737:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "745:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "730:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "730:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "730:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "716:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "724:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "713:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "713:14:6"
															},
															"nodeType": "YulIf",
															"src": "710:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "763:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "777:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "788:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "773:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "773:22:6"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "767:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "843:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "852:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "860:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "845:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "845:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "845:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "822:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "826:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "818:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "818:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "833:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "814:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "814:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "807:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:35:6"
															},
															"nodeType": "YulIf",
															"src": "804:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "878:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "901:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "888:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "888:16:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "882:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "927:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "929:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "929:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "929:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "919:2:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "923:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "916:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "916:10:6"
															},
															"nodeType": "YulIf",
															"src": "913:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "958:17:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "972:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "968:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:7:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "962:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "984:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1004:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "998:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "998:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "988:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1016:71:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1038:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1062:2:6"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1066:4:6",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1058:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1058:13:6"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1073:2:6"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1054:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1054:22:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1078:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1050:31:6"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1083:2:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1046:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1046:40:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1034:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1034:53:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1020:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1146:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1148:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1148:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1148:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1105:10:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1117:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1102:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1102:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1125:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1137:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1122:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1122:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1099:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:46:6"
															},
															"nodeType": "YulIf",
															"src": "1096:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1184:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1188:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1177:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1177:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1177:22:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1223:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1208:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1208:18:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1272:26:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1281:6:6"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1289:6:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1274:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1274:22:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1274:22:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1249:2:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1253:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1245:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1245:11:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1258:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1241:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1241:20:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1263:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1238:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1238:33:6"
															},
															"nodeType": "YulIf",
															"src": "1235:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1324:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1332:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1320:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1320:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1341:2:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1345:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1337:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1337:11:6"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1350:2:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1307:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:46:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1307:46:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1377:6:6"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1385:2:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1373:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1373:15:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1390:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1369:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1369:24:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1395:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1362:40:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1411:16:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1421:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "447:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "458:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "470:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "478:6:6",
														"type": ""
													}
												],
												"src": "393:1040:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1575:137:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1585:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1605:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1599:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1589:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1647:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1655:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1643:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1643:17:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1662:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1667:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1621:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1621:53:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1621:53:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1683:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1690:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1690:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1683:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1551:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1556:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1567:3:6",
														"type": ""
													}
												],
												"src": "1438:274:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1818:102:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1828:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1840:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1836:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1828:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1901:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1906:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1897:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1897:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1910:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1893:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1893:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1881:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1863:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1787:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1798:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1809:4:6",
														"type": ""
													}
												],
												"src": "1717:203:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2046:262:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2063:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2056:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2056:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2056:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2086:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2106:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2100:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2090:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2133:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2144:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2129:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2129:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2149:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2122:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2122:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2122:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2191:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2199:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2187:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2187:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2208:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2219:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2204:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2204:18:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2224:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2165:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2165:66:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2165:66:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2240:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2256:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2275:6:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2283:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2271:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2271:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2292:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2288:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2288:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2267:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2252:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2252:45:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2299:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2248:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2248:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2240:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2015:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2026:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2037:4:6",
														"type": ""
													}
												],
												"src": "1925:383:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2487:237:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2504:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2515:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2497:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2497:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2497:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2538:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2534:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2534:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2554:2:6",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2527:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2527:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2527:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2577:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2588:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2573:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2573:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2593:34:6",
																		"type": "",
																		"value": "ERC1967Upgrade: upgrade breaks f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2566:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2566:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2648:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2659:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2644:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2644:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2664:17:6",
																		"type": "",
																		"value": "urther upgrades"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2637:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2637:45:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2637:45:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2691:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2703:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2714:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2699:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2699:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2691:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2464:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2478:4:6",
														"type": ""
													}
												],
												"src": "2313:411:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2903:235:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2920:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2913:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2913:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2954:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2965:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2950:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2950:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2970:2:6",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2943:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2943:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2943:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2993:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3004:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2989:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2989:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3009:34:6",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2982:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2982:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2982:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3064:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3075:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3060:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3060:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3080:15:6",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3053:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3053:43:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3053:43:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3105:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3117:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3128:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3113:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3113:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3105:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2880:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2894:4:6",
														"type": ""
													}
												],
												"src": "2729:409:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3317:228:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3334:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3345:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3327:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3327:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3327:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3368:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3379:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3364:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3364:18:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3384:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3357:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3357:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3357:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3407:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3418:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3403:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3423:34:6",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3396:62:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3396:62:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3478:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3489:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3474:18:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3494:8:6",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3467:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3467:36:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3467:36:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3512:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3524:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3535:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3520:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3512:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3308:4:6",
														"type": ""
													}
												],
												"src": "3143:402:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:205:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3613:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3622:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3617:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3682:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3707:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3712:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3703:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3703:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3726:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3731:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3722:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3722:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3716:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3716:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3696:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3696:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3696:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3643:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3646:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3640:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3640:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3654:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3656:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3665:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3668:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3661:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3661:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3656:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3636:3:6",
																"statements": []
															},
															"src": "3632:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3771:31:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3784:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3789:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3780:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3780:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3773:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3773:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3773:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3760:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3763:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3757:13:6"
															},
															"nodeType": "YulIf",
															"src": "3754:2:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "3581:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "3586:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3591:6:6",
														"type": ""
													}
												],
												"src": "3550:258:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3845:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3862:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3869:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3874:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3865:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3865:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3855:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3855:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3855:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3902:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3905:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3895:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3895:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3895:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3926:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3929:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3919:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3919:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3919:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "3813:127:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value1, value1) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), value1)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC1967Upgrade: upgrade breaks f\")\n        mstore(add(headStart, 96), \"urther upgrades\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"ERC1967: new implementation is n\")\n        mstore(add(headStart, 96), \"ot a contract\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: delegate call to non-co\")\n        mstore(add(headStart, 96), \"ntract\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80633659cfe61461002e5780634f1ef28614610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610477565b610063565b005b61004e61005e366004610491565b61008a565b61006c816100a3565b610087816040518060200160405280600081525060006100a8565b50565b610093826100a3565b61009f828260016100a8565b5050565b610087565b60006100db7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b90506100e68461026a565b6000835111806100f35750815b15610104576101028484610316565b505b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143805460ff1661026357805460ff191660011781556040516001600160a01b038316602482015261018390869060440160408051601f198184030181529190526020810180516001600160e01b0316631b2ce7f360e11b179052610316565b50805460ff191681557f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b038381169116146102255760405162461bcd60e51b815260206004820152602f60248201527f45524331393637557067726164653a207570677261646520627265616b73206660448201526e75727468657220757067726164657360881b60648201526084015b60405180910390fd5b61022e8561026a565b6040516001600160a01b038616907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a25b5050505050565b61027381610342565b6102d55760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161021c565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b606061033b83836040518060600160405280602781526020016105e46027913961034c565b9392505050565b803b15155b919050565b606061035784610342565b6103b25760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161021c565b600080856001600160a01b0316856040516103cd919061054e565b600060405180830381855af49150503d8060008114610408576040519150601f19603f3d011682016040523d82523d6000602084013e61040d565b606091505b509150915061041d828286610427565b9695505050505050565b6060831561043657508161033b565b8251156104465782518084602001fd5b8160405162461bcd60e51b815260040161021c919061056a565b80356001600160a01b038116811461034757600080fd5b600060208284031215610488578081fd5b61033b82610460565b600080604083850312156104a3578081fd5b6104ac83610460565b9150602083013567ffffffffffffffff808211156104c8578283fd5b818501915085601f8301126104db578283fd5b8135818111156104ed576104ed6105cd565b604051601f8201601f19908116603f01168101908382118183101715610515576105156105cd565b8160405282815288602084870101111561052d578586fd5b82602086016020830137856020848301015280955050505050509250929050565b6000825161056081846020870161059d565b9190910192915050565b600060208252825180602084015261058981604085016020870161059d565b601f01601f19169190910160400192915050565b60005b838110156105b85781810151838201526020016105a0565b838111156105c7576000848401525b50505050565b634e487b7160e01b600052604160045260246000fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212200c08fc46c1019c63666c464c3b5bf41093feff3554ff93e114c61e2def5cd30164736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x50 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x477 JUMP JUMPDEST PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E PUSH2 0x5E CALLDATASIZE PUSH1 0x4 PUSH2 0x491 JUMP JUMPDEST PUSH2 0x8A JUMP JUMPDEST PUSH2 0x6C DUP2 PUSH2 0xA3 JUMP JUMPDEST PUSH2 0x87 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x93 DUP3 PUSH2 0xA3 JUMP JUMPDEST PUSH2 0x9F DUP3 DUP3 PUSH1 0x1 PUSH2 0xA8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xE6 DUP5 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0xF3 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0x104 JUMPI PUSH2 0x102 DUP5 DUP5 PUSH2 0x316 JUMP JUMPDEST POP JUMPDEST PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x263 JUMPI DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x183 SWAP1 DUP7 SWAP1 PUSH1 0x44 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x1B2CE7F3 PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH2 0x316 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331393637557067726164653A207570677261646520627265616B732066 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x757274686572207570677261646573 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x22E DUP6 PUSH2 0x26A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH1 0x0 SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x273 DUP2 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x2D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x1BDD08184818DBDB9D1C9858DD PUSH1 0x9A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21C JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH2 0x33B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5E4 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x34C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x357 DUP5 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x3B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x1B9D1C9858DD PUSH1 0xD2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x21C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x54E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x408 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x40D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x41D DUP3 DUP3 DUP7 PUSH2 0x427 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x436 JUMPI POP DUP2 PUSH2 0x33B JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x446 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x56A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x488 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x33B DUP3 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4A3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4AC DUP4 PUSH2 0x460 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4C8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4DB JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4ED JUMPI PUSH2 0x4ED PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x515 JUMPI PUSH2 0x515 PUSH2 0x5CD JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x52D JUMPI DUP6 DUP7 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY DUP6 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x560 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x59D JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x589 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x59D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5B8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x5A0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5C7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x706673582212200C08FC CHAINID 0xC1 ADD SWAP13 PUSH4 0x666C464C EXTCODESIZE JUMPDEST DELEGATECALL LT SWAP4 INVALID SELFDESTRUCT CALLDATALOAD SLOAD SELFDESTRUCT SWAP4 0xE1 EQ 0xC6 0x1E 0x2D 0xEF 0x5C 0xD3 ADD PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "343:126:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;574:186:5;;;;;;;;;;-1:-1:-1;574:186:5;;;;;:::i;:::-;;:::i;:::-;;766:214;;;;;;:::i;:::-;;:::i;574:186::-;647:36;665:17;647;:36::i;:::-;693:60;717:17;736:9;;;;;;;;;;;;747:5;693:23;:60::i;:::-;574:186;:::o;766:214::-;873:36;891:17;873;:36::i;:::-;919:54;943:17;962:4;968;919:23;:54::i;:::-;766:214;;:::o;143:122:3:-;225:33;574:186:5;2513:1314:1;2627:25;2655:20;873:66;1223:54;-1:-1:-1;;;;;1223:54:1;;1144:140;2655:20;2627:48;;2728:37;2747:17;2728:18;:37::i;:::-;2793:1;2779:4;:11;:15;:28;;;;2798:9;2779:28;2775:112;;;2823:53;2852:17;2871:4;2823:28;:53::i;:::-;;2775:112;532:66;3064:21;;;;3059:762;;3177:28;;-1:-1:-1;;3177:28:1;3201:4;3177:28;;;3300:122;;-1:-1:-1;;;;;1881:32:6;;3300:122:1;;;1863:51:6;3219:217:1;;3265:17;;1836:18:6;;3300:122:1;;;-1:-1:-1;;3300:122:1;;;;;;;;;;;;;;-1:-1:-1;;;;;3300:122:1;-1:-1:-1;;;3300:122:1;;;3219:28;:217::i;:::-;-1:-1:-1;3450:29:1;;-1:-1:-1;;3450:29:1;;;873:66;1223:54;-1:-1:-1;;;;;3545:41:1;;;1223:54;;3545:41;3537:101;;;;-1:-1:-1;;;3537:101:1;;2515:2:6;3537:101:1;;;2497:21:6;2554:2;2534:18;;;2527:30;2593:34;2573:18;;;2566:62;-1:-1:-1;;;2644:18:6;;;2637:45;2699:19;;3537:101:1;;;;;;;;;3727:37;3746:17;3727:18;:37::i;:::-;3783:27;;-1:-1:-1;;;;;3783:27:1;;;;;;;;3059:762;2513:1314;;;;;:::o;1375:259::-;1456:37;1475:17;1456:18;:37::i;:::-;1448:95;;;;-1:-1:-1;;;1448:95:1;;2931:2:6;1448:95:1;;;2913:21:6;2970:2;2950:18;;;2943:30;3009:34;2989:18;;;2982:62;-1:-1:-1;;;3060:18:6;;;3053:43;3113:19;;1448:95:1;2903:235:6;1448:95:1;873:66;1553:74;;-1:-1:-1;;;;;;1553:74:1;-1:-1:-1;;;;;1553:74:1;;;;;;;;;;1375:259::o;6276:198:0:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;6276:198;-1:-1:-1;;;6276:198:0:o;718:413::-;1078:20;;1116:8;;718:413;;;;:::o;6660:417::-;6771:12;6803:18;6814:6;6803:10;:18::i;:::-;6795:69;;;;-1:-1:-1;;;6795:69:0;;3345:2:6;6795:69:0;;;3327:21:6;3384:2;3364:18;;;3357:30;3423:34;3403:18;;;3396:62;-1:-1:-1;;;3474:18:6;;;3467:36;3520:19;;6795:69:0;3317:228:6;6795:69:0;6935:12;6949:23;6976:6;-1:-1:-1;;;;;6976:19:0;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;6660:417;-1:-1:-1;;;;;;6660:417:0:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:0;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:0;;;;;;;;:::i;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:2;;177:1;174;167:12;192:196;;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:1040::-;;;531:2;519:9;510:7;506:23;502:32;499:2;;;552:6;544;537:22;499:2;580:29;599:9;580:29;:::i;:::-;570:39;;660:2;649:9;645:18;632:32;683:18;724:2;716:6;713:14;710:2;;;745:6;737;730:22;710:2;788:6;777:9;773:22;763:32;;833:7;826:4;822:2;818:13;814:27;804:2;;860:6;852;845:22;804:2;901;888:16;923:2;919;916:10;913:2;;;929:18;;:::i;:::-;1004:2;998:9;972:2;1058:13;;-1:-1:-1;;1054:22:6;;;1078:2;1050:31;1046:40;1034:53;;;1102:18;;;1122:22;;;1099:46;1096:2;;;1148:18;;:::i;:::-;1188:10;1184:2;1177:22;1223:2;1215:6;1208:18;1263:7;1258:2;1253;1249;1245:11;1241:20;1238:33;1235:2;;;1289:6;1281;1274:22;1235:2;1350;1345;1341;1337:11;1332:2;1324:6;1320:15;1307:46;1395:6;1390:2;1385;1377:6;1373:15;1369:24;1362:40;1421:6;1411:16;;;;;;;489:944;;;;;:::o;1438:274::-;;1605:6;1599:13;1621:53;1667:6;1662:3;1655:4;1647:6;1643:17;1621:53;:::i;:::-;1690:16;;;;;1575:137;-1:-1:-1;;1575:137:6:o;1925:383::-;;2074:2;2063:9;2056:21;2106:6;2100:13;2149:6;2144:2;2133:9;2129:18;2122:34;2165:66;2224:6;2219:2;2208:9;2204:18;2199:2;2191:6;2187:15;2165:66;:::i;:::-;2292:2;2271:15;-1:-1:-1;;2267:29:6;2252:45;;;;2299:2;2248:54;;2046:262;-1:-1:-1;;2046:262:6:o;3550:258::-;3622:1;3632:113;3646:6;3643:1;3640:13;3632:113;;;3722:11;;;3716:18;3703:11;;;3696:39;3668:2;3661:10;3632:113;;;3763:6;3760:1;3757:13;3754:2;;;3798:1;3789:6;3784:3;3780:16;3773:27;3754:2;;3603:205;;;:::o;3813:127::-;3874:10;3869:3;3865:20;3862:1;3855:31;3905:4;3902:1;3895:15;3929:4;3926:1;3919:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "320000",
								"executionCost": "355",
								"totalCost": "320355"
							},
							"external": {
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_beforeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c08fc46c1019c63666c464c3b5bf41093feff3554ff93e114c61e2def5cd30164736f6c63430008020033",
									".code": [
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "3659CFE6"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "4F1EF286"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 647,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 647,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 647,
											"end": 683,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 647,
											"end": 683,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 747,
											"end": 752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 693,
											"end": 753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 753,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 693,
											"end": 753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 891,
											"end": 908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 873,
											"end": 909,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 909,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 873,
											"end": 909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 962,
											"end": 966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 968,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 919,
											"end": 973,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 973,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 143,
											"end": 265,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 143,
											"end": 265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2747,
											"end": 2764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2794,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2852,
											"end": 2869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 532,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1881,
											"end": 1913,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1881,
											"end": 1913,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1914,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3282,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3265,
											"end": 3282,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1836,
											"end": 1854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B2CE7F3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2515,
											"end": 2517,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2518,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2556,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2534,
											"end": 2552,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2527,
											"end": 2557,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2593,
											"end": 2627,
											"name": "PUSH",
											"source": 6,
											"value": "45524331393637557067726164653A207570677261646520627265616B732066"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2628,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "757274686572207570677261646573"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2644,
											"end": 2662,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2637,
											"end": 2682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2699,
											"end": 2718,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2699,
											"end": 2718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3746,
											"end": 3763,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2913,
											"end": 2934,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2970,
											"end": 2972,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2950,
											"end": 2968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2943,
											"end": 2973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3009,
											"end": 3043,
											"name": "PUSH",
											"source": 6,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2989,
											"end": 3007,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 3044,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDD08184818DBDB9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3060,
											"end": 3078,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3096,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3132,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3113,
											"end": 3132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2903,
											"end": 3138,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6371,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH data",
											"source": 0,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6467,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6814,
											"end": 6820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3345,
											"end": 3347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3327,
											"end": 3348,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3386,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3382,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3387,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3457,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3396,
											"end": 3458,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D1C9858DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3474,
											"end": 3492,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3467,
											"end": 3503,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3520,
											"end": 3539,
											"name": "PUSH",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3520,
											"end": 3539,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3317,
											"end": 3545,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6976,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7036,
											"end": 7043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7210,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7388,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 192,
											"end": 388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 192,
											"end": 388,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 325,
											"end": 331,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 317,
											"end": 323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 310,
											"end": 332,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 274,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 272,
											"end": 274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 372,
											"end": 381,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 353,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 353,
											"end": 382,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 393,
											"end": 1433,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 393,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 393,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 1433,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 531,
											"end": 533,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 519,
											"end": 528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 510,
											"end": 517,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 529,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 502,
											"end": 534,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 499,
											"end": 501,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 499,
											"end": 501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 499,
											"end": 501,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 552,
											"end": 558,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 537,
											"end": 559,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 499,
											"end": 501,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 499,
											"end": 501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 580,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 599,
											"end": 608,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 580,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 580,
											"end": 609,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 580,
											"end": 609,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 580,
											"end": 609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 570,
											"end": 609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 570,
											"end": 609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 660,
											"end": 662,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 658,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 645,
											"end": 663,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 632,
											"end": 664,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 683,
											"end": 701,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 724,
											"end": 726,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 716,
											"end": 722,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 713,
											"end": 727,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 710,
											"end": 712,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 710,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 710,
											"end": 712,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 737,
											"end": 743,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 730,
											"end": 752,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 710,
											"end": 712,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 710,
											"end": 712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 777,
											"end": 786,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 773,
											"end": 795,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 763,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 763,
											"end": 795,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 833,
											"end": 840,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 826,
											"end": 830,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 822,
											"end": 824,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 818,
											"end": 831,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 814,
											"end": 841,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 804,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 860,
											"end": 866,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 852,
											"end": 858,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 845,
											"end": 867,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 804,
											"end": 806,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 804,
											"end": 806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 901,
											"end": 903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 888,
											"end": 904,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 923,
											"end": 925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 919,
											"end": 921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 916,
											"end": 926,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 913,
											"end": 915,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 913,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 913,
											"end": 915,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 929,
											"end": 947,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1006,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1007,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 972,
											"end": 974,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1058,
											"end": 1071,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1054,
											"end": 1076,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1078,
											"end": 1080,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 1050,
											"end": 1081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1046,
											"end": 1086,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1087,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1087,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1087,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1102,
											"end": 1120,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1099,
											"end": 1145,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1148,
											"end": 1166,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1225,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1208,
											"end": 1226,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1263,
											"end": 1270,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1258,
											"end": 1260,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1255,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1249,
											"end": 1251,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1245,
											"end": 1256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1241,
											"end": 1261,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1238,
											"end": 1271,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1295,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1274,
											"end": 1296,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1235,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1350,
											"end": 1352,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1343,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1337,
											"end": 1348,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1332,
											"end": 1334,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1320,
											"end": 1335,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1307,
											"end": 1353,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 1395,
											"end": 1401,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1392,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1387,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1383,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1388,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1369,
											"end": 1393,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1421,
											"end": 1427,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1411,
											"end": 1427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 1433,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 489,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 1433,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 489,
											"end": 1433,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 489,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 489,
											"end": 1433,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1438,
											"end": 1712,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 1438,
											"end": 1712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1605,
											"end": 1611,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1599,
											"end": 1612,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1667,
											"end": 1673,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1662,
											"end": 1665,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1655,
											"end": 1659,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1653,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1643,
											"end": 1660,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1621,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1621,
											"end": 1674,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1621,
											"end": 1674,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1621,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1690,
											"end": 1706,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1575,
											"end": 1712,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1575,
											"end": 1712,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1925,
											"end": 2308,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1925,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1925,
											"end": 2308,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2063,
											"end": 2072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2056,
											"end": 2077,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2155,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2144,
											"end": 2146,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2133,
											"end": 2142,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2147,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2122,
											"end": 2156,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2224,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2222,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2199,
											"end": 2201,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2191,
											"end": 2197,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2187,
											"end": 2202,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2165,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2165,
											"end": 2231,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2231,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2165,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2294,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2271,
											"end": 2286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2299,
											"end": 2301,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2248,
											"end": 2302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2248,
											"end": 2302,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2046,
											"end": 2308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2046,
											"end": 2308,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3550,
											"end": 3808,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3550,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3622,
											"end": 3623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3646,
											"end": 3652,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3640,
											"end": 3653,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3733,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3733,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3734,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3714,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3714,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3703,
											"end": 3714,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3696,
											"end": 3735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3668,
											"end": 3670,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3661,
											"end": 3671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3632,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3763,
											"end": 3769,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3761,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3757,
											"end": 3770,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3789,
											"end": 3795,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3780,
											"end": 3796,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3773,
											"end": 3800,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3754,
											"end": 3756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3603,
											"end": 3808,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3813,
											"end": 3940,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 3813,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3874,
											"end": 3884,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3869,
											"end": 3872,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3865,
											"end": 3885,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3862,
											"end": 3863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3886,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3905,
											"end": 3909,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3902,
											"end": 3903,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3895,
											"end": 3910,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3929,
											"end": 3933,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3926,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3934,
											"name": "REVERT",
											"source": 6
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Proxiable.sol\":\"ChildOfProxiable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/Proxiable.sol\":{\"keccak256\":\"0x834cc5cde98109374417d43fa5d25f02fcb7f079abd7a40acbf5d13b88a22680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54224341106013844a5b98e54cf0b954ff5dfdfd78a63ab10c23795f1d6c020c\",\"dweb:/ipfs/QmTt5VWzNRkeCLBrfBP9C5YMqovNiQz3EJD84pMLywfc4S\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf62cb1e46b6c6ced7c5d272ddee4d7398020fa781f4ba85f0ace4c5a9ca08852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45945bc37c26b75bf2df2338901db18133f377832a8be642595a7bdfff56055b\",\"dweb:/ipfs/QmaT2X7KSwbxzTWt76VouZyDk29WUXqqypTLXeW7f8F83t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Proxiable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Proxiable.sol\":\"Proxiable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/Proxiable.sol\":{\"keccak256\":\"0x834cc5cde98109374417d43fa5d25f02fcb7f079abd7a40acbf5d13b88a22680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54224341106013844a5b98e54cf0b954ff5dfdfd78a63ab10c23795f1d6c020c\",\"dweb:/ipfs/QmTt5VWzNRkeCLBrfBP9C5YMqovNiQz3EJD84pMLywfc4S\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf62cb1e46b6c6ced7c5d272ddee4d7398020fa781f4ba85f0ace4c5a9ca08852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45945bc37c26b75bf2df2338901db18133f377832a8be642595a7bdfff56055b\",\"dweb:/ipfs/QmaT2X7KSwbxzTWt76VouZyDk29WUXqqypTLXeW7f8F83t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/StorageSlot.sol\":1207:2426  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1207:2426  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122076dbbc5f488888848456d6cfa96d88ac131f99001c4139831920b5aca8c68fe064736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076dbbc5f488888848456d6cfa96d88ac131f99001c4139831920b5aca8c68fe064736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xDBBC5F488888848456D6CFA96D88AC131F99001C413983 NOT KECCAK256 0xB5 0xAC 0xA8 0xC6 DUP16 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "1207:1219:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1207:1219:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122076dbbc5f488888848456d6cfa96d88ac131f99001c4139831920b5aca8c68fe064736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xDBBC5F488888848456D6CFA96D88AC131F99001C413983 NOT KECCAK256 0xB5 0xAC 0xA8 0xC6 DUP16 0xE0 PUSH5 0x736F6C6343 STOP ADDMOD MUL STOP CALLER ",
							"sourceMap": "1207:1219:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076dbbc5f488888848456d6cfa96d88ac131f99001c4139831920b5aca8c68fe064736f6c63430008020033",
									".code": [
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify continuation of the upgradability. The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify continuation of the upgradability. The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf62cb1e46b6c6ced7c5d272ddee4d7398020fa781f4ba85f0ace4c5a9ca08852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45945bc37c26b75bf2df2338901db18133f377832a8be642595a7bdfff56055b\",\"dweb:/ipfs/QmaT2X7KSwbxzTWt76VouZyDk29WUXqqypTLXeW7f8F83t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTContract2/Address.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/Address.sol",
					"exportedSymbols": {
						"Address": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "Address",
							"nameLocation": "134:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "784:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1059:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1116:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1109:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "738:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 295,
									"src": "718:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2119:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2162:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2291:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2309:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2067:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2094:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:0"
									},
									"scope": 295,
									"src": "2048:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3269:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3284:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3277:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 295,
									"src": "3180:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3690:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3746:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3707:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3700:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3611:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3630:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3676:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:0"
									},
									"scope": 295,
									"src": "3573:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4241:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4258:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4251:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4159:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4175:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4194:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4227:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:0"
									},
									"scope": 295,
									"src": "4128:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4741:382:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4861:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4973:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4987:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5042:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "5014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5034:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5091:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5103:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5064:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5057:59:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4681:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4727:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:0"
									},
									"scope": 295,
									"src": "4600:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5400:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5436:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5417:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5410:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5344:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5386:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:0"
									},
									"scope": 295,
									"src": "5300:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5809:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5838:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5827:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5957:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5971:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5998:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6077:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6038:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "6031:59:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5744:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5795:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:0"
									},
									"scope": 295,
									"src": "5681:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6373:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6411:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6390:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6383:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6285:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6314:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6322:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6359:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:0"
									},
									"scope": 295,
									"src": "6276:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6785:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6814:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6940:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6935:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6962:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6949:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7057:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "7018:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "7011:59:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6669:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6698:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6690:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6706:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6739:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6725:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6771:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:0"
									},
									"scope": 295,
									"src": "6660:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7212:596:0",
										"statements": [
											{
												"condition": {
													"id": 275,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "7226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7283:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 279,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7367:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "7739:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 286,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "7764:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 285,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:0"
																	}
																]
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "7363:429:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "7390:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 283,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "7222:580:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7235:42:0",
													"statements": [
														{
															"expression": {
																"id": 276,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "7256:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 274,
															"id": 277,
															"nodeType": "Return",
															"src": "7249:17:0"
														}
													]
												}
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7092:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7115:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7110:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7137:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7124:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7149:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7198:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:0"
									},
									"scope": 295,
									"src": "7083:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 296,
							"src": "126:7684:0"
						}
					],
					"src": "33:7777:0"
				},
				"id": 0
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Upgrade": [
							652
						],
						"IBeacon": [
							662
						],
						"StorageSlot": [
							754
						]
					},
					"id": 653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/NFTContract2/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 663,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/Address.sol",
							"file": "./Address.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 296,
							"src": "82:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 755,
							"src": "106:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "135:236:1",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 652,
							"linearizedBaseContracts": [
								652
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "390:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 304,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "515:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "490:108:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 302,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 303,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "532:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "605:214:1",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 308,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "850:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "824:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 306,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "873:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "946:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"id": 313,
									"name": "Upgraded",
									"nameLocation": "1025:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1050:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1034:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:32:1"
									},
									"src": "1019:47:1"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "1206:78:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 321,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "1250:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 319,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1223:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "1223:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1223:48:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "1223:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "1216:61:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1072:67:1",
										"text": " @dev Returns the current implementation address."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1153:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1197:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:9:1"
									},
									"scope": 652,
									"src": "1144:140:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1438:196:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 335,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1475:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 333,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "1456:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "1456:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:37:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1495:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1448:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1448:95:1"
											},
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 343,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1580:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 340,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "1553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "1553:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1553:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "1553:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1610:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1553:74:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1290:80:1",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1384:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1411:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1403:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:27:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:1"
									},
									"scope": 652,
									"src": "1375:259:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1796:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1825:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1806:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1806:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 361,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1867:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 360,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1858:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "EmitStatement",
												"src": "1853:32:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1640:95:1",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1749:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1768:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1760:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:27:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 652,
									"src": "1740:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2124:217:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2153:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 375,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2134:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "2134:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 380,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2195:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 379,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2186:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "EmitStatement",
												"src": "2181:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 383,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2227:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2227:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2227:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 387,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2246:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2227:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "2223:112:1",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "2257:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 392,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "2300:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 393,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "2319:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 389,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2271:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "2271:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2271:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "2271:53:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1898:123:1",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2035:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2061:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2053:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2093:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2080:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2104:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2099:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2099:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:62:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:0:1"
									},
									"scope": 652,
									"src": "2026:315:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2617:1210:1",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "oldImplementation",
														"nameLocation": "2635:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "2627:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 409,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2627:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 411,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2655:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2627:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2747:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 414,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2728:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2728:37:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 418,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2779:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2779:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2793:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2779:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 422,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2798:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2779:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "2775:112:1",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "2809:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 427,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2852:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 428,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2871:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 424,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2823:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "2823:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "2823:53:1"
														}
													]
												}
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "rollbackTesting",
														"nameLocation": "2989:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "2957:47:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot"
														},
														"typeName": {
															"id": 436,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 435,
																"name": "StorageSlot.BooleanSlot",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 703,
																"src": "2957:23:1"
															},
															"referencedDeclaration": 703,
															"src": "2957:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																"typeString": "struct StorageSlot.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"id": 440,
															"name": "_ROLLBACK_SLOT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3034:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 438,
															"name": "StorageSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "3007:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																"typeString": "type(library StorageSlot)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getBooleanSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 731,
														"src": "3007:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$703_storage_ptr_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2957:92:1"
											},
											{
												"condition": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3063:22:1",
													"subExpression": {
														"expression": {
															"id": 443,
															"name": "rollbackTesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3064:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																"typeString": "struct StorageSlot.BooleanSlot storage pointer"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3064:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"nodeType": "IfStatement",
												"src": "3059:762:1",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "3087:734:1",
													"statements": [
														{
															"expression": {
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 446,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3177:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																			"typeString": "struct StorageSlot.BooleanSlot storage pointer"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 702,
																	"src": "3177:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3201:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3177:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 451,
															"nodeType": "ExpressionStatement",
															"src": "3177:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3265:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "75706772616465546f286164647265737329",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3345:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				"value": "upgradeTo(address)"
																			},
																			{
																				"id": 459,
																				"name": "oldImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 410,
																				"src": "3387:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 456,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3300:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "3300:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3300:122:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 452,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "3219:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "3219:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3219:217:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "3219:217:1"
														},
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 463,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3450:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																			"typeString": "struct StorageSlot.BooleanSlot storage pointer"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 702,
																	"src": "3450:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3450:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "3450:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 470,
																			"name": "oldImplementation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 410,
																			"src": "3545:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 471,
																				"name": "_getImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "3566:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3566:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3545:41:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524331393637557067726164653a207570677261646520627265616b732066757274686572207570677261646573",
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3588:49:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		},
																		"value": "ERC1967Upgrade: upgrade breaks further upgrades"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		}
																	],
																	"id": 469,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3537:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3537:101:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "3537:101:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 478,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3746:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 477,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "3727:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3727:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "3727:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 482,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3792:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 481,
																	"name": "Upgraded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3783:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3783:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "EmitStatement",
															"src": "3778:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2347:161:1",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallSecure",
									"nameLocation": "2522:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2554:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2546:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2586:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2573:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2573:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2597:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2592:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2592:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:62:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2617:0:1"
									},
									"scope": 652,
									"src": "2513:1314:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "4226:217:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 499,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4247:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 498,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "4236:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4236:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 503,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4287:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 502,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "4272:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "4267:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "4311:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4311:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4311:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 510,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "4330:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4311:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "4307:130:1",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "4341:96:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 516,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 491,
																						"src": "4392:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 515,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "4384:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$662_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4384:18:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$662",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 661,
																			"src": "4384:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4384:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 520,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "4421:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 512,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "4355:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "4355:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4355:71:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 522,
															"nodeType": "ExpressionStatement",
															"src": "4355:71:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "3833:292:1",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "4139:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4171:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4163:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4195:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4182:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4182:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "4206:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4201:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4162:54:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4226:0:1"
									},
									"scope": 652,
									"src": "4130:313:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "4449:189:1",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 530,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4669:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "4643:106:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 528,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4643:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4683:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "4756:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"id": 537,
									"name": "AdminChanged",
									"nameLocation": "4834:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "4855:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4847:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4878:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4870:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:41:1"
									},
									"src": "4828:60:1"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5002:69:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 545,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5046:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 543,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "5019:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "5019:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "5019:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 542,
												"id": 548,
												"nodeType": "Return",
												"src": "5012:52:1"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "4894:50:1",
										"text": " @dev Returns the current admin."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4958:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4967:2:1"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "4993:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:9:1"
									},
									"scope": 652,
									"src": "4949:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5198:156:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "5216:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5236:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5228:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5228:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5228:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5216:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5240:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5208:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5208:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "5208:73:1"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 569,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "5318:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 566,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5291:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "5291:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "5291:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 572,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "5339:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5291:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "5291:56:1"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "5077:71:1",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "5162:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5180:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5172:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:18:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5198:0:1"
									},
									"scope": 652,
									"src": "5153:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "5514:86:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 583,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "5542:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5555:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "5529:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "EmitStatement",
												"src": "5524:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5584:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 588,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "5574:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "5574:19:1"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "5360:100:1",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "5474:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5495:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "5487:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5486:18:1"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5514:0:1"
									},
									"scope": 652,
									"src": "5465:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "5606:232:1",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 597,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5869:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "5843:107:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 595,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5843:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5884:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "5957:60:1",
										"text": " @dev Emitted when the beacon is upgraded."
									},
									"id": 602,
									"name": "BeaconUpgraded",
									"nameLocation": "6028:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "6059:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6043:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:24:1"
									},
									"src": "6022:45:1"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6183:70:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 610,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "6227:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 608,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "6200:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "6200:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6200:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "6200:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 607,
												"id": 613,
												"nodeType": "Return",
												"src": "6193:53:1"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6073:51:1",
										"text": " @dev Returns the current beacon."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "6138:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6148:2:1"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6174:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6173:9:1"
									},
									"scope": 652,
									"src": "6129:124:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "6382:358:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 624,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6432:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 622,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "6413:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "6413:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6413:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6456:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6392:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "6392:113:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 633,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "6563:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 632,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "6555:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$662_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:18:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$662",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 661,
																		"src": "6555:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6555:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 630,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "6536:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "6536:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6536:55:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6605:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6515:150:1"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6702:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 641,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6675:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "6675:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:40:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "6675:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "6724:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6675:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "6675:58:1"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "6259:71:1",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "6344:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6363:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6355:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6354:19:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6382:0:1"
									},
									"scope": 652,
									"src": "6335:405:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 653,
							"src": "372:6370:1"
						}
					],
					"src": "33:6709:1"
				},
				"id": 1
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 655,
								"nodeType": "StructuredDocumentation",
								"src": "58:79:2",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IBeacon",
							"nameLocation": "148:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "162:162:2",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "338:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "378:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:2"
									},
									"scope": 662,
									"src": "329:58:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 663,
							"src": "138:251:2"
						}
					],
					"src": "33:356:2"
				},
				"id": 2
			},
			"contracts/NFTContract2/Proxiable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/Proxiable.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ChildOfProxiable": [
							694
						],
						"ERC1967Upgrade": [
							652
						],
						"IBeacon": [
							662
						],
						"Proxiable": [
							684
						],
						"StorageSlot": [
							754
						],
						"UUPSUpgradeable": [
							803
						]
					},
					"id": 695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "contracts/NFTContract2/UUPSUpgradeable.sol",
							"file": "./UUPSUpgradeable.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 804,
							"src": "57:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 666,
										"name": "UUPSUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 803,
										"src": "121:15:3"
									},
									"id": 667,
									"nodeType": "InheritanceSpecifier",
									"src": "121:15:3"
								}
							],
							"contractDependencies": [
								652,
								803
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 684,
							"linearizedBaseContracts": [
								684,
								803,
								652
							],
							"name": "Proxiable",
							"nameLocation": "108:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										802
									],
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "215:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "240:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 673,
														"name": "_beforeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "225:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "225:33:3"
											}
										]
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "152:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "206:8:3"
									},
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "178:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "170:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:27:3"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:3"
									},
									"scope": 684,
									"src": "143:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeUpgrade",
									"nameLocation": "280:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "303:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "295:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:27:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:0:3"
									},
									"scope": 684,
									"src": "271:68:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 695,
							"src": "90:251:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 685,
										"name": "Proxiable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 684,
										"src": "372:9:3"
									},
									"id": 686,
									"nodeType": "InheritanceSpecifier",
									"src": "372:9:3"
								}
							],
							"contractDependencies": [
								652,
								684,
								803
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 694,
							"linearizedBaseContracts": [
								694,
								684,
								803,
								652
							],
							"name": "ChildOfProxiable",
							"nameLocation": "352:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "465:2:3",
										"statements": []
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeUpgrade",
									"nameLocation": "397:14:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 690,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "456:8:3"
									},
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "420:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "412:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:27:3"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:0:3"
									},
									"scope": 694,
									"src": "388:79:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 695,
							"src": "343:126:3"
						}
					],
					"src": "32:437:3"
				},
				"id": 3
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 697,
								"nodeType": "StructuredDocumentation",
								"src": "58:1148:4",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "StorageSlot",
							"nameLocation": "1215:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 700,
									"members": [
										{
											"constant": false,
											"id": 699,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1270:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 700,
											"src": "1262:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 698,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1262:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1240:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1233:49:4",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 703,
									"members": [
										{
											"constant": false,
											"id": 702,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1322:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 703,
											"src": "1317:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 701,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1317:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1295:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1288:46:4",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 706,
									"members": [
										{
											"constant": false,
											"id": 705,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1377:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "1369:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 704,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1369:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1347:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1340:49:4",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 709,
									"members": [
										{
											"constant": false,
											"id": 708,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1432:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "1424:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 707,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1402:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1395:49:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "1626:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1645:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1659:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1669:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": true,
														"src": "1659:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "1669:4:4",
														"valueSize": 1
													}
												],
												"id": 718,
												"nodeType": "InlineAssembly",
												"src": "1636:47:4"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1450:87:4",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1551:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1574:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1566:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:14:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1623:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1603:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 714,
														"name": "AddressSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 700,
														"src": "1603:11:4"
													},
													"referencedDeclaration": 700,
													"src": "1603:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:23:4"
									},
									"scope": 754,
									"src": "1542:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "1871:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1890:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1904:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1914:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 727,
														"isOffset": false,
														"isSlot": true,
														"src": "1904:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 723,
														"isOffset": false,
														"isSlot": false,
														"src": "1914:4:4",
														"valueSize": 1
													}
												],
												"id": 729,
												"nodeType": "InlineAssembly",
												"src": "1881:47:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "1695:87:4",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1796:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1819:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1811:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:14:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1848:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 725,
														"name": "BooleanSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "1848:11:4"
													},
													"referencedDeclaration": 703,
													"src": "1848:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:23:4"
									},
									"scope": 754,
									"src": "1787:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "2116:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2135:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2149:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2159:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 738,
														"isOffset": false,
														"isSlot": true,
														"src": "2149:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 734,
														"isOffset": false,
														"isSlot": false,
														"src": "2159:4:4",
														"valueSize": 1
													}
												],
												"id": 740,
												"nodeType": "InlineAssembly",
												"src": "2126:47:4"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1940:87:4",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2041:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2064:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2056:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:14:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2113:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2093:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$706_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 736,
														"name": "Bytes32Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "2093:11:4"
													},
													"referencedDeclaration": 706,
													"src": "2093:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$706_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:23:4"
									},
									"scope": 754,
									"src": "2032:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2361:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2380:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2394:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2404:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": true,
														"src": "2394:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 745,
														"isOffset": false,
														"isSlot": false,
														"src": "2404:4:4",
														"valueSize": 1
													}
												],
												"id": 751,
												"nodeType": "InlineAssembly",
												"src": "2371:47:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "2185:87:4",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2286:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2301:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:14:4"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2358:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2338:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$709_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 748,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 747,
														"name": "Uint256Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 709,
														"src": "2338:11:4"
													},
													"referencedDeclaration": 709,
													"src": "2338:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$709_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:23:4"
									},
									"scope": 754,
									"src": "2277:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 755,
							"src": "1207:1219:4"
						}
					],
					"src": "33:2393:4"
				},
				"id": 4
			},
			"contracts/NFTContract2/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Upgrade": [
							652
						],
						"IBeacon": [
							662
						],
						"StorageSlot": [
							754
						],
						"UUPSUpgradeable": [
							803
						]
					},
					"id": 804,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "contracts/NFTContract2/ERC1967Upgrade.sol",
							"file": "./ERC1967Upgrade.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 804,
							"sourceUnit": 653,
							"src": "58:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 759,
										"name": "ERC1967Upgrade",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 652,
										"src": "553:14:5"
									},
									"id": 760,
									"nodeType": "InheritanceSpecifier",
									"src": "553:14:5"
								}
							],
							"contractDependencies": [
								652
							],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "90:425:5",
								"text": " @dev Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes\n publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify\n continuation of the upgradability.\n The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 803,
							"linearizedBaseContracts": [
								803,
								652
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "534:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "637:123:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "665:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 765,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "647:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "647:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "647:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "717:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "742:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "736:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 771,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "736:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "747:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 769,
														"name": "_upgradeToAndCallSecure",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "693:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "693:60:5"
											}
										]
									},
									"functionSelector": "3659cfe6",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "583:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "601:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "593:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:27:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:0:5"
									},
									"scope": 803,
									"src": "574:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "863:117:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "891:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 786,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "873:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "873:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "943:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "962:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "968:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_upgradeToAndCallSecure",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "919:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "919:54:5"
											}
										]
									},
									"functionSelector": "4f1ef286",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "775:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "800:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "792:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "832:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "819:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "819:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:46:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "863:0:5"
									},
									"scope": 803,
									"src": "766:214:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"id": 802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "995:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1021:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1013:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:27:5"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:5"
									},
									"scope": 803,
									"src": "986:71:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 804,
							"src": "516:543:5"
						}
					],
					"src": "33:1026:5"
				},
				"id": 5
			}
		}
	}
}