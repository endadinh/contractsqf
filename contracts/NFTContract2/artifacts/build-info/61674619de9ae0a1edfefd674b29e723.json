{
	"id": "61674619de9ae0a1edfefd674b29e723",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.2",
	"solcLongVersion": "0.8.2+commit.661d1103",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/NFTContract2/Proxiable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"./UUPSUpgradeable.sol\";\n\nabstract contract Proxiable is UUPSUpgradeable {\n    function _authorizeUpgrade(address newImplementation) internal override {\n        _beforeUpgrade(newImplementation);\n    }\n\n    function _beforeUpgrade(address newImplementation) internal virtual;\n}\n\ncontract ChildOfProxiable is Proxiable {\n    function _beforeUpgrade(address newImplementation) internal virtual override {}\n}"
			},
			"contracts/NFTContract2/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ERC1967Upgrade.sol\";\n\n/**\n * @dev Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes\n * publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify\n * continuation of the upgradability.\n *\n * The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism.\n *\n * _Available since v4.1._\n */\nabstract contract UUPSUpgradeable is ERC1967Upgrade {\n    function upgradeTo(address newImplementation) external virtual {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallSecure(newImplementation, bytes(\"\"), false);\n    }\n\n    function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallSecure(newImplementation, data, true);\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n}"
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\nimport \"./IBeacon.sol\";\nimport \"./Address.sol\";\nimport \"./StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n *\n * @custom:oz-upgrades-unsafe-allow delegatecall\n */\nabstract contract ERC1967Upgrade {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {\n        address oldImplementation = _getImplementation();\n\n        // Initial upgrade and setup call\n        _setImplementation(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n\n        // Perform rollback test if not already in progress\n        StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT);\n        if (!rollbackTesting.value) {\n            // Trigger rollback using upgradeTo from the new implementation\n            rollbackTesting.value = true;\n            Address.functionDelegateCall(\n                newImplementation,\n                abi.encodeWithSignature(\n                    \"upgradeTo(address)\",\n                    oldImplementation\n                )\n            );\n            rollbackTesting.value = false;\n            // Check rollback was effective\n            require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\");\n            // Finally reset to the new implementation and log the upgrade\n            _setImplementation(newImplementation);\n            emit Upgraded(newImplementation);\n        }\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Emitted when the beacon is upgraded.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(\n            Address.isContract(newBeacon),\n            \"ERC1967: new beacon is not a contract\"\n        );\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n}"
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly {\n            r.slot := slot\n        }\n    }\n}"
			},
			"contracts/NFTContract2/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/NFTContract2/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/Address.sol\":126:7810  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/Address.sol\":126:7810  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220197f02c75ef4d48967233a7de8fe7bd79407bc5ef6965b113c1755e862d16edd64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220197f02c75ef4d48967233a7de8fe7bd79407bc5ef6965b113c1755e862d16edd64736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH32 0x2C75EF4D48967233A7DE8FE7BD79407BC5EF6965B113C1755E862D16EDD6473 PUSH16 0x6C634300080200330000000000000000 ",
							"sourceMap": "126:7684:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220197f02c75ef4d48967233a7de8fe7bd79407bc5ef6965b113c1755e862d16edd64736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT PUSH32 0x2C75EF4D48967233A7DE8FE7BD79407BC5EF6965B113C1755E862D16EDD6473 PUSH16 0x6C634300080200330000000000000000 ",
							"sourceMap": "126:7684:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 126,
									"end": 7810,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220197f02c75ef4d48967233a7de8fe7bd79407bc5ef6965b113c1755e862d16edd64736f6c63430008020033",
									".code": [
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 126,
											"end": 7810,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "delegatecall",
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is upgraded."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"delegatecall\",\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is upgraded.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/Proxiable.sol": {
				"ChildOfProxiable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/Proxiable.sol\":343:469  contract ChildOfProxiable is Proxiable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/Proxiable.sol\":343:469  contract ChildOfProxiable is Proxiable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3659cfe6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":766:980  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n    tag_8:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":647:683  _authorizeUpgrade(newImplementation) */\n      tag_14\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":665:682  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":647:664  _authorizeUpgrade */\n      tag_15\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":647:683  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_14:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":693:753  _upgradeToAndCallSecure(newImplementation, bytes(\"\"), false) */\n      tag_16\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":717:734  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":736:745  bytes(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":747:752  false */\n      0x00\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":693:716  _upgradeToAndCallSecure */\n      tag_17\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":693:753  _upgradeToAndCallSecure(newImplementation, bytes(\"\"), false) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":574:760  function upgradeTo(address newImplementation) external virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":766:980  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {... */\n    tag_12:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":873:909  _authorizeUpgrade(newImplementation) */\n      tag_19\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":891:908  newImplementation */\n      dup3\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":873:890  _authorizeUpgrade */\n      tag_15\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":873:909  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_19:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":919:973  _upgradeToAndCallSecure(newImplementation, data, true) */\n      tag_20\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":943:960  newImplementation */\n      dup3\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":962:966  data */\n      dup3\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":968:972  true */\n      0x01\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":919:942  _upgradeToAndCallSecure */\n      tag_17\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":919:973  _upgradeToAndCallSecure(newImplementation, data, true) */\n      jump\t// in\n    tag_20:\n        /* \"contracts/NFTContract2/UUPSUpgradeable.sol\":766:980  function upgradeToAndCall(address newImplementation, bytes memory data) external payable virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Proxiable.sol\":143:265  function _authorizeUpgrade(address newImplementation) internal override {... */\n    tag_15:\n        /* \"contracts/NFTContract2/Proxiable.sol\":225:258  _beforeUpgrade(newImplementation) */\n      tag_22\n        /* \"contracts/NFTContract2/Proxiable.sol\":240:257  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/Proxiable.sol\":225:239  _beforeUpgrade */\n      tag_23\n        /* \"contracts/NFTContract2/Proxiable.sol\":225:258  _beforeUpgrade(newImplementation) */\n      jump\t// in\n    tag_22:\n        /* \"contracts/NFTContract2/Proxiable.sol\":143:265  function _authorizeUpgrade(address newImplementation) internal override {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2513:3827  function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {... */\n    tag_17:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2627:2652  address oldImplementation */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2655:2675  _getImplementation() */\n      tag_25\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2655:2673  _getImplementation */\n      tag_26\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2655:2675  _getImplementation() */\n      jump\t// in\n    tag_25:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2627:2675  address oldImplementation = _getImplementation() */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2728:2765  _setImplementation(newImplementation) */\n      tag_27\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2747:2764  newImplementation */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2728:2746  _setImplementation */\n      tag_28\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2728:2765  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_27:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2793:2794  0 */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2783  data */\n      dup4\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2790  data.length */\n      mload\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2794  data.length > 0 */\n      gt\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2807  data.length > 0 || forceCall */\n      dup1\n      tag_29\n      jumpi\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2798:2807  forceCall */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2779:2807  data.length > 0 || forceCall */\n    tag_29:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2775:2887  if (data.length > 0 || forceCall) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2823:2876  Address.functionDelegateCall(newImplementation, data) */\n      tag_31\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2852:2869  newImplementation */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2871:2875  data */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2823:2851  Address.functionDelegateCall */\n      tag_32\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2823:2876  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_31:\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2775:2887  if (data.length > 0 || forceCall) {... */\n    tag_30:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2957:3004  StorageSlot.BooleanSlot storage rollbackTesting */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3007:3049  StorageSlot.getBooleanSlot(_ROLLBACK_SLOT) */\n      tag_33\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":532:598  0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143 */\n      0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3034:3048  _ROLLBACK_SLOT */\n      0x00\n      shl\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3007:3033  StorageSlot.getBooleanSlot */\n      tag_34\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3007:3049  StorageSlot.getBooleanSlot(_ROLLBACK_SLOT) */\n      jump\t// in\n    tag_33:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2957:3049  StorageSlot.BooleanSlot storage rollbackTesting = StorageSlot.getBooleanSlot(_ROLLBACK_SLOT) */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3064:3079  rollbackTesting */\n      dup1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3064:3085  rollbackTesting.value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3059:3821  if (!rollbackTesting.value) {... */\n      tag_35\n      jumpi\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3201:3205  true */\n      0x01\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3177:3192  rollbackTesting */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3177:3198  rollbackTesting.value */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3177:3205  rollbackTesting.value = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3219:3436  Address.functionDelegateCall(... */\n      tag_36\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3265:3282  newImplementation */\n      dup6\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3387:3404  oldImplementation */\n      dup4\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3300:3422  abi.encodeWithSignature(... */\n      add(0x24, mload(0x40))\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0x3659cfe600000000000000000000000000000000000000000000000000000000)\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3219:3247  Address.functionDelegateCall */\n      tag_32\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3219:3436  Address.functionDelegateCall(... */\n      jump\t// in\n    tag_36:\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3474:3479  false */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3450:3465  rollbackTesting */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3450:3471  rollbackTesting.value */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3450:3479  rollbackTesting.value = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3566:3586  _getImplementation() */\n      tag_39\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3566:3584  _getImplementation */\n      tag_26\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3566:3586  _getImplementation() */\n      jump\t// in\n    tag_39:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3545:3586  oldImplementation == _getImplementation() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3545:3562  oldImplementation */\n      dup3\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3545:3586  oldImplementation == _getImplementation() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3537:3638  require(oldImplementation == _getImplementation(), \"ERC1967Upgrade: upgrade breaks further upgrades\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3727:3764  _setImplementation(newImplementation) */\n      tag_43\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3746:3763  newImplementation */\n      dup6\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3727:3745  _setImplementation */\n      tag_28\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3727:3764  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_43:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3792:3809  newImplementation */\n      dup5\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3783:3810  Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":3059:3821  if (!rollbackTesting.value) {... */\n    tag_35:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":2513:3827  function _upgradeToAndCallSecure(address newImplementation, bytes memory data, bool forceCall) internal {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Proxiable.sol\":388:467  function _beforeUpgrade(address newImplementation) internal virtual override {} */\n    tag_23:\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1144:1284  function _getImplementation() internal view returns (address) {... */\n    tag_26:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1197:1204  address */\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1271  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_46\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1250:1270  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1249  StorageSlot.getAddressSlot */\n      tag_47\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1271  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_46:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1223:1277  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1216:1277  return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1144:1284  function _getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n    tag_28:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n      tag_49\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1475:1492  newImplementation */\n      dup2\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1474  Address.isContract */\n      tag_50\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1456:1493  Address.isContract(newImplementation) */\n      jump\t// in\n    tag_49:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1448:1543  require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_51:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1610:1627  newImplementation */\n      dup1\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      tag_54\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":873:939  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1580:1600  _IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1579  StorageSlot.getAddressSlot */\n      tag_47\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1601  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_54:\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1607  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1553:1627  StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/NFTContract2/ERC1967Upgrade.sol\":1375:1634  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_32:\n        /* \"contracts/NFTContract2/Address.sol\":6359:6371  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      tag_56\n        /* \"contracts/NFTContract2/Address.sol\":6411:6417  target */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6419:6423  data */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x27\n      dup2\n      mstore\n      0x20\n      add\n      data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398\n      0x27\n      swap2\n      codecopy\n        /* \"contracts/NFTContract2/Address.sol\":6390:6410  functionDelegateCall */\n      tag_57\n        /* \"contracts/NFTContract2/Address.sol\":6390:6467  functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      jump\t// in\n    tag_56:\n        /* \"contracts/NFTContract2/Address.sol\":6383:6467  return functionDelegateCall(target, data, \"Address: low-level delegate call failed\") */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":6276:6474  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1787:1934  function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {... */\n    tag_34:\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1848:1869  BooleanSlot storage r */\n      0x00\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1914:1918  slot */\n      dup2\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1904:1918  r.slot := slot */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1890:1928  {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1542:1689  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_47:\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1603:1624  AddressSlot storage r */\n      0x00\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1669:1673  slot */\n      dup2\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1659:1673  r.slot := slot */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1645:1683  {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n    tag_50:\n        /* \"contracts/NFTContract2/Address.sol\":778:782  bool */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":981:993  uint256 size */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":1090:1097  account */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":1078:1098  extcodesize(account) */\n      extcodesize\n        /* \"contracts/NFTContract2/Address.sol\":1070:1098  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":1123:1124  0 */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":1116:1120  size */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":1116:1124  size > 0 */\n      gt\n        /* \"contracts/NFTContract2/Address.sol\":1109:1124  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":718:1131  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_57:\n        /* \"contracts/NFTContract2/Address.sol\":6771:6783  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":6803:6821  isContract(target) */\n      tag_62\n        /* \"contracts/NFTContract2/Address.sol\":6814:6820  target */\n      dup5\n        /* \"contracts/NFTContract2/Address.sol\":6803:6813  isContract */\n      tag_50\n        /* \"contracts/NFTContract2/Address.sol\":6803:6821  isContract(target) */\n      jump\t// in\n    tag_62:\n        /* \"contracts/NFTContract2/Address.sol\":6795:6864  require(isContract(target), \"Address: delegate call to non-contract\") */\n      tag_63\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_63:\n        /* \"contracts/NFTContract2/Address.sol\":6935:6947  bool success */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":6949:6972  bytes memory returndata */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":6976:6982  target */\n      dup6\n        /* \"contracts/NFTContract2/Address.sol\":6976:6995  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/NFTContract2/Address.sol\":6996:7000  data */\n      dup6\n        /* \"contracts/NFTContract2/Address.sol\":6976:7001  target.delegatecall(data) */\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_70\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_69)\n    tag_70:\n      0x60\n      swap2\n      pop\n    tag_69:\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":6934:7001  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      tag_71\n        /* \"contracts/NFTContract2/Address.sol\":7036:7043  success */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7045:7055  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7057:7069  errorMessage */\n      dup7\n        /* \"contracts/NFTContract2/Address.sol\":7018:7035  _verifyCallResult */\n      tag_72\n        /* \"contracts/NFTContract2/Address.sol\":7018:7070  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/NFTContract2/Address.sol\":7011:7070  return _verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/NFTContract2/Address.sol\":6660:7077  function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_72:\n        /* \"contracts/NFTContract2/Address.sol\":7198:7210  bytes memory */\n      0x60\n        /* \"contracts/NFTContract2/Address.sol\":7226:7233  success */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n      iszero\n      tag_74\n      jumpi\n        /* \"contracts/NFTContract2/Address.sol\":7256:7266  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7249:7266  return returndata */\n      swap1\n      pop\n      jump(tag_73)\n        /* \"contracts/NFTContract2/Address.sol\":7222:7802  if (success) {... */\n    tag_74:\n        /* \"contracts/NFTContract2/Address.sol\":7387:7388  0 */\n      0x00\n        /* \"contracts/NFTContract2/Address.sol\":7367:7377  returndata */\n      dup4\n        /* \"contracts/NFTContract2/Address.sol\":7367:7384  returndata.length */\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7367:7388  returndata.length > 0 */\n      gt\n        /* \"contracts/NFTContract2/Address.sol\":7363:7792  if (returndata.length > 0) {... */\n      iszero\n      tag_76\n      jumpi\n        /* \"contracts/NFTContract2/Address.sol\":7625:7635  returndata */\n      dup3\n        /* \"contracts/NFTContract2/Address.sol\":7619:7636  mload(returndata) */\n      mload\n        /* \"contracts/NFTContract2/Address.sol\":7685:7700  returndata_size */\n      dup1\n        /* \"contracts/NFTContract2/Address.sol\":7672:7682  returndata */\n      dup5\n        /* \"contracts/NFTContract2/Address.sol\":7668:7670  32 */\n      0x20\n        /* \"contracts/NFTContract2/Address.sol\":7664:7683  add(32, returndata) */\n      add\n        /* \"contracts/NFTContract2/Address.sol\":7657:7701  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"contracts/NFTContract2/Address.sol\":7574:7719  {... */\n    tag_76:\n        /* \"contracts/NFTContract2/Address.sol\":7764:7776  errorMessage */\n      dup2\n        /* \"contracts/NFTContract2/Address.sol\":7757:7777  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/NFTContract2/Address.sol\":7083:7808  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_73:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:350   */\n    tag_81:\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_83\n        /* \"#utility.yul\":125:173   */\n      tag_84\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":109:174   */\n      tag_86\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:251   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":290:291   */\n      0x00\n        /* \"#utility.yul\":287:288   */\n      dup1\n        /* \"#utility.yul\":280:292   */\n      revert\n        /* \"#utility.yul\":249:251   */\n    tag_87:\n        /* \"#utility.yul\":303:344   */\n      tag_88\n        /* \"#utility.yul\":337:343   */\n      dup5\n        /* \"#utility.yul\":332:335   */\n      dup3\n        /* \"#utility.yul\":327:330   */\n      dup6\n        /* \"#utility.yul\":303:344   */\n      tag_89\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":90:350   */\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":356:495   */\n    tag_90:\n      0x00\n        /* \"#utility.yul\":440:446   */\n      dup2\n        /* \"#utility.yul\":427:447   */\n      calldataload\n        /* \"#utility.yul\":418:447   */\n      swap1\n      pop\n        /* \"#utility.yul\":456:489   */\n      tag_92\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":456:489   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":408:495   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":514:785   */\n    tag_94:\n      0x00\n        /* \"#utility.yul\":618:621   */\n      dup3\n        /* \"#utility.yul\":611:615   */\n      0x1f\n        /* \"#utility.yul\":603:609   */\n      dup4\n        /* \"#utility.yul\":599:616   */\n      add\n        /* \"#utility.yul\":595:622   */\n      slt\n        /* \"#utility.yul\":585:587   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":636:637   */\n      0x00\n        /* \"#utility.yul\":633:634   */\n      dup1\n        /* \"#utility.yul\":626:638   */\n      revert\n        /* \"#utility.yul\":585:587   */\n    tag_96:\n        /* \"#utility.yul\":676:682   */\n      dup2\n        /* \"#utility.yul\":663:683   */\n      calldataload\n        /* \"#utility.yul\":701:779   */\n      tag_97\n        /* \"#utility.yul\":775:778   */\n      dup5\n        /* \"#utility.yul\":767:773   */\n      dup3\n        /* \"#utility.yul\":760:764   */\n      0x20\n        /* \"#utility.yul\":752:758   */\n      dup7\n        /* \"#utility.yul\":748:765   */\n      add\n        /* \"#utility.yul\":701:779   */\n      tag_81\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":692:779   */\n      swap2\n      pop\n        /* \"#utility.yul\":575:785   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":791:1053   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":899:901   */\n      0x20\n        /* \"#utility.yul\":887:896   */\n      dup3\n        /* \"#utility.yul\":878:885   */\n      dup5\n        /* \"#utility.yul\":874:897   */\n      sub\n        /* \"#utility.yul\":870:902   */\n      slt\n        /* \"#utility.yul\":867:869   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":915:916   */\n      0x00\n        /* \"#utility.yul\":912:913   */\n      dup1\n        /* \"#utility.yul\":905:917   */\n      revert\n        /* \"#utility.yul\":867:869   */\n    tag_99:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_100\n        /* \"#utility.yul\":1028:1035   */\n      dup5\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup6\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_90\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":973:1036   */\n      swap2\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":857:1053   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1059:1577   */\n    tag_11:\n      0x00\n      dup1\n        /* \"#utility.yul\":1193:1195   */\n      0x40\n        /* \"#utility.yul\":1181:1190   */\n      dup4\n        /* \"#utility.yul\":1172:1179   */\n      dup6\n        /* \"#utility.yul\":1168:1191   */\n      sub\n        /* \"#utility.yul\":1164:1196   */\n      slt\n        /* \"#utility.yul\":1161:1163   */\n      iszero\n      tag_102\n      jumpi\n        /* \"#utility.yul\":1209:1210   */\n      0x00\n        /* \"#utility.yul\":1206:1207   */\n      dup1\n        /* \"#utility.yul\":1199:1211   */\n      revert\n        /* \"#utility.yul\":1161:1163   */\n    tag_102:\n        /* \"#utility.yul\":1252:1253   */\n      0x00\n        /* \"#utility.yul\":1277:1330   */\n      tag_103\n        /* \"#utility.yul\":1322:1329   */\n      dup6\n        /* \"#utility.yul\":1313:1319   */\n      dup3\n        /* \"#utility.yul\":1302:1311   */\n      dup7\n        /* \"#utility.yul\":1298:1320   */\n      add\n        /* \"#utility.yul\":1277:1330   */\n      tag_90\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":1267:1330   */\n      swap3\n      pop\n        /* \"#utility.yul\":1223:1340   */\n      pop\n        /* \"#utility.yul\":1407:1409   */\n      0x20\n        /* \"#utility.yul\":1396:1405   */\n      dup4\n        /* \"#utility.yul\":1392:1410   */\n      add\n        /* \"#utility.yul\":1379:1411   */\n      calldataload\n        /* \"#utility.yul\":1438:1456   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1430:1436   */\n      dup2\n        /* \"#utility.yul\":1427:1457   */\n      gt\n        /* \"#utility.yul\":1424:1426   */\n      iszero\n      tag_104\n      jumpi\n        /* \"#utility.yul\":1470:1471   */\n      0x00\n        /* \"#utility.yul\":1467:1468   */\n      dup1\n        /* \"#utility.yul\":1460:1472   */\n      revert\n        /* \"#utility.yul\":1424:1426   */\n    tag_104:\n        /* \"#utility.yul\":1498:1560   */\n      tag_105\n        /* \"#utility.yul\":1552:1559   */\n      dup6\n        /* \"#utility.yul\":1543:1549   */\n      dup3\n        /* \"#utility.yul\":1532:1541   */\n      dup7\n        /* \"#utility.yul\":1528:1550   */\n      add\n        /* \"#utility.yul\":1498:1560   */\n      tag_94\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1488:1560   */\n      swap2\n      pop\n        /* \"#utility.yul\":1350:1570   */\n      pop\n        /* \"#utility.yul\":1151:1577   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1583:1701   */\n    tag_106:\n        /* \"#utility.yul\":1670:1694   */\n      tag_108\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1670:1694   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":1665:1668   */\n      dup3\n        /* \"#utility.yul\":1658:1695   */\n      mstore\n        /* \"#utility.yul\":1648:1701   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:2080   */\n    tag_110:\n      0x00\n        /* \"#utility.yul\":1839:1877   */\n      tag_112\n        /* \"#utility.yul\":1871:1876   */\n      dup3\n        /* \"#utility.yul\":1839:1877   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1893:1981   */\n      tag_114\n        /* \"#utility.yul\":1974:1980   */\n      dup2\n        /* \"#utility.yul\":1969:1972   */\n      dup6\n        /* \"#utility.yul\":1893:1981   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":1886:1981   */\n      swap4\n      pop\n        /* \"#utility.yul\":1990:2042   */\n      tag_116\n        /* \"#utility.yul\":2035:2041   */\n      dup2\n        /* \"#utility.yul\":2030:2033   */\n      dup6\n        /* \"#utility.yul\":2023:2027   */\n      0x20\n        /* \"#utility.yul\":2016:2021   */\n      dup7\n        /* \"#utility.yul\":2012:2028   */\n      add\n        /* \"#utility.yul\":1990:2042   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":2067:2073   */\n      dup1\n        /* \"#utility.yul\":2062:2065   */\n      dup5\n        /* \"#utility.yul\":2058:2074   */\n      add\n        /* \"#utility.yul\":2051:2074   */\n      swap2\n      pop\n        /* \"#utility.yul\":1815:2080   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2086:2450   */\n    tag_118:\n      0x00\n        /* \"#utility.yul\":2202:2241   */\n      tag_120\n        /* \"#utility.yul\":2235:2240   */\n      dup3\n        /* \"#utility.yul\":2202:2241   */\n      tag_121\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":2257:2328   */\n      tag_122\n        /* \"#utility.yul\":2321:2327   */\n      dup2\n        /* \"#utility.yul\":2316:2319   */\n      dup6\n        /* \"#utility.yul\":2257:2328   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2250:2328   */\n      swap4\n      pop\n        /* \"#utility.yul\":2337:2389   */\n      tag_124\n        /* \"#utility.yul\":2382:2388   */\n      dup2\n        /* \"#utility.yul\":2377:2380   */\n      dup6\n        /* \"#utility.yul\":2370:2374   */\n      0x20\n        /* \"#utility.yul\":2363:2368   */\n      dup7\n        /* \"#utility.yul\":2359:2375   */\n      add\n        /* \"#utility.yul\":2337:2389   */\n      tag_117\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2414:2443   */\n      tag_125\n        /* \"#utility.yul\":2436:2442   */\n      dup2\n        /* \"#utility.yul\":2414:2443   */\n      tag_126\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":2409:2412   */\n      dup5\n        /* \"#utility.yul\":2405:2444   */\n      add\n        /* \"#utility.yul\":2398:2444   */\n      swap2\n      pop\n        /* \"#utility.yul\":2178:2450   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2822   */\n    tag_127:\n      0x00\n        /* \"#utility.yul\":2619:2686   */\n      tag_129\n        /* \"#utility.yul\":2683:2685   */\n      0x2f\n        /* \"#utility.yul\":2678:2681   */\n      dup4\n        /* \"#utility.yul\":2619:2686   */\n      tag_123\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":2612:2686   */\n      swap2\n      pop\n        /* \"#utility.yul\":2695:2788   */\n      tag_130\n        /* \"#utility.yul\":2784:2787   */\n      dup3\n        /* \"#utility.yul\":2695:2788   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2813:2815   */\n      0x40\n        /* \"#utility.yul\":2808:2811   */\n      dup3\n        /* \"#utility.yul\":2804:2816   */\n      add\n        /* \"#utility.yul\":2797:2816   */\n      swap1\n      pop\n        /* \"#utility.yul\":2602:2822   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2828:3194   */\n    tag_132:\n      0x00\n        /* \"#utility.yul\":2991:3058   */\n      tag_134\n        /* \"#utility.yul\":3055:3057   */\n      0x2d\n        /* \"#utility.yul\":3050:3053   */\n      dup4\n        /* \"#utility.yul\":2991:3058   */\n      tag_123\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2984:3058   */\n      swap2\n      pop\n        /* \"#utility.yul\":3067:3160   */\n      tag_135\n        /* \"#utility.yul\":3156:3159   */\n      dup3\n        /* \"#utility.yul\":3067:3160   */\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":3185:3187   */\n      0x40\n        /* \"#utility.yul\":3180:3183   */\n      dup3\n        /* \"#utility.yul\":3176:3188   */\n      add\n        /* \"#utility.yul\":3169:3188   */\n      swap1\n      pop\n        /* \"#utility.yul\":2974:3194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3200:3566   */\n    tag_137:\n      0x00\n        /* \"#utility.yul\":3363:3430   */\n      tag_139\n        /* \"#utility.yul\":3427:3429   */\n      0x26\n        /* \"#utility.yul\":3422:3425   */\n      dup4\n        /* \"#utility.yul\":3363:3430   */\n      tag_123\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3356:3430   */\n      swap2\n      pop\n        /* \"#utility.yul\":3439:3532   */\n      tag_140\n        /* \"#utility.yul\":3528:3531   */\n      dup3\n        /* \"#utility.yul\":3439:3532   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3557:3559   */\n      0x40\n        /* \"#utility.yul\":3552:3555   */\n      dup3\n        /* \"#utility.yul\":3548:3560   */\n      add\n        /* \"#utility.yul\":3541:3560   */\n      swap1\n      pop\n        /* \"#utility.yul\":3346:3566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3843   */\n    tag_67:\n      0x00\n        /* \"#utility.yul\":3724:3817   */\n      tag_143\n        /* \"#utility.yul\":3813:3816   */\n      dup3\n        /* \"#utility.yul\":3804:3810   */\n      dup5\n        /* \"#utility.yul\":3724:3817   */\n      tag_110\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3717:3817   */\n      swap2\n      pop\n        /* \"#utility.yul\":3834:3837   */\n      dup2\n        /* \"#utility.yul\":3827:3837   */\n      swap1\n      pop\n        /* \"#utility.yul\":3706:3843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3849:4071   */\n    tag_38:\n      0x00\n        /* \"#utility.yul\":3980:3982   */\n      0x20\n        /* \"#utility.yul\":3969:3978   */\n      dup3\n        /* \"#utility.yul\":3965:3983   */\n      add\n        /* \"#utility.yul\":3957:3983   */\n      swap1\n      pop\n        /* \"#utility.yul\":3993:4064   */\n      tag_145\n        /* \"#utility.yul\":4061:4062   */\n      0x00\n        /* \"#utility.yul\":4050:4059   */\n      dup4\n        /* \"#utility.yul\":4046:4063   */\n      add\n        /* \"#utility.yul\":4037:4043   */\n      dup5\n        /* \"#utility.yul\":3993:4064   */\n      tag_106\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3947:4071   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4077:4390   */\n    tag_79:\n      0x00\n        /* \"#utility.yul\":4228:4230   */\n      0x20\n        /* \"#utility.yul\":4217:4226   */\n      dup3\n        /* \"#utility.yul\":4213:4231   */\n      add\n        /* \"#utility.yul\":4205:4231   */\n      swap1\n      pop\n        /* \"#utility.yul\":4277:4286   */\n      dup2\n        /* \"#utility.yul\":4271:4275   */\n      dup2\n        /* \"#utility.yul\":4267:4287   */\n      sub\n        /* \"#utility.yul\":4263:4264   */\n      0x00\n        /* \"#utility.yul\":4252:4261   */\n      dup4\n        /* \"#utility.yul\":4248:4265   */\n      add\n        /* \"#utility.yul\":4241:4288   */\n      mstore\n        /* \"#utility.yul\":4305:4383   */\n      tag_147\n        /* \"#utility.yul\":4378:4382   */\n      dup2\n        /* \"#utility.yul\":4369:4375   */\n      dup5\n        /* \"#utility.yul\":4305:4383   */\n      tag_118\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4297:4383   */\n      swap1\n      pop\n        /* \"#utility.yul\":4195:4390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4396:4815   */\n    tag_42:\n      0x00\n        /* \"#utility.yul\":4600:4602   */\n      0x20\n        /* \"#utility.yul\":4589:4598   */\n      dup3\n        /* \"#utility.yul\":4585:4603   */\n      add\n        /* \"#utility.yul\":4577:4603   */\n      swap1\n      pop\n        /* \"#utility.yul\":4649:4658   */\n      dup2\n        /* \"#utility.yul\":4643:4647   */\n      dup2\n        /* \"#utility.yul\":4639:4659   */\n      sub\n        /* \"#utility.yul\":4635:4636   */\n      0x00\n        /* \"#utility.yul\":4624:4633   */\n      dup4\n        /* \"#utility.yul\":4620:4637   */\n      add\n        /* \"#utility.yul\":4613:4660   */\n      mstore\n        /* \"#utility.yul\":4677:4808   */\n      tag_149\n        /* \"#utility.yul\":4803:4807   */\n      dup2\n        /* \"#utility.yul\":4677:4808   */\n      tag_127\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4669:4808   */\n      swap1\n      pop\n        /* \"#utility.yul\":4567:4815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4821:5240   */\n    tag_53:\n      0x00\n        /* \"#utility.yul\":5025:5027   */\n      0x20\n        /* \"#utility.yul\":5014:5023   */\n      dup3\n        /* \"#utility.yul\":5010:5028   */\n      add\n        /* \"#utility.yul\":5002:5028   */\n      swap1\n      pop\n        /* \"#utility.yul\":5074:5083   */\n      dup2\n        /* \"#utility.yul\":5068:5072   */\n      dup2\n        /* \"#utility.yul\":5064:5084   */\n      sub\n        /* \"#utility.yul\":5060:5061   */\n      0x00\n        /* \"#utility.yul\":5049:5058   */\n      dup4\n        /* \"#utility.yul\":5045:5062   */\n      add\n        /* \"#utility.yul\":5038:5085   */\n      mstore\n        /* \"#utility.yul\":5102:5233   */\n      tag_151\n        /* \"#utility.yul\":5228:5232   */\n      dup2\n        /* \"#utility.yul\":5102:5233   */\n      tag_132\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5094:5233   */\n      swap1\n      pop\n        /* \"#utility.yul\":4992:5240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5246:5665   */\n    tag_65:\n      0x00\n        /* \"#utility.yul\":5450:5452   */\n      0x20\n        /* \"#utility.yul\":5439:5448   */\n      dup3\n        /* \"#utility.yul\":5435:5453   */\n      add\n        /* \"#utility.yul\":5427:5453   */\n      swap1\n      pop\n        /* \"#utility.yul\":5499:5508   */\n      dup2\n        /* \"#utility.yul\":5493:5497   */\n      dup2\n        /* \"#utility.yul\":5489:5509   */\n      sub\n        /* \"#utility.yul\":5485:5486   */\n      0x00\n        /* \"#utility.yul\":5474:5483   */\n      dup4\n        /* \"#utility.yul\":5470:5487   */\n      add\n        /* \"#utility.yul\":5463:5510   */\n      mstore\n        /* \"#utility.yul\":5527:5658   */\n      tag_153\n        /* \"#utility.yul\":5653:5657   */\n      dup2\n        /* \"#utility.yul\":5527:5658   */\n      tag_137\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5519:5658   */\n      swap1\n      pop\n        /* \"#utility.yul\":5417:5665   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5671:5800   */\n    tag_86:\n      0x00\n        /* \"#utility.yul\":5732:5752   */\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5722:5752   */\n      swap1\n      pop\n        /* \"#utility.yul\":5761:5794   */\n      tag_157\n        /* \"#utility.yul\":5789:5793   */\n      dup3\n        /* \"#utility.yul\":5781:5787   */\n      dup3\n        /* \"#utility.yul\":5761:5794   */\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5712:5800   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5806:5881   */\n    tag_156:\n      0x00\n        /* \"#utility.yul\":5872:5874   */\n      0x40\n        /* \"#utility.yul\":5866:5875   */\n      mload\n        /* \"#utility.yul\":5856:5875   */\n      swap1\n      pop\n        /* \"#utility.yul\":5846:5881   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5887:6194   */\n    tag_85:\n      0x00\n        /* \"#utility.yul\":6038:6056   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6030:6036   */\n      dup3\n        /* \"#utility.yul\":6027:6057   */\n      gt\n        /* \"#utility.yul\":6024:6026   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":6060:6078   */\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":6024:6026   */\n    tag_161:\n        /* \"#utility.yul\":6098:6127   */\n      tag_164\n        /* \"#utility.yul\":6120:6126   */\n      dup3\n        /* \"#utility.yul\":6098:6127   */\n      tag_126\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6090:6127   */\n      swap1\n      pop\n        /* \"#utility.yul\":6182:6186   */\n      0x20\n        /* \"#utility.yul\":6176:6180   */\n      dup2\n        /* \"#utility.yul\":6172:6187   */\n      add\n        /* \"#utility.yul\":6164:6187   */\n      swap1\n      pop\n        /* \"#utility.yul\":5953:6194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6200:6298   */\n    tag_113:\n      0x00\n        /* \"#utility.yul\":6285:6290   */\n      dup2\n        /* \"#utility.yul\":6279:6291   */\n      mload\n        /* \"#utility.yul\":6269:6291   */\n      swap1\n      pop\n        /* \"#utility.yul\":6258:6298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6304:6403   */\n    tag_121:\n      0x00\n        /* \"#utility.yul\":6390:6395   */\n      dup2\n        /* \"#utility.yul\":6384:6396   */\n      mload\n        /* \"#utility.yul\":6374:6396   */\n      swap1\n      pop\n        /* \"#utility.yul\":6363:6403   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6409:6556   */\n    tag_115:\n      0x00\n        /* \"#utility.yul\":6547:6550   */\n      dup2\n        /* \"#utility.yul\":6532:6550   */\n      swap1\n      pop\n        /* \"#utility.yul\":6522:6556   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6731   */\n    tag_123:\n      0x00\n        /* \"#utility.yul\":6680:6686   */\n      dup3\n        /* \"#utility.yul\":6675:6678   */\n      dup3\n        /* \"#utility.yul\":6668:6687   */\n      mstore\n        /* \"#utility.yul\":6720:6724   */\n      0x20\n        /* \"#utility.yul\":6715:6718   */\n      dup3\n        /* \"#utility.yul\":6711:6725   */\n      add\n        /* \"#utility.yul\":6696:6725   */\n      swap1\n      pop\n        /* \"#utility.yul\":6658:6731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6737:6833   */\n    tag_109:\n      0x00\n        /* \"#utility.yul\":6803:6827   */\n      tag_170\n        /* \"#utility.yul\":6821:6826   */\n      dup3\n        /* \"#utility.yul\":6803:6827   */\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6792:6827   */\n      swap1\n      pop\n        /* \"#utility.yul\":6782:6833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6839:6965   */\n    tag_171:\n      0x00\n        /* \"#utility.yul\":6916:6958   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6909:6914   */\n      dup3\n        /* \"#utility.yul\":6905:6959   */\n      and\n        /* \"#utility.yul\":6894:6959   */\n      swap1\n      pop\n        /* \"#utility.yul\":6884:6965   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6971:7125   */\n    tag_89:\n        /* \"#utility.yul\":7055:7061   */\n      dup3\n        /* \"#utility.yul\":7050:7053   */\n      dup2\n        /* \"#utility.yul\":7045:7048   */\n      dup4\n        /* \"#utility.yul\":7032:7062   */\n      calldatacopy\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7108:7114   */\n      dup4\n        /* \"#utility.yul\":7103:7106   */\n      dup4\n        /* \"#utility.yul\":7099:7115   */\n      add\n        /* \"#utility.yul\":7092:7119   */\n      mstore\n        /* \"#utility.yul\":7022:7125   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7438   */\n    tag_117:\n        /* \"#utility.yul\":7199:7200   */\n      0x00\n        /* \"#utility.yul\":7209:7322   */\n    tag_175:\n        /* \"#utility.yul\":7223:7229   */\n      dup4\n        /* \"#utility.yul\":7220:7221   */\n      dup2\n        /* \"#utility.yul\":7217:7230   */\n      lt\n        /* \"#utility.yul\":7209:7322   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":7308:7309   */\n      dup1\n        /* \"#utility.yul\":7303:7306   */\n      dup3\n        /* \"#utility.yul\":7299:7310   */\n      add\n        /* \"#utility.yul\":7293:7311   */\n      mload\n        /* \"#utility.yul\":7289:7290   */\n      dup2\n        /* \"#utility.yul\":7284:7287   */\n      dup5\n        /* \"#utility.yul\":7280:7291   */\n      add\n        /* \"#utility.yul\":7273:7312   */\n      mstore\n        /* \"#utility.yul\":7245:7247   */\n      0x20\n        /* \"#utility.yul\":7242:7243   */\n      dup2\n        /* \"#utility.yul\":7238:7248   */\n      add\n        /* \"#utility.yul\":7233:7248   */\n      swap1\n      pop\n        /* \"#utility.yul\":7209:7322   */\n      jump(tag_175)\n    tag_177:\n        /* \"#utility.yul\":7340:7346   */\n      dup4\n        /* \"#utility.yul\":7337:7338   */\n      dup2\n        /* \"#utility.yul\":7334:7347   */\n      gt\n        /* \"#utility.yul\":7331:7333   */\n      iszero\n      tag_178\n      jumpi\n        /* \"#utility.yul\":7420:7421   */\n      0x00\n        /* \"#utility.yul\":7411:7417   */\n      dup5\n        /* \"#utility.yul\":7406:7409   */\n      dup5\n        /* \"#utility.yul\":7402:7418   */\n      add\n        /* \"#utility.yul\":7395:7422   */\n      mstore\n        /* \"#utility.yul\":7331:7333   */\n    tag_178:\n        /* \"#utility.yul\":7180:7438   */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7444:7725   */\n    tag_158:\n        /* \"#utility.yul\":7527:7554   */\n      tag_180\n        /* \"#utility.yul\":7549:7553   */\n      dup3\n        /* \"#utility.yul\":7527:7554   */\n      tag_126\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7519:7525   */\n      dup2\n        /* \"#utility.yul\":7515:7555   */\n      add\n        /* \"#utility.yul\":7657:7663   */\n      dup2\n        /* \"#utility.yul\":7645:7655   */\n      dup2\n        /* \"#utility.yul\":7642:7664   */\n      lt\n        /* \"#utility.yul\":7621:7639   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7609:7619   */\n      dup3\n        /* \"#utility.yul\":7606:7640   */\n      gt\n        /* \"#utility.yul\":7603:7665   */\n      or\n        /* \"#utility.yul\":7600:7602   */\n      iszero\n      tag_181\n      jumpi\n        /* \"#utility.yul\":7668:7686   */\n      tag_182\n      tag_163\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":7600:7602   */\n    tag_181:\n        /* \"#utility.yul\":7708:7718   */\n      dup1\n        /* \"#utility.yul\":7704:7706   */\n      0x40\n        /* \"#utility.yul\":7697:7719   */\n      mstore\n        /* \"#utility.yul\":7487:7725   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7731:7911   */\n    tag_163:\n        /* \"#utility.yul\":7779:7856   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7776:7777   */\n      0x00\n        /* \"#utility.yul\":7769:7857   */\n      mstore\n        /* \"#utility.yul\":7876:7880   */\n      0x41\n        /* \"#utility.yul\":7873:7874   */\n      0x04\n        /* \"#utility.yul\":7866:7881   */\n      mstore\n        /* \"#utility.yul\":7900:7904   */\n      0x24\n        /* \"#utility.yul\":7897:7898   */\n      0x00\n        /* \"#utility.yul\":7890:7905   */\n      revert\n        /* \"#utility.yul\":7917:8019   */\n    tag_126:\n      0x00\n        /* \"#utility.yul\":8009:8011   */\n      0x1f\n        /* \"#utility.yul\":8005:8012   */\n      not\n        /* \"#utility.yul\":8000:8002   */\n      0x1f\n        /* \"#utility.yul\":7993:7998   */\n      dup4\n        /* \"#utility.yul\":7989:8003   */\n      add\n        /* \"#utility.yul\":7985:8013   */\n      and\n        /* \"#utility.yul\":7975:8013   */\n      swap1\n      pop\n        /* \"#utility.yul\":7965:8019   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8025:8259   */\n    tag_131:\n        /* \"#utility.yul\":8165:8199   */\n      0x45524331393637557067726164653a207570677261646520627265616b732066\n        /* \"#utility.yul\":8161:8162   */\n      0x00\n        /* \"#utility.yul\":8153:8159   */\n      dup3\n        /* \"#utility.yul\":8149:8163   */\n      add\n        /* \"#utility.yul\":8142:8200   */\n      mstore\n        /* \"#utility.yul\":8234:8251   */\n      0x7572746865722075706772616465730000000000000000000000000000000000\n        /* \"#utility.yul\":8229:8231   */\n      0x20\n        /* \"#utility.yul\":8221:8227   */\n      dup3\n        /* \"#utility.yul\":8217:8232   */\n      add\n        /* \"#utility.yul\":8210:8252   */\n      mstore\n        /* \"#utility.yul\":8131:8259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8265:8497   */\n    tag_136:\n        /* \"#utility.yul\":8405:8439   */\n      0x455243313936373a206e657720696d706c656d656e746174696f6e206973206e\n        /* \"#utility.yul\":8401:8402   */\n      0x00\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8389:8403   */\n      add\n        /* \"#utility.yul\":8382:8440   */\n      mstore\n        /* \"#utility.yul\":8474:8489   */\n      0x6f74206120636f6e747261637400000000000000000000000000000000000000\n        /* \"#utility.yul\":8469:8471   */\n      0x20\n        /* \"#utility.yul\":8461:8467   */\n      dup3\n        /* \"#utility.yul\":8457:8472   */\n      add\n        /* \"#utility.yul\":8450:8490   */\n      mstore\n        /* \"#utility.yul\":8371:8497   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8503:8728   */\n    tag_141:\n        /* \"#utility.yul\":8643:8677   */\n      0x416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f\n        /* \"#utility.yul\":8639:8640   */\n      0x00\n        /* \"#utility.yul\":8631:8637   */\n      dup3\n        /* \"#utility.yul\":8627:8641   */\n      add\n        /* \"#utility.yul\":8620:8678   */\n      mstore\n        /* \"#utility.yul\":8712:8720   */\n      0x6e74726163740000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8707:8709   */\n      0x20\n        /* \"#utility.yul\":8699:8705   */\n      dup3\n        /* \"#utility.yul\":8695:8710   */\n      add\n        /* \"#utility.yul\":8688:8721   */\n      mstore\n        /* \"#utility.yul\":8609:8728   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8734:8856   */\n    tag_93:\n        /* \"#utility.yul\":8807:8831   */\n      tag_189\n        /* \"#utility.yul\":8825:8830   */\n      dup2\n        /* \"#utility.yul\":8807:8831   */\n      tag_109\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8800:8805   */\n      dup2\n        /* \"#utility.yul\":8797:8832   */\n      eq\n        /* \"#utility.yul\":8787:8789   */\n      tag_190\n      jumpi\n        /* \"#utility.yul\":8846:8847   */\n      0x00\n        /* \"#utility.yul\":8843:8844   */\n      dup1\n        /* \"#utility.yul\":8836:8848   */\n      revert\n        /* \"#utility.yul\":8787:8789   */\n    tag_190:\n        /* \"#utility.yul\":8777:8856   */\n      pop\n      jump\t// out\n    stop\n    data_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398 416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564\n\n    auxdata: 0xa264697066735822122019728132291df2c614bd41ce8ecf8c8e1397545154be29b146e9296d725d2b0064736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610acc806100206000396000f3fe6080604052600436106100295760003560e01c80633659cfe61461002e5780634f1ef28614610057575b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906105eb565b610073565b005b610071600480360381019061006c9190610614565b61009a565b005b61007c816100b3565b610097816040518060200160405280600081525060006100bf565b50565b6100a3826100b3565b6100af828260016100bf565b5050565b6100bc816102d3565b50565b60006100c96102d6565b90506100d48461032d565b6000835111806100e15750815b156100f2576100f084846103e6565b505b60006101207f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b610413565b90508060000160009054906101000a900460ff166102cc5760018160000160006101000a81548160ff0219169083151502179055506101ec858360405160240161016a9190610761565b6040516020818303038152906040527f3659cfe6000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103e6565b5060008160000160006101000a81548160ff0219169083151502179055506102126102d6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061079e565b60405180910390fd5b6102888561032d565b8473ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25b5050505050565b50565b60006103047f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61041d565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61033681610427565b610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c906107be565b60405180910390fd5b806103a27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61041d565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061040b8383604051806060016040528060278152602001610a706027913961043a565b905092915050565b6000819050919050565b6000819050919050565b600080823b905060008111915050919050565b606061044584610427565b610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906107de565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516104ac919061074a565b600060405180830381855af49150503d80600081146104e7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ec565b606091505b50915091506104fc828286610507565b925050509392505050565b6060831561051757829050610567565b60008351111561052a5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e919061077c565b60405180910390fd5b9392505050565b600061058161057c84610823565b6107fe565b90508281526020810184848401111561059957600080fd5b6105a48482856108b8565b509392505050565b6000813590506105bb81610a58565b92915050565b600082601f8301126105d257600080fd5b81356105e284826020860161056e565b91505092915050565b6000602082840312156105fd57600080fd5b600061060b848285016105ac565b91505092915050565b6000806040838503121561062757600080fd5b6000610635858286016105ac565b925050602083013567ffffffffffffffff81111561065257600080fd5b61065e858286016105c1565b9150509250929050565b61067181610886565b82525050565b600061068282610854565b61068c818561086a565b935061069c8185602086016108c7565b80840191505092915050565b60006106b38261085f565b6106bd8185610875565b93506106cd8185602086016108c7565b6106d68161095a565b840191505092915050565b60006106ee602f83610875565b91506106f98261096b565b604082019050919050565b6000610711602d83610875565b915061071c826109ba565b604082019050919050565b6000610734602683610875565b915061073f82610a09565b604082019050919050565b60006107568284610677565b915081905092915050565b60006020820190506107766000830184610668565b92915050565b6000602082019050818103600083015261079681846106a8565b905092915050565b600060208201905081810360008301526107b7816106e1565b9050919050565b600060208201905081810360008301526107d781610704565b9050919050565b600060208201905081810360008301526107f781610727565b9050919050565b6000610808610819565b905061081482826108fa565b919050565b6000604051905090565b600067ffffffffffffffff82111561083e5761083d61092b565b5b6108478261095a565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061089182610898565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156108e55780820151818401526020810190506108ca565b838111156108f4576000848401525b50505050565b6109038261095a565b810181811067ffffffffffffffff821117156109225761092161092b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524331393637557067726164653a207570677261646520627265616b73206660008201527f7572746865722075706772616465730000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b610a6181610886565b8114610a6c57600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122019728132291df2c614bd41ce8ecf8c8e1397545154be29b146e9296d725d2b0064736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xACC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C DUP2 PUSH2 0xB3 JUMP JUMPDEST PUSH2 0x97 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xBF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA3 DUP3 PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xAF DUP3 DUP3 PUSH1 0x1 PUSH2 0xBF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBC DUP2 PUSH2 0x2D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP PUSH2 0xD4 DUP5 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0xE1 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0xF2 JUMPI PUSH2 0xF0 DUP5 DUP5 PUSH2 0x3E6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x120 PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x413 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CC JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EC DUP6 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3E6 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x212 PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x288 DUP6 PUSH2 0x32D JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x336 DUP2 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x3A2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x40B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA70 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x43A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x445 DUP5 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4FC DUP3 DUP3 DUP7 PUSH2 0x507 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x517 JUMPI DUP3 SWAP1 POP PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x52A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 PUSH2 0x57C DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A4 DUP5 DUP3 DUP6 PUSH2 0x8B8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BB DUP2 PUSH2 0xA58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x56E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x60B DUP5 DUP3 DUP6 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x635 DUP6 DUP3 DUP7 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65E DUP6 DUP3 DUP7 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x671 DUP2 PUSH2 0x886 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP3 PUSH2 0x854 JUMP JUMPDEST PUSH2 0x68C DUP2 DUP6 PUSH2 0x86A JUMP JUMPDEST SWAP4 POP PUSH2 0x69C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8C7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x6BD DUP2 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP4 POP PUSH2 0x6CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x6D6 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EE PUSH1 0x2F DUP4 PUSH2 0x875 JUMP JUMPDEST SWAP2 POP PUSH2 0x6F9 DUP3 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 PUSH1 0x2D DUP4 PUSH2 0x875 JUMP JUMPDEST SWAP2 POP PUSH2 0x71C DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 PUSH1 0x26 DUP4 PUSH2 0x875 JUMP JUMPDEST SWAP2 POP PUSH2 0x73F DUP3 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x756 DUP3 DUP5 PUSH2 0x677 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x668 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x796 DUP2 DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B7 DUP2 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D7 DUP2 PUSH2 0x704 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7F7 DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP PUSH2 0x814 DUP3 DUP3 PUSH2 0x8FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH2 0x847 DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x891 DUP3 PUSH2 0x898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8CA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x903 DUP3 PUSH2 0x95A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x922 JUMPI PUSH2 0x921 PUSH2 0x92B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A207570677261646520627265616B732066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7572746865722075706772616465730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA61 DUP2 PUSH2 0x886 JUMP JUMPDEST DUP2 EQ PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220197281 ORIGIN 0x29 SAR CALLCODE 0xC6 EQ 0xBD COINBASE 0xCE DUP15 0xCF DUP13 DUP15 SGT SWAP8 SLOAD MLOAD SLOAD 0xBE 0x29 0xB1 CHAINID 0xE9 0x29 PUSH14 0x725D2B0064736F6C634300080200 CALLER ",
							"sourceMap": "343:126:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8859:6",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:260:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "287:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "290:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "280:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:6"
															},
															"nodeType": "YulIf",
															"src": "249:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "327:3:6"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "332:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "337:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "303:23:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:41:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:6",
														"type": ""
													}
												],
												"src": "7:343:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "408:87:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "418:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "440:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "427:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "427:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "418:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "483:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "456:26:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "456:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "456:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "386:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "394:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "402:5:6",
														"type": ""
													}
												],
												"src": "356:139:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:210:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "624:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "633:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "636:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "626:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "626:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "626:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "603:6:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "611:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "599:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "599:17:6"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "618:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "595:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "595:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "588:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "588:35:6"
															},
															"nodeType": "YulIf",
															"src": "585:2:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "649:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "676:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "663:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "663:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "653:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "692:87:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "752:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "760:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "748:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "748:17:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "767:6:6"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "775:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "701:46:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "701:78:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "692:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "553:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "561:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "569:5:6",
														"type": ""
													}
												],
												"src": "514:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "857:196:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "905:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "905:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "878:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "887:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "874:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "874:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "899:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "870:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:32:6"
															},
															"nodeType": "YulIf",
															"src": "867:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "929:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "948:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "973:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "827:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "838:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "850:6:6",
														"type": ""
													}
												],
												"src": "791:262:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:426:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1197:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1206:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1209:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1199:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1199:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1199:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1172:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1181:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1168:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1168:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1193:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1164:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:32:6"
															},
															"nodeType": "YulIf",
															"src": "1161:2:6"
														},
														{
															"nodeType": "YulBlock",
															"src": "1223:117:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1238:15:6",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1252:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1242:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1267:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1302:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1313:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1298:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1298:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1322:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1277:20:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1277:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1267:6:6"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1350:220:6",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1365:46:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1396:9:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1407:2:6",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1392:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1392:18:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1379:12:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1379:32:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1369:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1458:16:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1467:1:6",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1470:1:6",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "1460:6:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1460:12:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1460:12:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1430:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1438:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1427:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1427:30:6"
																	},
																	"nodeType": "YulIf",
																	"src": "1424:2:6"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1488:72:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1532:9:6"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1543:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1528:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1528:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1552:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1498:29:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1498:62:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1488:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1113:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1124:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1136:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1144:6:6",
														"type": ""
													}
												],
												"src": "1059:518:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1648:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1665:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1670:17:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1670:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1658:37:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1658:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1636:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1643:3:6",
														"type": ""
													}
												],
												"src": "1583:118:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:265:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1825:52:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1871:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1839:31:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:38:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1829:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1886:95:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1969:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1974:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1893:75:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1893:88:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1886:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2016:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2023:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2012:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2030:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2035:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1990:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1990:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2051:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2062:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2067:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2058:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2058:16:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2051:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1796:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1803:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1811:3:6",
														"type": ""
													}
												],
												"src": "1707:373:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:272:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2188:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2235:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2202:32:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2202:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2192:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2250:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2316:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2321:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2257:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2257:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2250:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2363:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2370:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2359:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2359:16:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2377:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2382:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2337:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2337:52:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2337:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2398:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2409:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2436:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2414:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2414:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2405:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2405:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2398:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2159:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2166:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2174:3:6",
														"type": ""
													}
												],
												"src": "2086:364:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2602:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2612:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2678:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2683:2:6",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2619:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2619:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2612:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2784:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																	"nodeType": "YulIdentifier",
																	"src": "2695:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2797:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2808:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2813:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2797:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2590:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2598:3:6",
														"type": ""
													}
												],
												"src": "2456:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2974:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2984:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3050:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3055:2:6",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2991:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2991:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2984:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3156:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																	"nodeType": "YulIdentifier",
																	"src": "3067:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3067:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3067:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3169:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3180:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3185:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3176:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3176:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3169:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2962:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2970:3:6",
														"type": ""
													}
												],
												"src": "2828:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3346:220:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3356:74:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3422:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3427:2:6",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3363:58:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3363:67:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3356:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3528:3:6"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																	"nodeType": "YulIdentifier",
																	"src": "3439:88:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3439:93:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3439:93:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3541:19:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3552:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3548:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3548:12:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3334:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3342:3:6",
														"type": ""
													}
												],
												"src": "3200:366:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3706:137:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3717:100:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3804:6:6"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3813:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3724:79:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3724:93:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3717:3:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3827:10:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3834:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3827:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3685:3:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3691:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3702:3:6",
														"type": ""
													}
												],
												"src": "3572:271:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3947:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3957:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3969:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3980:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3965:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3965:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3957:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4037:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4050:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4061:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4046:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4046:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3993:43:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3993:71:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3993:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3919:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3931:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3942:4:6",
														"type": ""
													}
												],
												"src": "3849:222:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4195:195:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4205:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4217:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4228:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4213:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4213:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4205:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4252:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4263:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4248:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4248:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4271:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4277:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4267:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4267:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4241:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4241:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4241:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4297:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4369:6:6"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4378:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4305:63:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4305:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4297:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4167:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4179:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4190:4:6",
														"type": ""
													}
												],
												"src": "4077:313:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4567:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4577:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4589:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4600:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4585:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4585:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4577:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4624:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4635:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4620:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4620:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4643:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4649:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4639:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4639:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4613:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4613:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4803:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4677:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4677:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4669:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4547:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4562:4:6",
														"type": ""
													}
												],
												"src": "4396:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4992:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5002:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5014:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5025:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5002:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5049:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5060:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5045:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5045:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5068:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5074:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5064:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5064:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5038:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5038:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5094:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5228:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5102:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5102:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5094:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4972:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4987:4:6",
														"type": ""
													}
												],
												"src": "4821:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5417:248:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5427:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5439:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5450:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5435:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5427:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5474:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5485:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5470:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5470:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5493:4:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5499:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5489:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5489:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5463:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5463:47:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5463:47:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5519:139:6",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5653:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5527:124:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5527:131:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5519:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5397:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5412:4:6",
														"type": ""
													}
												],
												"src": "5246:419:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5712:88:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5722:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "5732:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5732:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5722:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5781:6:6"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5789:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5761:19:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5696:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5705:6:6",
														"type": ""
													}
												],
												"src": "5671:129:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5846:35:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5856:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5872:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5866:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5856:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5839:6:6",
														"type": ""
													}
												],
												"src": "5806:75:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5953:241:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6058:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6060:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6060:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6060:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6030:6:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6038:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6027:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:30:6"
															},
															"nodeType": "YulIf",
															"src": "6024:2:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6090:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6120:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6098:21:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6098:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6090:4:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6164:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6176:4:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6182:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6172:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6172:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6164:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5937:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5948:4:6",
														"type": ""
													}
												],
												"src": "5887:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6258:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6269:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6285:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6279:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6279:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6269:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6251:6:6",
														"type": ""
													}
												],
												"src": "6200:98:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6363:40:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6374:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6390:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6384:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6384:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "6374:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6346:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6356:6:6",
														"type": ""
													}
												],
												"src": "6304:99:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6522:34:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6532:18:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6547:3:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6532:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6494:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6499:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6510:11:6",
														"type": ""
													}
												],
												"src": "6409:147:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6658:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6675:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:19:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6668:19:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6696:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6715:3:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6711:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6696:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6630:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6635:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6646:11:6",
														"type": ""
													}
												],
												"src": "6562:169:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6782:51:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6792:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6821:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6803:17:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6803:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6792:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6764:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6774:7:6",
														"type": ""
													}
												],
												"src": "6737:96:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6884:81:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6894:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6909:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6916:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "6905:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6894:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6866:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6876:7:6",
														"type": ""
													}
												],
												"src": "6839:126:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7022:103:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7045:3:6"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7050:3:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7055:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7032:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7032:30:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7032:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7103:3:6"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7108:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7099:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7099:16:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7117:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7092:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7092:27:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7092:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7004:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7009:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7014:6:6",
														"type": ""
													}
												],
												"src": "6971:154:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7180:258:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7190:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7199:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7194:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7259:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7284:3:6"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7289:1:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7280:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7280:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7303:3:6"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7308:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7299:3:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7299:11:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7293:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7293:18:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7273:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7273:39:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7273:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7220:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7223:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7217:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7217:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7231:19:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7233:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7242:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7245:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7238:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7238:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7233:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7213:3:6",
																"statements": []
															},
															"src": "7209:113:6"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7356:76:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7406:3:6"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "7411:6:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7402:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7402:16:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7420:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7395:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7395:27:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7395:27:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7337:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7340:6:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7334:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7334:13:6"
															},
															"nodeType": "YulIf",
															"src": "7331:2:6"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7162:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7167:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7172:6:6",
														"type": ""
													}
												],
												"src": "7131:307:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7487:238:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7497:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7519:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7549:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7527:21:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7527:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7515:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7501:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7666:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7668:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7668:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7668:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7609:10:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7621:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7606:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7606:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7645:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7657:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7642:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7603:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7603:62:6"
															},
															"nodeType": "YulIf",
															"src": "7600:2:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7704:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7708:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7697:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7697:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7697:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7473:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7481:4:6",
														"type": ""
													}
												],
												"src": "7444:281:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7759:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7776:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7779:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7769:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7769:88:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7769:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7873:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7876:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7897:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7900:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7890:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7890:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7890:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7731:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7965:54:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7975:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7993:5:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8000:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7989:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7989:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8009:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8005:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8005:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7985:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "7985:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7975:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7948:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7958:6:6",
														"type": ""
													}
												],
												"src": "7917:102:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8131:128:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8153:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8161:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8149:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8149:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8165:34:6",
																		"type": "",
																		"value": "ERC1967Upgrade: upgrade breaks f"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8142:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8142:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8142:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8221:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8229:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8217:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8217:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8234:17:6",
																		"type": "",
																		"value": "urther upgrades"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8210:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8210:42:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8210:42:6"
														}
													]
												},
												"name": "store_literal_in_memory_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8123:6:6",
														"type": ""
													}
												],
												"src": "8025:234:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8371:126:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8401:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8389:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8405:34:6",
																		"type": "",
																		"value": "ERC1967: new implementation is n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8382:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8382:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8382:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8461:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8469:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8457:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8457:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8474:15:6",
																		"type": "",
																		"value": "ot a contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8450:40:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8450:40:6"
														}
													]
												},
												"name": "store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8363:6:6",
														"type": ""
													}
												],
												"src": "8265:232:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8609:119:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8631:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8639:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8627:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8627:14:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8643:34:6",
																		"type": "",
																		"value": "Address: delegate call to non-co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8620:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8620:58:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8620:58:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8699:6:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8707:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8695:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8695:15:6"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8712:8:6",
																		"type": "",
																		"value": "ntract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8688:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8688:33:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8688:33:6"
														}
													]
												},
												"name": "store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8601:6:6",
														"type": ""
													}
												],
												"src": "8503:225:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8777:79:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8834:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8843:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8846:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8836:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8836:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8836:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8800:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8825:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8807:17:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8807:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8797:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8797:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8790:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "8790:43:6"
															},
															"nodeType": "YulIf",
															"src": "8787:2:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8770:5:6",
														"type": ""
													}
												],
												"src": "8734:122:6"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967Upgrade: upgrade breaks f\")\n\n        mstore(add(memPtr, 32), \"urther upgrades\")\n\n    }\n\n    function store_literal_in_memory_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1967: new implementation is n\")\n\n        mstore(add(memPtr, 32), \"ot a contract\")\n\n    }\n\n    function store_literal_in_memory_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: delegate call to non-co\")\n\n        mstore(add(memPtr, 32), \"ntract\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c80633659cfe61461002e5780634f1ef28614610057575b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906105eb565b610073565b005b610071600480360381019061006c9190610614565b61009a565b005b61007c816100b3565b610097816040518060200160405280600081525060006100bf565b50565b6100a3826100b3565b6100af828260016100bf565b5050565b6100bc816102d3565b50565b60006100c96102d6565b90506100d48461032d565b6000835111806100e15750815b156100f2576100f084846103e6565b505b60006101207f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd914360001b610413565b90508060000160009054906101000a900460ff166102cc5760018160000160006101000a81548160ff0219169083151502179055506101ec858360405160240161016a9190610761565b6040516020818303038152906040527f3659cfe6000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103e6565b5060008160000160006101000a81548160ff0219169083151502179055506102126102d6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161461027f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102769061079e565b60405180910390fd5b6102888561032d565b8473ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25b5050505050565b50565b60006103047f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61041d565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61033681610427565b610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c906107be565b60405180910390fd5b806103a27f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc60001b61041d565b60000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606061040b8383604051806060016040528060278152602001610a706027913961043a565b905092915050565b6000819050919050565b6000819050919050565b600080823b905060008111915050919050565b606061044584610427565b610484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047b906107de565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff16856040516104ac919061074a565b600060405180830381855af49150503d80600081146104e7576040519150601f19603f3d011682016040523d82523d6000602084013e6104ec565b606091505b50915091506104fc828286610507565b925050509392505050565b6060831561051757829050610567565b60008351111561052a5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e919061077c565b60405180910390fd5b9392505050565b600061058161057c84610823565b6107fe565b90508281526020810184848401111561059957600080fd5b6105a48482856108b8565b509392505050565b6000813590506105bb81610a58565b92915050565b600082601f8301126105d257600080fd5b81356105e284826020860161056e565b91505092915050565b6000602082840312156105fd57600080fd5b600061060b848285016105ac565b91505092915050565b6000806040838503121561062757600080fd5b6000610635858286016105ac565b925050602083013567ffffffffffffffff81111561065257600080fd5b61065e858286016105c1565b9150509250929050565b61067181610886565b82525050565b600061068282610854565b61068c818561086a565b935061069c8185602086016108c7565b80840191505092915050565b60006106b38261085f565b6106bd8185610875565b93506106cd8185602086016108c7565b6106d68161095a565b840191505092915050565b60006106ee602f83610875565b91506106f98261096b565b604082019050919050565b6000610711602d83610875565b915061071c826109ba565b604082019050919050565b6000610734602683610875565b915061073f82610a09565b604082019050919050565b60006107568284610677565b915081905092915050565b60006020820190506107766000830184610668565b92915050565b6000602082019050818103600083015261079681846106a8565b905092915050565b600060208201905081810360008301526107b7816106e1565b9050919050565b600060208201905081810360008301526107d781610704565b9050919050565b600060208201905081810360008301526107f781610727565b9050919050565b6000610808610819565b905061081482826108fa565b919050565b6000604051905090565b600067ffffffffffffffff82111561083e5761083d61092b565b5b6108478261095a565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600061089182610898565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b838110156108e55780820151818401526020810190506108ca565b838111156108f4576000848401525b50505050565b6109038261095a565b810181811067ffffffffffffffff821117156109225761092161092b565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f45524331393637557067726164653a207570677261646520627265616b73206660008201527f7572746865722075706772616465730000000000000000000000000000000000602082015250565b7f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60008201527f6f74206120636f6e747261637400000000000000000000000000000000000000602082015250565b7f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f60008201527f6e74726163740000000000000000000000000000000000000000000000000000602082015250565b610a6181610886565b8114610a6c57600080fd5b5056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122019728132291df2c614bd41ce8ecf8c8e1397545154be29b146e9296d725d2b0064736f6c63430008020033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x614 JUMP JUMPDEST PUSH2 0x9A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7C DUP2 PUSH2 0xB3 JUMP JUMPDEST PUSH2 0x97 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x0 PUSH2 0xBF JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA3 DUP3 PUSH2 0xB3 JUMP JUMPDEST PUSH2 0xAF DUP3 DUP3 PUSH1 0x1 PUSH2 0xBF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xBC DUP2 PUSH2 0x2D3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC9 PUSH2 0x2D6 JUMP JUMPDEST SWAP1 POP PUSH2 0xD4 DUP5 PUSH2 0x32D JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT DUP1 PUSH2 0xE1 JUMPI POP DUP2 JUMPDEST ISZERO PUSH2 0xF2 JUMPI PUSH2 0xF0 DUP5 DUP5 PUSH2 0x3E6 JUMP JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0x120 PUSH32 0x4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143 PUSH1 0x0 SHL PUSH2 0x413 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2CC JUMPI PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1EC DUP6 DUP4 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x16A SWAP2 SWAP1 PUSH2 0x761 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x3E6 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x212 PUSH2 0x2D6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x27F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x276 SWAP1 PUSH2 0x79E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x288 DUP6 PUSH2 0x32D JUMP JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x336 DUP2 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x3A2 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH1 0x0 SHL PUSH2 0x41D JUMP JUMPDEST PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x40B DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA70 PUSH1 0x27 SWAP2 CODECOPY PUSH2 0x43A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x445 DUP5 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47B SWAP1 PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x4AC SWAP2 SWAP1 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x4E7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x4FC DUP3 DUP3 DUP7 PUSH2 0x507 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x517 JUMPI DUP3 SWAP1 POP PUSH2 0x567 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x52A JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55E SWAP2 SWAP1 PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x581 PUSH2 0x57C DUP5 PUSH2 0x823 JUMP JUMPDEST PUSH2 0x7FE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x599 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5A4 DUP5 DUP3 DUP6 PUSH2 0x8B8 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5BB DUP2 PUSH2 0xA58 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5E2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x56E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x60B DUP5 DUP3 DUP6 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x635 DUP6 DUP3 DUP7 ADD PUSH2 0x5AC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65E DUP6 DUP3 DUP7 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x671 DUP2 PUSH2 0x886 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP3 PUSH2 0x854 JUMP JUMPDEST PUSH2 0x68C DUP2 DUP6 PUSH2 0x86A JUMP JUMPDEST SWAP4 POP PUSH2 0x69C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8C7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B3 DUP3 PUSH2 0x85F JUMP JUMPDEST PUSH2 0x6BD DUP2 DUP6 PUSH2 0x875 JUMP JUMPDEST SWAP4 POP PUSH2 0x6CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x8C7 JUMP JUMPDEST PUSH2 0x6D6 DUP2 PUSH2 0x95A JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EE PUSH1 0x2F DUP4 PUSH2 0x875 JUMP JUMPDEST SWAP2 POP PUSH2 0x6F9 DUP3 PUSH2 0x96B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x711 PUSH1 0x2D DUP4 PUSH2 0x875 JUMP JUMPDEST SWAP2 POP PUSH2 0x71C DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x734 PUSH1 0x26 DUP4 PUSH2 0x875 JUMP JUMPDEST SWAP2 POP PUSH2 0x73F DUP3 PUSH2 0xA09 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x756 DUP3 DUP5 PUSH2 0x677 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x776 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x668 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x796 DUP2 DUP5 PUSH2 0x6A8 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B7 DUP2 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7D7 DUP2 PUSH2 0x704 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7F7 DUP2 PUSH2 0x727 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x808 PUSH2 0x819 JUMP JUMPDEST SWAP1 POP PUSH2 0x814 DUP3 DUP3 PUSH2 0x8FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x83E JUMPI PUSH2 0x83D PUSH2 0x92B JUMP JUMPDEST JUMPDEST PUSH2 0x847 DUP3 PUSH2 0x95A JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x891 DUP3 PUSH2 0x898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8CA JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x903 DUP3 PUSH2 0x95A JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x922 JUMPI PUSH2 0x921 PUSH2 0x92B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524331393637557067726164653A207570677261646520627265616B732066 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7572746865722075706772616465730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E74726163740000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0xA61 DUP2 PUSH2 0x886 JUMP JUMPDEST DUP2 EQ PUSH2 0xA6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID COINBASE PUSH5 0x6472657373 GASPRICE KECCAK256 PUSH13 0x6F772D6C6576656C2064656C65 PUSH8 0x6174652063616C6C KECCAK256 PUSH7 0x61696C6564A264 PUSH10 0x70667358221220197281 ORIGIN 0x29 SAR CALLCODE 0xC6 EQ 0xBD COINBASE 0xCE DUP15 0xCF DUP13 DUP15 SGT SWAP8 SLOAD MLOAD SLOAD 0xBE 0x29 0xB1 CHAINID 0xE9 0x29 PUSH14 0x725D2B0064736F6C634300080200 CALLER ",
							"sourceMap": "343:126:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;574:186:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;766:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;574:186;647:36;665:17;647;:36::i;:::-;693:60;717:17;736:9;;;;;;;;;;;;747:5;693:23;:60::i;:::-;574:186;:::o;766:214::-;873:36;891:17;873;:36::i;:::-;919:54;943:17;962:4;968;919:23;:54::i;:::-;766:214;;:::o;143:122:3:-;225:33;240:17;225:14;:33::i;:::-;143:122;:::o;2513:1314:1:-;2627:25;2655:20;:18;:20::i;:::-;2627:48;;2728:37;2747:17;2728:18;:37::i;:::-;2793:1;2779:4;:11;:15;:28;;;;2798:9;2779:28;2775:112;;;2823:53;2852:17;2871:4;2823:28;:53::i;:::-;;2775:112;2957:47;3007:42;532:66;3034:14;;3007:26;:42::i;:::-;2957:92;;3064:15;:21;;;;;;;;;;;;3059:762;;3201:4;3177:15;:21;;;:28;;;;;;;;;;;;;;;;;;3219:217;3265:17;3387;3300:122;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3219:28;:217::i;:::-;;3474:5;3450:15;:21;;;:29;;;;;;;;;;;;;;;;;;3566:20;:18;:20::i;:::-;3545:41;;:17;:41;;;3537:101;;;;;;;;;;;;:::i;:::-;;;;;;;;;3727:37;3746:17;3727:18;:37::i;:::-;3792:17;3783:27;;;;;;;;;;;;3059:762;2513:1314;;;;;:::o;388:79:3:-;;:::o;1144:140:1:-;1197:7;1223:48;873:66;1250:20;;1223:26;:48::i;:::-;:54;;;;;;;;;;;;1216:61;;1144:140;:::o;1375:259::-;1456:37;1475:17;1456:18;:37::i;:::-;1448:95;;;;;;;;;;;;:::i;:::-;;;;;;;;;1610:17;1553:48;873:66;1580:20;;1553:26;:48::i;:::-;:54;;;:74;;;;;;;;;;;;;;;;;;1375:259;:::o;6276:198:0:-;6359:12;6390:77;6411:6;6419:4;6390:77;;;;;;;;;;;;;;;;;:20;:77::i;:::-;6383:84;;6276:198;;;;:::o;1787:147:4:-;1848:21;1914:4;1904:14;;1890:38;;;:::o;1542:147::-;1603:21;1669:4;1659:14;;1645:38;;;:::o;718:413:0:-;778:4;981:12;1090:7;1078:20;1070:28;;1123:1;1116:4;:8;1109:15;;;718:413;;;:::o;6660:417::-;6771:12;6803:18;6814:6;6803:10;:18::i;:::-;6795:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6935:12;6949:23;6976:6;:19;;6996:4;6976:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6934:67;;;;7018:52;7036:7;7045:10;7057:12;7018:17;:52::i;:::-;7011:59;;;;6660:417;;;;;:::o;7083:725::-;7198:12;7226:7;7222:580;;;7256:10;7249:17;;;;7222:580;7387:1;7367:10;:17;:21;7363:429;;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;;;;;;;;;;:::i;:::-;;;;;;;;7083:725;;;;;;:::o;7:343:6:-;;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:2;;;290:1;287;280:12;249:2;303:41;337:6;332:3;327;303:41;:::i;:::-;90:260;;;;;;:::o;356:139::-;;440:6;427:20;418:29;;456:33;483:5;456:33;:::i;:::-;408:87;;;;:::o;514:271::-;;618:3;611:4;603:6;599:17;595:27;585:2;;636:1;633;626:12;585:2;676:6;663:20;701:78;775:3;767:6;760:4;752:6;748:17;701:78;:::i;:::-;692:87;;575:210;;;;;:::o;791:262::-;;899:2;887:9;878:7;874:23;870:32;867:2;;;915:1;912;905:12;867:2;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;857:196;;;;:::o;1059:518::-;;;1193:2;1181:9;1172:7;1168:23;1164:32;1161:2;;;1209:1;1206;1199:12;1161:2;1252:1;1277:53;1322:7;1313:6;1302:9;1298:22;1277:53;:::i;:::-;1267:63;;1223:117;1407:2;1396:9;1392:18;1379:32;1438:18;1430:6;1427:30;1424:2;;;1470:1;1467;1460:12;1424:2;1498:62;1552:7;1543:6;1532:9;1528:22;1498:62;:::i;:::-;1488:72;;1350:220;1151:426;;;;;:::o;1583:118::-;1670:24;1688:5;1670:24;:::i;:::-;1665:3;1658:37;1648:53;;:::o;1707:373::-;;1839:38;1871:5;1839:38;:::i;:::-;1893:88;1974:6;1969:3;1893:88;:::i;:::-;1886:95;;1990:52;2035:6;2030:3;2023:4;2016:5;2012:16;1990:52;:::i;:::-;2067:6;2062:3;2058:16;2051:23;;1815:265;;;;;:::o;2086:364::-;;2202:39;2235:5;2202:39;:::i;:::-;2257:71;2321:6;2316:3;2257:71;:::i;:::-;2250:78;;2337:52;2382:6;2377:3;2370:4;2363:5;2359:16;2337:52;:::i;:::-;2414:29;2436:6;2414:29;:::i;:::-;2409:3;2405:39;2398:46;;2178:272;;;;;:::o;2456:366::-;;2619:67;2683:2;2678:3;2619:67;:::i;:::-;2612:74;;2695:93;2784:3;2695:93;:::i;:::-;2813:2;2808:3;2804:12;2797:19;;2602:220;;;:::o;2828:366::-;;2991:67;3055:2;3050:3;2991:67;:::i;:::-;2984:74;;3067:93;3156:3;3067:93;:::i;:::-;3185:2;3180:3;3176:12;3169:19;;2974:220;;;:::o;3200:366::-;;3363:67;3427:2;3422:3;3363:67;:::i;:::-;3356:74;;3439:93;3528:3;3439:93;:::i;:::-;3557:2;3552:3;3548:12;3541:19;;3346:220;;;:::o;3572:271::-;;3724:93;3813:3;3804:6;3724:93;:::i;:::-;3717:100;;3834:3;3827:10;;3706:137;;;;:::o;3849:222::-;;3980:2;3969:9;3965:18;3957:26;;3993:71;4061:1;4050:9;4046:17;4037:6;3993:71;:::i;:::-;3947:124;;;;:::o;4077:313::-;;4228:2;4217:9;4213:18;4205:26;;4277:9;4271:4;4267:20;4263:1;4252:9;4248:17;4241:47;4305:78;4378:4;4369:6;4305:78;:::i;:::-;4297:86;;4195:195;;;;:::o;4396:419::-;;4600:2;4589:9;4585:18;4577:26;;4649:9;4643:4;4639:20;4635:1;4624:9;4620:17;4613:47;4677:131;4803:4;4677:131;:::i;:::-;4669:139;;4567:248;;;:::o;4821:419::-;;5025:2;5014:9;5010:18;5002:26;;5074:9;5068:4;5064:20;5060:1;5049:9;5045:17;5038:47;5102:131;5228:4;5102:131;:::i;:::-;5094:139;;4992:248;;;:::o;5246:419::-;;5450:2;5439:9;5435:18;5427:26;;5499:9;5493:4;5489:20;5485:1;5474:9;5470:17;5463:47;5527:131;5653:4;5527:131;:::i;:::-;5519:139;;5417:248;;;:::o;5671:129::-;;5732:20;;:::i;:::-;5722:30;;5761:33;5789:4;5781:6;5761:33;:::i;:::-;5712:88;;;:::o;5806:75::-;;5872:2;5866:9;5856:19;;5846:35;:::o;5887:307::-;;6038:18;6030:6;6027:30;6024:2;;;6060:18;;:::i;:::-;6024:2;6098:29;6120:6;6098:29;:::i;:::-;6090:37;;6182:4;6176;6172:15;6164:23;;5953:241;;;:::o;6200:98::-;;6285:5;6279:12;6269:22;;6258:40;;;:::o;6304:99::-;;6390:5;6384:12;6374:22;;6363:40;;;:::o;6409:147::-;;6547:3;6532:18;;6522:34;;;;:::o;6562:169::-;;6680:6;6675:3;6668:19;6720:4;6715:3;6711:14;6696:29;;6658:73;;;;:::o;6737:96::-;;6803:24;6821:5;6803:24;:::i;:::-;6792:35;;6782:51;;;:::o;6839:126::-;;6916:42;6909:5;6905:54;6894:65;;6884:81;;;:::o;6971:154::-;7055:6;7050:3;7045;7032:30;7117:1;7108:6;7103:3;7099:16;7092:27;7022:103;;;:::o;7131:307::-;7199:1;7209:113;7223:6;7220:1;7217:13;7209:113;;;7308:1;7303:3;7299:11;7293:18;7289:1;7284:3;7280:11;7273:39;7245:2;7242:1;7238:10;7233:15;;7209:113;;;7340:6;7337:1;7334:13;7331:2;;;7420:1;7411:6;7406:3;7402:16;7395:27;7331:2;7180:258;;;;:::o;7444:281::-;7527:27;7549:4;7527:27;:::i;:::-;7519:6;7515:40;7657:6;7645:10;7642:22;7621:18;7609:10;7606:34;7603:62;7600:2;;;7668:18;;:::i;:::-;7600:2;7708:10;7704:2;7697:22;7487:238;;;:::o;7731:180::-;7779:77;7776:1;7769:88;7876:4;7873:1;7866:15;7900:4;7897:1;7890:15;7917:102;;8009:2;8005:7;8000:2;7993:5;7989:14;7985:28;7975:38;;7965:54;;;:::o;8025:234::-;8165:34;8161:1;8153:6;8149:14;8142:58;8234:17;8229:2;8221:6;8217:15;8210:42;8131:128;:::o;8265:232::-;8405:34;8401:1;8393:6;8389:14;8382:58;8474:15;8469:2;8461:6;8457:15;8450:40;8371:126;:::o;8503:225::-;8643:34;8639:1;8631:6;8627:14;8620:58;8712:8;8707:2;8699:6;8695:15;8688:33;8609:119;:::o;8734:122::-;8807:24;8825:5;8807:24;:::i;:::-;8800:5;8797:35;8787:2;;8846:1;8843;8836:12;8787:2;8777:79;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "552800",
								"executionCost": "587",
								"totalCost": "553387"
							},
							"external": {
								"upgradeTo(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_beforeUpgrade(address)": "11"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 343,
									"end": 469,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 343,
									"end": 469,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122019728132291df2c614bd41ce8ecf8c8e1397545154be29b146e9296d725d2b0064736f6c63430008020033",
									".code": [
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "3659CFE6"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "4F1EF286"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 343,
											"end": 469,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 343,
											"end": 469,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 647,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 665,
											"end": 682,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 647,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 647,
											"end": 683,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 647,
											"end": 683,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 647,
											"end": 683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 717,
											"end": 734,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 736,
											"end": 745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 736,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 747,
											"end": 752,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 693,
											"end": 753,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 753,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 693,
											"end": 753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 574,
											"end": 760,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 891,
											"end": 908,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 873,
											"end": 909,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 873,
											"end": 909,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 873,
											"end": 909,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 919,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 943,
											"end": 960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 962,
											"end": 966,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 968,
											"end": 972,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 919,
											"end": 942,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 919,
											"end": 973,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 919,
											"end": 973,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 919,
											"end": 973,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 766,
											"end": 980,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 143,
											"end": 265,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 143,
											"end": 265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 225,
											"end": 258,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 240,
											"end": 257,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 225,
											"end": 239,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 225,
											"end": 258,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 225,
											"end": 258,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 225,
											"end": 258,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 143,
											"end": 265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 143,
											"end": 265,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2652,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2655,
											"end": 2673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2655,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2627,
											"end": 2675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2747,
											"end": 2764,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2728,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2790,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2794,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2798,
											"end": 2807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2779,
											"end": 2807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2852,
											"end": 2869,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2775,
											"end": 2887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 3004,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 532,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "4910FDFA16FED3260ED0E7147F7CC6DA11A60208B5B9406D12A635614FFD9143"
										},
										{
											"begin": 3034,
											"end": 3048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3048,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3007,
											"end": 3049,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3007,
											"end": 3049,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3007,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 3049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 3049,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3079,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3064,
											"end": 3085,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3177,
											"end": 3192,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3177,
											"end": 3205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3265,
											"end": 3282,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3387,
											"end": 3404,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "3659CFE600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3247,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3219,
											"end": 3436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3566,
											"end": 3584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 3566,
											"end": 3586,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3566,
											"end": 3586,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3566,
											"end": 3586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3586,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3537,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3746,
											"end": 3763,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3727,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3792,
											"end": 3809,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3810,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3059,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2513,
											"end": 3827,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 388,
											"end": 467,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 388,
											"end": 467,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 388,
											"end": 467,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 388,
											"end": 467,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1250,
											"end": 1270,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1270,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1249,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1223,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1216,
											"end": 1277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1284,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1475,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1456,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1448,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1627,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 873,
											"end": 939,
											"name": "PUSH",
											"source": 1,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1580,
											"end": 1600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1580,
											"end": 1600,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1553,
											"end": 1601,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1553,
											"end": 1601,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 1553,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1553,
											"end": 1627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1634,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6359,
											"end": 6371,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6411,
											"end": 6417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6419,
											"end": 6423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH data",
											"source": 0,
											"value": "9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "PUSH",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 6390,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 6390,
											"end": 6467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6383,
											"end": 6467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6276,
											"end": 6474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1787,
											"end": 1934,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1787,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1869,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1918,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1904,
											"end": 1918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1890,
											"end": 1928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1542,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1603,
											"end": 1624,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1673,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1659,
											"end": 1673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1683,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1683,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1683,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1683,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 778,
											"end": 782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1090,
											"end": 1097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1070,
											"end": 1098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1116,
											"end": 1124,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1109,
											"end": 1124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 718,
											"end": 1131,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6771,
											"end": 6783,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6814,
											"end": 6820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6803,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 6803,
											"end": 6821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 6795,
											"end": 6864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6949,
											"end": 6972,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6982,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6995,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6976,
											"end": 6995,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6996,
											"end": 7000,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 7001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7036,
											"end": 7043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7045,
											"end": 7055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 7018,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7011,
											"end": 7070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6660,
											"end": 7077,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7198,
											"end": 7210,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7226,
											"end": 7233,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7256,
											"end": 7266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7249,
											"end": 7266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7222,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7367,
											"end": 7377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7367,
											"end": 7388,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7363,
											"end": 7792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7625,
											"end": 7635,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7619,
											"end": 7636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7685,
											"end": 7700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7672,
											"end": 7682,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7664,
											"end": 7683,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7657,
											"end": 7701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7574,
											"end": 7719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7764,
											"end": 7776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7757,
											"end": 7777,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7083,
											"end": 7808,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 7,
											"end": 350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7,
											"end": 350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 249,
											"end": 251,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 249,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 290,
											"end": 291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 287,
											"end": 288,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 280,
											"end": 292,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 249,
											"end": 251,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 337,
											"end": 343,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 332,
											"end": 335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 327,
											"end": 330,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 303,
											"end": 344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 303,
											"end": 344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 90,
											"end": 350,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 356,
											"end": 495,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 356,
											"end": 495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 356,
											"end": 495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 427,
											"end": 447,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 418,
											"end": 447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 456,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 456,
											"end": 489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 456,
											"end": 489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 408,
											"end": 495,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 408,
											"end": 495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 408,
											"end": 495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 408,
											"end": 495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 408,
											"end": 495,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 514,
											"end": 785,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 514,
											"end": 785,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 514,
											"end": 785,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 621,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 603,
											"end": 609,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 599,
											"end": 616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 595,
											"end": 622,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 585,
											"end": 587,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 636,
											"end": 637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 626,
											"end": 638,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 585,
											"end": 587,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 585,
											"end": 587,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 676,
											"end": 682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 663,
											"end": 683,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 701,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 775,
											"end": 778,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 767,
											"end": 773,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 760,
											"end": 764,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 748,
											"end": 765,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 701,
											"end": 779,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 701,
											"end": 779,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 701,
											"end": 779,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 701,
											"end": 779,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 692,
											"end": 779,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 692,
											"end": 779,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 785,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 575,
											"end": 785,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 575,
											"end": 785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 785,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 575,
											"end": 785,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 791,
											"end": 1053,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 791,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 791,
											"end": 1053,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 899,
											"end": 901,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 887,
											"end": 896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 878,
											"end": 885,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 874,
											"end": 897,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 870,
											"end": 902,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 867,
											"end": 869,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 867,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 867,
											"end": 869,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 915,
											"end": 916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 905,
											"end": 917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 867,
											"end": 869,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 867,
											"end": 869,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1053,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1053,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1053,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 857,
											"end": 1053,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1059,
											"end": 1577,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1059,
											"end": 1577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1577,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1577,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1193,
											"end": 1195,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1190,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1172,
											"end": 1179,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1168,
											"end": 1191,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1164,
											"end": 1196,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1209,
											"end": 1210,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1206,
											"end": 1207,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1199,
											"end": 1211,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1322,
											"end": 1329,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1313,
											"end": 1319,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1298,
											"end": 1320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 1277,
											"end": 1330,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1330,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1267,
											"end": 1330,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1340,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1379,
											"end": 1411,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1438,
											"end": 1456,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1430,
											"end": 1436,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1457,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1467,
											"end": 1468,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1460,
											"end": 1472,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1552,
											"end": 1559,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1543,
											"end": 1549,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1541,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1498,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1560,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1488,
											"end": 1560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1350,
											"end": 1570,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1577,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1577,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1577,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1577,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1583,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1583,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1670,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1665,
											"end": 1668,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1658,
											"end": 1695,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1701,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1648,
											"end": 1701,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1707,
											"end": 2080,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 1707,
											"end": 2080,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1707,
											"end": 2080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1839,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1871,
											"end": 1876,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1839,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 1839,
											"end": 1877,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1839,
											"end": 1877,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 1839,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1893,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1981,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1886,
											"end": 1981,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2035,
											"end": 2041,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2030,
											"end": 2033,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2023,
											"end": 2027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2016,
											"end": 2021,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2012,
											"end": 2028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 1990,
											"end": 2042,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1990,
											"end": 2042,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 1990,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2062,
											"end": 2065,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2058,
											"end": 2074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 2080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 2080,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 2080,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 2080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 2080,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1815,
											"end": 2080,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2086,
											"end": 2450,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 2086,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2450,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2235,
											"end": 2240,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 2202,
											"end": 2241,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2321,
											"end": 2327,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2319,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2257,
											"end": 2328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2257,
											"end": 2328,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2328,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 2257,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2328,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2382,
											"end": 2388,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2377,
											"end": 2380,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2374,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2359,
											"end": 2375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 2337,
											"end": 2389,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2436,
											"end": 2442,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2414,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2409,
											"end": 2412,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2444,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2398,
											"end": 2444,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2450,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2178,
											"end": 2450,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2822,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 2456,
											"end": 2822,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2456,
											"end": 2822,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2683,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "2F"
										},
										{
											"begin": 2678,
											"end": 2681,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2619,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2686,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2612,
											"end": 2686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2784,
											"end": 2787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2695,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 2695,
											"end": 2788,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2695,
											"end": 2788,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 2695,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2813,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2804,
											"end": 2816,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2797,
											"end": 2816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2822,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2822,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2828,
											"end": 3194,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 2828,
											"end": 3194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2828,
											"end": 3194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2991,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3055,
											"end": 3057,
											"name": "PUSH",
											"source": 6,
											"value": "2D"
										},
										{
											"begin": 3050,
											"end": 3053,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2991,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 2991,
											"end": 3058,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2991,
											"end": 3058,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2991,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 3058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2984,
											"end": 3058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3156,
											"end": 3159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3067,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3067,
											"end": 3160,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3067,
											"end": 3160,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3067,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3180,
											"end": 3183,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3176,
											"end": 3188,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3194,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3200,
											"end": 3566,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3200,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3200,
											"end": 3566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3427,
											"end": 3429,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3422,
											"end": 3425,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3363,
											"end": 3430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3363,
											"end": 3430,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3363,
											"end": 3430,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3363,
											"end": 3430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3356,
											"end": 3430,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3528,
											"end": 3531,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3439,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3439,
											"end": 3532,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3439,
											"end": 3532,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3439,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3557,
											"end": 3559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3552,
											"end": 3555,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3548,
											"end": 3560,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3560,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3566,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3566,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3566,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3346,
											"end": 3566,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3572,
											"end": 3843,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3572,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3843,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3724,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3817,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3717,
											"end": 3817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3837,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3843,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3843,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3843,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3843,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3849,
											"end": 4071,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3849,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 4071,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 3982,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3969,
											"end": 3978,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3965,
											"end": 3983,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3983,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3957,
											"end": 3983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 4061,
											"end": 4062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4059,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4046,
											"end": 4063,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4037,
											"end": 4043,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3993,
											"end": 4064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3993,
											"end": 4064,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3993,
											"end": 4064,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3993,
											"end": 4064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 4071,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 4071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 4071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3947,
											"end": 4071,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4077,
											"end": 4390,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 4077,
											"end": 4390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4077,
											"end": 4390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4230,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4217,
											"end": 4226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4213,
											"end": 4231,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4205,
											"end": 4231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4277,
											"end": 4286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4271,
											"end": 4275,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4267,
											"end": 4287,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4263,
											"end": 4264,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4261,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4248,
											"end": 4265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4375,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4305,
											"end": 4383,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4305,
											"end": 4383,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4305,
											"end": 4383,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 4305,
											"end": 4383,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4383,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4297,
											"end": 4383,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4390,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4390,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4396,
											"end": 4815,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4396,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4396,
											"end": 4815,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4600,
											"end": 4602,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4585,
											"end": 4603,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4649,
											"end": 4658,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4643,
											"end": 4647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4639,
											"end": 4659,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4620,
											"end": 4637,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4803,
											"end": 4807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4677,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 4677,
											"end": 4808,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4677,
											"end": 4808,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4677,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4669,
											"end": 4808,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4567,
											"end": 4815,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4821,
											"end": 5240,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 4821,
											"end": 5240,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4821,
											"end": 5240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5025,
											"end": 5027,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5014,
											"end": 5023,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5010,
											"end": 5028,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5002,
											"end": 5028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5074,
											"end": 5083,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5068,
											"end": 5072,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5064,
											"end": 5084,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5060,
											"end": 5061,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5049,
											"end": 5058,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5038,
											"end": 5085,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5228,
											"end": 5232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5102,
											"end": 5233,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5102,
											"end": 5233,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 5102,
											"end": 5233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5094,
											"end": 5233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5094,
											"end": 5233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5240,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5240,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5240,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4992,
											"end": 5240,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5246,
											"end": 5665,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5450,
											"end": 5452,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5427,
											"end": 5453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5499,
											"end": 5508,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5493,
											"end": 5497,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5489,
											"end": 5509,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5483,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5470,
											"end": 5487,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5463,
											"end": 5510,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5653,
											"end": 5657,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 5527,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5658,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5519,
											"end": 5658,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5665,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5665,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5665,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5417,
											"end": 5665,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5671,
											"end": 5800,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 5671,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5671,
											"end": 5800,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5732,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5732,
											"end": 5752,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5732,
											"end": 5752,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5732,
											"end": 5752,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 5732,
											"end": 5752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5722,
											"end": 5752,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5781,
											"end": 5787,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 5761,
											"end": 5794,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5761,
											"end": 5794,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 5761,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5800,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5800,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5800,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5800,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5806,
											"end": 5881,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 5806,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5806,
											"end": 5881,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5872,
											"end": 5874,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5866,
											"end": 5875,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5856,
											"end": 5875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5856,
											"end": 5875,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5846,
											"end": 5881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5846,
											"end": 5881,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5887,
											"end": 6194,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 5887,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 6194,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6038,
											"end": 6056,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6027,
											"end": 6057,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 6060,
											"end": 6078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6120,
											"end": 6126,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6098,
											"end": 6127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 6098,
											"end": 6127,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6098,
											"end": 6127,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 6098,
											"end": 6127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6090,
											"end": 6127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6172,
											"end": 6187,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6164,
											"end": 6187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 6194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 6194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 6194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5953,
											"end": 6194,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6200,
											"end": 6298,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6200,
											"end": 6298,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6200,
											"end": 6298,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6291,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6291,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6291,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6298,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6298,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6298,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6298,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6304,
											"end": 6403,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6304,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6304,
											"end": 6403,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6395,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6384,
											"end": 6396,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6374,
											"end": 6396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6374,
											"end": 6396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6363,
											"end": 6403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6363,
											"end": 6403,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6363,
											"end": 6403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6363,
											"end": 6403,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6409,
											"end": 6556,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6409,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6556,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6550,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6522,
											"end": 6556,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6675,
											"end": 6678,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6668,
											"end": 6687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6711,
											"end": 6725,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6725,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6696,
											"end": 6725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6658,
											"end": 6731,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6737,
											"end": 6833,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 6737,
											"end": 6833,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6833,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6803,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6821,
											"end": 6826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6803,
											"end": 6827,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6803,
											"end": 6827,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6803,
											"end": 6827,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 6803,
											"end": 6827,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6827,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6833,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6833,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6782,
											"end": 6833,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6839,
											"end": 6965,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 6839,
											"end": 6965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6839,
											"end": 6965,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6916,
											"end": 6958,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6909,
											"end": 6914,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6959,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6959,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6894,
											"end": 6959,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6965,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6965,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6965,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6965,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6971,
											"end": 7125,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 6971,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7055,
											"end": 7061,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7050,
											"end": 7053,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7045,
											"end": 7048,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7032,
											"end": 7062,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7108,
											"end": 7114,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7103,
											"end": 7106,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7099,
											"end": 7115,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7092,
											"end": 7119,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7125,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7131,
											"end": 7438,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 7131,
											"end": 7438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7199,
											"end": 7200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7223,
											"end": 7229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7220,
											"end": 7221,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7217,
											"end": 7230,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7309,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7303,
											"end": 7306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7299,
											"end": 7310,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7293,
											"end": 7311,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7290,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7284,
											"end": 7287,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7273,
											"end": 7312,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7247,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7238,
											"end": 7248,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7248,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7233,
											"end": 7248,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7209,
											"end": 7322,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7340,
											"end": 7346,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7337,
											"end": 7338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7334,
											"end": 7347,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7420,
											"end": 7421,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7417,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7406,
											"end": 7409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7402,
											"end": 7418,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7395,
											"end": 7422,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7331,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7438,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7444,
											"end": 7725,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7444,
											"end": 7725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7549,
											"end": 7553,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7527,
											"end": 7554,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7527,
											"end": 7554,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7527,
											"end": 7554,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7527,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7519,
											"end": 7525,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7657,
											"end": 7663,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7645,
											"end": 7655,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7642,
											"end": 7664,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7621,
											"end": 7639,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7609,
											"end": 7619,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7606,
											"end": 7640,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7603,
											"end": 7665,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7668,
											"end": 7686,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7600,
											"end": 7602,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7708,
											"end": 7718,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7704,
											"end": 7706,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7697,
											"end": 7719,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7725,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7487,
											"end": 7725,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7731,
											"end": 7911,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7731,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7779,
											"end": 7856,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7776,
											"end": 7777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7769,
											"end": 7857,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7880,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 7873,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7866,
											"end": 7881,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7900,
											"end": 7904,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 7897,
											"end": 7898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7905,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 8019,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 7917,
											"end": 8019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7917,
											"end": 8019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8011,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 8005,
											"end": 8012,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 8000,
											"end": 8002,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 7993,
											"end": 7998,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7989,
											"end": 8003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7985,
											"end": 8013,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8013,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7975,
											"end": 8013,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8019,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7965,
											"end": 8019,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8025,
											"end": 8259,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 8025,
											"end": 8259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8165,
											"end": 8199,
											"name": "PUSH",
											"source": 6,
											"value": "45524331393637557067726164653A207570677261646520627265616B732066"
										},
										{
											"begin": 8161,
											"end": 8162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8149,
											"end": 8163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8142,
											"end": 8200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8234,
											"end": 8251,
											"name": "PUSH",
											"source": 6,
											"value": "7572746865722075706772616465730000000000000000000000000000000000"
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8221,
											"end": 8227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8217,
											"end": 8232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8131,
											"end": 8259,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8265,
											"end": 8497,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8265,
											"end": 8497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8405,
											"end": 8439,
											"name": "PUSH",
											"source": 6,
											"value": "455243313936373A206E657720696D706C656D656E746174696F6E206973206E"
										},
										{
											"begin": 8401,
											"end": 8402,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8389,
											"end": 8403,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8382,
											"end": 8440,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8474,
											"end": 8489,
											"name": "PUSH",
											"source": 6,
											"value": "6F74206120636F6E747261637400000000000000000000000000000000000000"
										},
										{
											"begin": 8469,
											"end": 8471,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8461,
											"end": 8467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8472,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8490,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8371,
											"end": 8497,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8503,
											"end": 8728,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 8503,
											"end": 8728,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8643,
											"end": 8677,
											"name": "PUSH",
											"source": 6,
											"value": "416464726573733A2064656C65676174652063616C6C20746F206E6F6E2D636F"
										},
										{
											"begin": 8639,
											"end": 8640,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8631,
											"end": 8637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8627,
											"end": 8641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8678,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8712,
											"end": 8720,
											"name": "PUSH",
											"source": 6,
											"value": "6E74726163740000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8707,
											"end": 8709,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8699,
											"end": 8705,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8688,
											"end": 8721,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8728,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8609,
											"end": 8728,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8734,
											"end": 8856,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 8734,
											"end": 8856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8825,
											"end": 8830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8831,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 8807,
											"end": 8831,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8807,
											"end": 8831,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 8807,
											"end": 8831,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8797,
											"end": 8832,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8846,
											"end": 8847,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8843,
											"end": 8844,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8848,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8856,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										}
									],
									".data": {
										"9FDCD12E4B726339B32A442B0A448365D5D85C96B2D2CFF917B4F66C63110398": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Proxiable.sol\":\"ChildOfProxiable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/Proxiable.sol\":{\"keccak256\":\"0x834cc5cde98109374417d43fa5d25f02fcb7f079abd7a40acbf5d13b88a22680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54224341106013844a5b98e54cf0b954ff5dfdfd78a63ab10c23795f1d6c020c\",\"dweb:/ipfs/QmTt5VWzNRkeCLBrfBP9C5YMqovNiQz3EJD84pMLywfc4S\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf62cb1e46b6c6ced7c5d272ddee4d7398020fa781f4ba85f0ace4c5a9ca08852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45945bc37c26b75bf2df2338901db18133f377832a8be642595a7bdfff56055b\",\"dweb:/ipfs/QmaT2X7KSwbxzTWt76VouZyDk29WUXqqypTLXeW7f8F83t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Proxiable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/Proxiable.sol\":\"Proxiable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/Proxiable.sol\":{\"keccak256\":\"0x834cc5cde98109374417d43fa5d25f02fcb7f079abd7a40acbf5d13b88a22680\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54224341106013844a5b98e54cf0b954ff5dfdfd78a63ab10c23795f1d6c020c\",\"dweb:/ipfs/QmTt5VWzNRkeCLBrfBP9C5YMqovNiQz3EJD84pMLywfc4S\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf62cb1e46b6c6ced7c5d272ddee4d7398020fa781f4ba85f0ace4c5a9ca08852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45945bc37c26b75bf2df2338901db18133f377832a8be642595a7bdfff56055b\",\"dweb:/ipfs/QmaT2X7KSwbxzTWt76VouZyDk29WUXqqypTLXeW7f8F83t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/NFTContract2/StorageSlot.sol\":1207:2426  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/NFTContract2/StorageSlot.sol\":1207:2426  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220ae2f71a6f6162e1c77592335b80cf20d77a1a85b6c12b0de49e82570c8d659ff64736f6c63430008020033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae2f71a6f6162e1c77592335b80cf20d77a1a85b6c12b0de49e82570c8d659ff64736f6c63430008020033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x2F PUSH18 0xA6F6162E1C77592335B80CF20D77A1A85B6C SLT 0xB0 0xDE 0x49 0xE8 0x25 PUSH17 0xC8D659FF64736F6C634300080200330000 ",
							"sourceMap": "1207:1219:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220ae2f71a6f6162e1c77592335b80cf20d77a1a85b6c12b0de49e82570c8d659ff64736f6c63430008020033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0x2F PUSH18 0xA6F6162E1C77592335B80CF20D77A1A85B6C SLT 0xB0 0xDE 0x49 0xE8 0x25 PUSH17 0xC8D659FF64736F6C634300080200330000 ",
							"sourceMap": "1207:1219:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1207,
									"end": 2426,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ae2f71a6f6162e1c77592335b80cf20d77a1a85b6c12b0de49e82570c8d659ff64736f6c63430008020033",
									".code": [
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1207,
											"end": 2426,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ``` contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/NFTContract2/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify continuation of the upgradability. The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"upgradeTo(address)": "3659cfe6",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify continuation of the upgradability. The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/NFTContract2/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/NFTContract2/Address.sol\":{\"keccak256\":\"0xd217e5030771ed77e0df8d1028f05abdaba7df6991fc6e03229d8624c1999d9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f918396df8f3717ca4d2f978757604eb540b256a87e898e30105fab09010666\",\"dweb:/ipfs/QmczhRz4N5D1vfWU1EGAGStDP57zNMLmqde9GBW3eFbAHR\"]},\"contracts/NFTContract2/ERC1967Upgrade.sol\":{\"keccak256\":\"0xa25ee4e92c4ae586e422260ce072247349cc8b2a969f10b3ef9d7f0aabfb7935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://094d17181b63f9dc747ac0314f7366ec2ba43fd0cab12f228df305838b98dd25\",\"dweb:/ipfs/QmXGbasnBYxZkqpsFRf8MSxhSeRJjqUthVGpfRVCaEMSiW\"]},\"contracts/NFTContract2/IBeacon.sol\":{\"keccak256\":\"0x69e09c6f079130e3608a163b7589a29baccdb4fc9a3b1f8b437c08e2e35395c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d51b01c145cb8b76ae809b2688272da628f74ddc2526502fcbc5da0b2d1c138f\",\"dweb:/ipfs/QmWHJjhBKbWWNwewrxVSgFWyLPW3PEBxkHbzy9B8r2onEM\"]},\"contracts/NFTContract2/StorageSlot.sol\":{\"keccak256\":\"0x8b11be685cb1f1a574707f89190beac61ade63e30a1b98aca146b29f0e6b3e50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d128b68c41e2f9007bafd39531ba1f1798587ac5760ca9da0440fe7c35d2315\",\"dweb:/ipfs/QmatXLGSAw6UM69g46qbxVbaCsCH6mEHqkanDCR2KpH9Yo\"]},\"contracts/NFTContract2/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf62cb1e46b6c6ced7c5d272ddee4d7398020fa781f4ba85f0ace4c5a9ca08852\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://45945bc37c26b75bf2df2338901db18133f377832a8be642595a7bdfff56055b\",\"dweb:/ipfs/QmaT2X7KSwbxzTWt76VouZyDk29WUXqqypTLXeW7f8F83t\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/NFTContract2/Address.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/Address.sol",
					"exportedSymbols": {
						"Address": [
							295
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295
							],
							"name": "Address",
							"nameLocation": "134:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "784:347:0",
										"statements": [
											{
												"assignments": [
													11
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "989:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 18,
														"src": "981:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 10,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 12,
												"nodeType": "VariableDeclarationStatement",
												"src": "981:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1068:32:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1070:28:0",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1090:7:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1078:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "1078:20:0"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1070:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "1090:7:0",
														"valueSize": 1
													},
													{
														"declaration": 11,
														"isOffset": false,
														"isSlot": false,
														"src": "1070:4:0",
														"valueSize": 1
													}
												],
												"id": 13,
												"nodeType": "InlineAssembly",
												"src": "1059:41:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 14,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "1116:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1123:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1116:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 9,
												"id": 17,
												"nodeType": "Return",
												"src": "1109:15:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "148:565:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "727:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "746:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "738:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "737:17:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "778:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:0"
									},
									"scope": 295,
									"src": "718:413:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 52,
										"nodeType": "Block",
										"src": "2119:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 30,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2145:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 29,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2137:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 28,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2137:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 31,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2137:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2137:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 33,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2162:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2137:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2170:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2129:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2129:73:0"
											},
											{
												"assignments": [
													39,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 39,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2296:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 52,
														"src": "2291:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 38,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2291:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 46,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2341:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 40,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "2309:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2309:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 42,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "2332:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2309:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2309:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2290:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 48,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "2362:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 50,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 51,
												"nodeType": "ExpressionStatement",
												"src": "2354:78:0"
											}
										]
									},
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "1137:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 53,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2057:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2083:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2067:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2067:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2102:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2094:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2066:43:0"
									},
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2119:0:0"
									},
									"scope": 295,
									"src": "2048:391:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3269:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "3297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 58,
															"src": "3305:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3311:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 63,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															70,
															90
														],
														"referencedDeclaration": 90,
														"src": "3284:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3284:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 62,
												"id": 68,
												"nodeType": "Return",
												"src": "3277:67:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2445:730:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3189:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3231:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3218:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 57,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3218:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3201:35:0"
									},
									"returnParameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3255:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3255:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:14:0"
									},
									"scope": 295,
									"src": "3180:171:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3690:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 83,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3729:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 84,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 75,
															"src": "3737:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3743:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 86,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 77,
															"src": "3746:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 82,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "3707:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 81,
												"id": 88,
												"nodeType": "Return",
												"src": "3700:59:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "3357:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3582:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3603:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3595:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3624:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3611:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3611:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3644:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3630:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 76,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3630:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3594:63:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3676:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 79,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3676:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:14:0"
									},
									"scope": 295,
									"src": "3573:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "4241:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 93,
															"src": "4280:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 104,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "4288:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 105,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 97,
															"src": "4294:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 102,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															110,
															160
														],
														"referencedDeclaration": 160,
														"src": "4258:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4258:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 101,
												"id": 108,
												"nodeType": "Return",
												"src": "4251:94:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3772:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4137:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4167:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4159:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4159:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4175:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 94,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4175:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4202:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4194:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4158:50:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "4227:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 99,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4227:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4226:14:0"
									},
									"scope": 295,
									"src": "4128:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 159,
										"nodeType": "Block",
										"src": "4741:382:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 127,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4767:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$295",
																				"typeString": "library Address"
																			}
																		],
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4759:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 125,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4759:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4759:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4759:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "4784:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4759:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4791:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4751:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "4751:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 137,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "4861:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 136,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "4850:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4850:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4870:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 135,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4842:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4842:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "4842:60:0"
											},
											{
												"assignments": [
													143,
													145
												],
												"declarations": [
													{
														"constant": false,
														"id": 143,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4978:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4973:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 142,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 145,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5000:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 159,
														"src": "4987:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 144,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 152,
												"initialValue": {
													"arguments": [
														{
															"id": 150,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 115,
															"src": "5042:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 146,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 113,
																"src": "5014:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5014:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 148,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "5034:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5014:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5014:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4972:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "5082:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 155,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "5091:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 156,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "5103:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 153,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5064:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5064:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 123,
												"id": 158,
												"nodeType": "Return",
												"src": "5057:59:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "4358:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4609:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4639:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4631:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4674:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4666:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4666:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4695:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4681:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4681:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:78:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "4727:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 121,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4727:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:14:0"
									},
									"scope": 295,
									"src": "4600:523:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 176,
										"nodeType": "Block",
										"src": "5400:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 171,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 163,
															"src": "5436:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 172,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "5444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5450:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 170,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															177,
															212
														],
														"referencedDeclaration": 212,
														"src": "5417:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5417:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 169,
												"id": 175,
												"nodeType": "Return",
												"src": "5410:80:0"
											}
										]
									},
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "5129:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5309:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5336:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5328:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5344:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5327:35:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "5386:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5386:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5385:14:0"
									},
									"scope": 295,
									"src": "5300:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "5809:288:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 191,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 180,
																	"src": "5838:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 190,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "5827:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5827:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5847:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5819:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5819:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "5819:67:0"
											},
											{
												"assignments": [
													197,
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 197,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5962:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5957:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 196,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5957:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5984:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 211,
														"src": "5971:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 198,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5971:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 204,
												"initialValue": {
													"arguments": [
														{
															"id": 202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6016:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 200,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "5998:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5998:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 206,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "6056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 207,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "6065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 208,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 184,
															"src": "6077:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 205,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "6038:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6038:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 188,
												"id": 210,
												"nodeType": "Return",
												"src": "6031:59:0"
											}
										]
									},
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "5503:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5690:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5709:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5738:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5725:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5758:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5744:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 183,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5744:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5708:63:0"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "5795:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 186,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5795:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5794:14:0"
									},
									"scope": 295,
									"src": "5681:416:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "6373:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "6411:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 224,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "6419:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 222,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															229,
															264
														],
														"referencedDeclaration": 264,
														"src": "6390:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 221,
												"id": 227,
												"nodeType": "Return",
												"src": "6383:84:0"
											}
										]
									},
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "6103:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6285:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6314:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6335:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6322:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6322:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:35:0"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "6359:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6359:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6358:14:0"
									},
									"scope": 295,
									"src": "6276:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "6785:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6814:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "6803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6803:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6795:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "6795:69:0"
											},
											{
												"assignments": [
													249,
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6940:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6935:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6935:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6962:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "6949:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6949:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "6996:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 252,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6976:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6976:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6976:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6934:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 258,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "7036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 259,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 260,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "7057:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 257,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "7018:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7018:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 240,
												"id": 262,
												"nodeType": "Return",
												"src": "7011:59:0"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "6480:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6669:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6698:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6690:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6719:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6706:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6706:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6739:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6725:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6689:63:0"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "6771:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:14:0"
									},
									"scope": 295,
									"src": "6660:417:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "7212:596:0",
										"statements": [
											{
												"condition": {
													"id": 275,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 266,
													"src": "7226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7283:519:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 279,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7367:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7367:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7387:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7367:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 289,
																"nodeType": "Block",
																"src": "7739:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 286,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 270,
																					"src": "7764:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 285,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7757:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 287,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7757:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 288,
																		"nodeType": "ExpressionStatement",
																		"src": "7757:20:0"
																	}
																]
															},
															"id": 290,
															"nodeType": "IfStatement",
															"src": "7363:429:0",
															"trueBody": {
																"id": 284,
																"nodeType": "Block",
																"src": "7390:343:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7574:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7596:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7625:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7619:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7619:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7600:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7668:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7672:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7664:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7664:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7685:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7657:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7657:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7657:44:0"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7625:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 268,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7672:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 283,
																		"nodeType": "InlineAssembly",
																		"src": "7565:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "7222:580:0",
												"trueBody": {
													"id": 278,
													"nodeType": "Block",
													"src": "7235:42:0",
													"statements": [
														{
															"expression": {
																"id": 276,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "7256:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 274,
															"id": 277,
															"nodeType": "Return",
															"src": "7249:17:0"
														}
													]
												}
											}
										]
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nameLocation": "7092:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7115:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7110:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 265,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7137:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7124:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 267,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7124:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7163:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7149:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 269,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7149:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7109:67:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "7198:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7198:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7197:14:0"
									},
									"scope": 295,
									"src": "7083:725:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 296,
							"src": "126:7684:0"
						}
					],
					"src": "33:7777:0"
				},
				"id": 0
			},
			"contracts/NFTContract2/ERC1967Upgrade.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/ERC1967Upgrade.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Upgrade": [
							652
						],
						"IBeacon": [
							662
						],
						"StorageSlot": [
							754
						]
					},
					"id": 653,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "contracts/NFTContract2/IBeacon.sol",
							"file": "./IBeacon.sol",
							"id": 298,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 663,
							"src": "58:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/Address.sol",
							"file": "./Address.sol",
							"id": 299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 296,
							"src": "82:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/NFTContract2/StorageSlot.sol",
							"file": "./StorageSlot.sol",
							"id": 300,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 653,
							"sourceUnit": 755,
							"src": "106:27:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "135:236:1",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n _Available since v4.1._\n @custom:oz-upgrades-unsafe-allow delegatecall"
							},
							"fullyImplemented": true,
							"id": 652,
							"linearizedBaseContracts": [
								652
							],
							"name": "ERC1967Upgrade",
							"nameLocation": "390:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 304,
									"mutability": "constant",
									"name": "_ROLLBACK_SLOT",
									"nameLocation": "515:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "490:108:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 302,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "490:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307834393130666466613136666564333236306564306537313437663763633664613131613630323038623562393430366431326136333536313466666439313433",
										"id": 303,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "532:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33048860383849004559742813297059419343339852917517107368639918720169455489347_by_1",
											"typeString": "int_const 3304...(69 digits omitted)...9347"
										},
										"value": "0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "605:214:1",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 308,
									"mutability": "constant",
									"name": "_IMPLEMENTATION_SLOT",
									"nameLocation": "850:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "824:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 306,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "824:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 307,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "873:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "946:68:1",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"id": 313,
									"name": "Upgraded",
									"nameLocation": "1025:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1050:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1034:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1033:32:1"
									},
									"src": "1019:47:1"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "1206:78:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 321,
																"name": "_IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 308,
																"src": "1250:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 319,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "1223:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "1223:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1223:48:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "1223:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 318,
												"id": 324,
												"nodeType": "Return",
												"src": "1216:61:1"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1072:67:1",
										"text": " @dev Returns the current implementation address."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getImplementation",
									"nameLocation": "1153:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1171:2:1"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1197:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1197:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1196:9:1"
									},
									"scope": 652,
									"src": "1144:140:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "1438:196:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 335,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1475:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 333,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "1456:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "1456:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1456:37:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1495:47:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															},
															"value": "ERC1967: new implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_972b7028e8de0bff0d553b3264eba2312ec98a552add05e58853b313f9f4ac65",
																"typeString": "literal_string \"ERC1967: new implementation is not a contract\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1448:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1448:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1448:95:1"
											},
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 343,
																	"name": "_IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "1580:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 340,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "1553:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "1553:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1553:48:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "1553:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 346,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1610:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:74:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "1553:74:1"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1290:80:1",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1384:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1411:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "1403:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:27:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1438:0:1"
									},
									"scope": 652,
									"src": "1375:259:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1796:96:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 357,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1825:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 356,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "1806:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1806:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1806:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 361,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "1867:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 360,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "1858:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1858:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "EmitStatement",
												"src": "1853:32:1"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1640:95:1",
										"text": " @dev Perform implementation upgrade\n Emits an {Upgraded} event."
									},
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeTo",
									"nameLocation": "1749:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1768:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1760:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1759:27:1"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:1"
									},
									"scope": 652,
									"src": "1740:152:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2124:217:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2153:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 375,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2134:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2134:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "2134:37:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 380,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2195:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 379,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 313,
														"src": "2186:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "EmitStatement",
												"src": "2181:32:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 383,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 370,
																"src": "2227:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2227:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2227:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 387,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 372,
														"src": "2246:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2227:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "2223:112:1",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "2257:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 392,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 368,
																		"src": "2300:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 393,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 370,
																		"src": "2319:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 389,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2271:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "2271:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2271:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "2271:53:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1898:123:1",
										"text": " @dev Perform implementation upgrade with additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCall",
									"nameLocation": "2035:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2061:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2053:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2053:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2093:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2080:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2104:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2099:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2099:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:62:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2124:0:1"
									},
									"scope": 652,
									"src": "2026:315:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2617:1210:1",
										"statements": [
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "oldImplementation",
														"nameLocation": "2635:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "2627:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 409,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2627:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 411,
														"name": "_getImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "2655:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2627:48:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "2747:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 414,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "2728:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "2728:37:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 418,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "2779:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2779:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2793:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2779:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 422,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "2798:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2779:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 432,
												"nodeType": "IfStatement",
												"src": "2775:112:1",
												"trueBody": {
													"id": 431,
													"nodeType": "Block",
													"src": "2809:78:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 427,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "2852:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 428,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 404,
																		"src": "2871:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 424,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "2823:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "2823:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2823:53:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 430,
															"nodeType": "ExpressionStatement",
															"src": "2823:53:1"
														}
													]
												}
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "rollbackTesting",
														"nameLocation": "2989:15:1",
														"nodeType": "VariableDeclaration",
														"scope": 487,
														"src": "2957:47:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
															"typeString": "struct StorageSlot.BooleanSlot"
														},
														"typeName": {
															"id": 436,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 435,
																"name": "StorageSlot.BooleanSlot",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 703,
																"src": "2957:23:1"
															},
															"referencedDeclaration": 703,
															"src": "2957:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																"typeString": "struct StorageSlot.BooleanSlot"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 442,
												"initialValue": {
													"arguments": [
														{
															"id": 440,
															"name": "_ROLLBACK_SLOT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 304,
															"src": "3034:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 438,
															"name": "StorageSlot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "3007:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																"typeString": "type(library StorageSlot)"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getBooleanSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 731,
														"src": "3007:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BooleanSlot_$703_storage_ptr_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.BooleanSlot storage pointer)"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3007:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2957:92:1"
											},
											{
												"condition": {
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3063:22:1",
													"subExpression": {
														"expression": {
															"id": 443,
															"name": "rollbackTesting",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3064:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																"typeString": "struct StorageSlot.BooleanSlot storage pointer"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 702,
														"src": "3064:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 486,
												"nodeType": "IfStatement",
												"src": "3059:762:1",
												"trueBody": {
													"id": 485,
													"nodeType": "Block",
													"src": "3087:734:1",
													"statements": [
														{
															"expression": {
																"id": 450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 446,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3177:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																			"typeString": "struct StorageSlot.BooleanSlot storage pointer"
																		}
																	},
																	"id": 448,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 702,
																	"src": "3177:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3201:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "3177:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 451,
															"nodeType": "ExpressionStatement",
															"src": "3177:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3265:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "75706772616465546f286164647265737329",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3345:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				"value": "upgradeTo(address)"
																			},
																			{
																				"id": 459,
																				"name": "oldImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 410,
																				"src": "3387:17:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_3659cfe672549963da205df855ebfb8672cda4801e0255183bd6a6f536855df7",
																					"typeString": "literal_string \"upgradeTo(address)\""
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 456,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3300:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "encodeWithSignature",
																			"nodeType": "MemberAccess",
																			"src": "3300:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function (string memory) pure returns (bytes memory)"
																			}
																		},
																		"id": 460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3300:122:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 452,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "3219:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "3219:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3219:217:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "3219:217:1"
														},
														{
															"expression": {
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 463,
																		"name": "rollbackTesting",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3450:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
																			"typeString": "struct StorageSlot.BooleanSlot storage pointer"
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 702,
																	"src": "3450:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3474:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "3450:29:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 468,
															"nodeType": "ExpressionStatement",
															"src": "3450:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 470,
																			"name": "oldImplementation",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 410,
																			"src": "3545:17:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 471,
																				"name": "_getImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 326,
																				"src": "3566:18:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3566:20:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "3545:41:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524331393637557067726164653a207570677261646520627265616b732066757274686572207570677261646573",
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3588:49:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		},
																		"value": "ERC1967Upgrade: upgrade breaks further upgrades"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2425ea74e68e4bcd365d89824a06e1475543dcbb6a12bf699e5abf6b11b9b6ed",
																			"typeString": "literal_string \"ERC1967Upgrade: upgrade breaks further upgrades\""
																		}
																	],
																	"id": 469,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3537:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3537:101:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "3537:101:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 478,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3746:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 477,
																	"name": "_setImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 350,
																	"src": "3727:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3727:37:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 480,
															"nodeType": "ExpressionStatement",
															"src": "3727:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 482,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 402,
																		"src": "3792:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 481,
																	"name": "Upgraded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 313,
																	"src": "3783:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3783:27:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 484,
															"nodeType": "EmitStatement",
															"src": "3778:32:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "2347:161:1",
										"text": " @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n Emits an {Upgraded} event."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallSecure",
									"nameLocation": "2522:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2554:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2546:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2546:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2586:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2573:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2573:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "2597:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "2592:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2592:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2545:62:1"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2617:0:1"
									},
									"scope": 652,
									"src": "2513:1314:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 525,
										"nodeType": "Block",
										"src": "4226:217:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 499,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4247:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 498,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "4236:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4236:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4236:21:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 503,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4287:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 502,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 602,
														"src": "4272:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 505,
												"nodeType": "EmitStatement",
												"src": "4267:30:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 506,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "4311:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4311:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 508,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4325:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4311:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"id": 510,
														"name": "forceCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "4330:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4311:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 524,
												"nodeType": "IfStatement",
												"src": "4307:130:1",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "4341:96:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 516,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 491,
																						"src": "4392:9:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 515,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 662,
																					"src": "4384:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$662_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4384:18:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$662",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 518,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 661,
																			"src": "4384:33:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 519,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4384:35:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 520,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "4421:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 512,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 295,
																		"src": "4355:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 229,
																	"src": "4355:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4355:71:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 522,
															"nodeType": "ExpressionStatement",
															"src": "4355:71:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "3833:292:1",
										"text": " @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n Emits a {BeaconUpgraded} event."
									},
									"id": 526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeBeaconToAndCall",
									"nameLocation": "4139:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4171:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4163:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4163:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4195:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4182:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 492,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4182:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "forceCall",
												"nameLocation": "4206:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "4201:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4162:54:1"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4226:0:1"
									},
									"scope": 652,
									"src": "4130:313:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "4449:189:1",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n validated in the constructor."
									},
									"id": 530,
									"mutability": "constant",
									"name": "_ADMIN_SLOT",
									"nameLocation": "4669:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "4643:106:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 528,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4643:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 529,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4683:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "4756:67:1",
										"text": " @dev Emitted when the admin account has changed."
									},
									"id": 537,
									"name": "AdminChanged",
									"nameLocation": "4834:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "4855:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4847:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4847:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4878:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 537,
												"src": "4870:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4846:41:1"
									},
									"src": "4828:60:1"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "5002:69:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 545,
																"name": "_ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 530,
																"src": "5046:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 543,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "5019:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "5019:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5019:39:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "5019:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 542,
												"id": 548,
												"nodeType": "Return",
												"src": "5012:52:1"
											}
										]
									},
									"documentation": {
										"id": 538,
										"nodeType": "StructuredDocumentation",
										"src": "4894:50:1",
										"text": " @dev Returns the current admin."
									},
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAdmin",
									"nameLocation": "4958:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4967:2:1"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "4993:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4992:9:1"
									},
									"scope": 652,
									"src": "4949:122:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5198:156:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 557,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "5216:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5236:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5228:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5228:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5228:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5216:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e65772061646d696e20697320746865207a65726f2061646472657373",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5240:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															},
															"value": "ERC1967: new admin is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3820e16891102c1360a787e6e648431097d92537f969d458f5c94b56f8318be5",
																"typeString": "literal_string \"ERC1967: new admin is the zero address\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5208:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5208:73:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "5208:73:1"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 569,
																	"name": "_ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "5318:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 566,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "5291:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "5291:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5291:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "5291:45:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 572,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "5339:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5291:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "5291:56:1"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "5077:71:1",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "5162:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5180:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5172:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5172:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5171:18:1"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5198:0:1"
									},
									"scope": 652,
									"src": "5153:201:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "5514:86:1",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 583,
																"name": "_getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "5542:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5542:11:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5555:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 582,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 537,
														"src": "5529:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "EmitStatement",
												"src": "5524:40:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 589,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "5584:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 588,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 576,
														"src": "5574:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "5574:19:1"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "5360:100:1",
										"text": " @dev Changes the admin of the proxy.\n Emits an {AdminChanged} event."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_changeAdmin",
									"nameLocation": "5474:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "5495:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "5487:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5487:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5486:18:1"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5514:0:1"
									},
									"scope": 652,
									"src": "5465:135:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "5606:232:1",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
									},
									"id": 597,
									"mutability": "constant",
									"name": "_BEACON_SLOT",
									"nameLocation": "5869:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 652,
									"src": "5843:107:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 595,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "5843:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 596,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "5884:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "5957:60:1",
										"text": " @dev Emitted when the beacon is upgraded."
									},
									"id": 602,
									"name": "BeaconUpgraded",
									"nameLocation": "6028:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "6059:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "6043:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6043:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6042:24:1"
									},
									"src": "6022:45:1"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "6183:70:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 610,
																"name": "_BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "6227:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 608,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "6200:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 720,
															"src": "6200:26:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6200:40:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 699,
													"src": "6200:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 607,
												"id": 613,
												"nodeType": "Return",
												"src": "6193:53:1"
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "6073:51:1",
										"text": " @dev Returns the current beacon."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getBeacon",
									"nameLocation": "6138:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6148:2:1"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "6174:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6173:9:1"
									},
									"scope": 652,
									"src": "6129:124:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "6382:358:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 624,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "6432:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 622,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "6413:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "6413:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6413:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a206e657720626561636f6e206973206e6f74206120636f6e7472616374",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6456:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															},
															"value": "ERC1967: new beacon is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9589b7809634e4928033de18bb696e9af4ef71b703652af5245f2dbebf2f4470",
																"typeString": "literal_string \"ERC1967: new beacon is not a contract\""
															}
														],
														"id": 621,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6392:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6392:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 628,
												"nodeType": "ExpressionStatement",
												"src": "6392:113:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"expression": {
																			"arguments": [
																				{
																					"id": 633,
																					"name": "newBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 618,
																					"src": "6563:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 632,
																				"name": "IBeacon",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 662,
																				"src": "6555:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IBeacon_$662_$",
																					"typeString": "type(contract IBeacon)"
																				}
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6555:18:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IBeacon_$662",
																				"typeString": "contract IBeacon"
																			}
																		},
																		"id": 635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "implementation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 661,
																		"src": "6555:33:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																			"typeString": "function () view external returns (address)"
																		}
																	},
																	"id": 636,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6555:35:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 630,
																	"name": "Address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 295,
																	"src": "6536:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_Address_$295_$",
																		"typeString": "type(library Address)"
																	}
																},
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isContract",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 19,
																"src": "6536:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6536:55:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313936373a20626561636f6e20696d706c656d656e746174696f6e206973206e6f74206120636f6e7472616374",
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6605:50:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															},
															"value": "ERC1967: beacon implementation is not a contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f95fd1f5b5578816eb23f6ca0f2439b4b5e4094dc16e99c3b8e91603a83f93c8",
																"typeString": "literal_string \"ERC1967: beacon implementation is not a contract\""
															}
														],
														"id": 629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6515:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6515:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "6515:150:1"
											},
											{
												"expression": {
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 644,
																	"name": "_BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 597,
																	"src": "6702:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 641,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "6675:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$754_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 643,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 720,
																"src": "6675:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$700_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6675:40:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 646,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 699,
														"src": "6675:46:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 647,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "6724:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6675:58:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 649,
												"nodeType": "ExpressionStatement",
												"src": "6675:58:1"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "6259:71:1",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "6344:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6363:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "6355:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6355:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6354:19:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6382:0:1"
									},
									"scope": 652,
									"src": "6335:405:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 653,
							"src": "372:6370:1"
						}
					],
					"src": "33:6709:1"
				},
				"id": 1
			},
			"contracts/NFTContract2/IBeacon.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							662
						]
					},
					"id": 663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 654,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 655,
								"nodeType": "StructuredDocumentation",
								"src": "58:79:2",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IBeacon",
							"nameLocation": "148:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "162:162:2",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {BeaconProxy} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "338:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "352:2:2"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "378:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:9:2"
									},
									"scope": 662,
									"src": "329:58:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 663,
							"src": "138:251:2"
						}
					],
					"src": "33:356:2"
				},
				"id": 2
			},
			"contracts/NFTContract2/Proxiable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/Proxiable.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ChildOfProxiable": [
							694
						],
						"ERC1967Upgrade": [
							652
						],
						"IBeacon": [
							662
						],
						"Proxiable": [
							684
						],
						"StorageSlot": [
							754
						],
						"UUPSUpgradeable": [
							803
						]
					},
					"id": 695,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "contracts/NFTContract2/UUPSUpgradeable.sol",
							"file": "./UUPSUpgradeable.sol",
							"id": 665,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 695,
							"sourceUnit": 804,
							"src": "57:31:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 666,
										"name": "UUPSUpgradeable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 803,
										"src": "121:15:3"
									},
									"id": 667,
									"nodeType": "InheritanceSpecifier",
									"src": "121:15:3"
								}
							],
							"contractDependencies": [
								652,
								803
							],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 684,
							"linearizedBaseContracts": [
								684,
								803,
								652
							],
							"name": "Proxiable",
							"nameLocation": "108:9:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										802
									],
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "215:50:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "240:17:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 673,
														"name": "_beforeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "225:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "225:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "ExpressionStatement",
												"src": "225:33:3"
											}
										]
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "152:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 671,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "206:8:3"
									},
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "178:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "170:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "170:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "169:27:3"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "215:0:3"
									},
									"scope": 684,
									"src": "143:122:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"id": 683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeUpgrade",
									"nameLocation": "280:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "303:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "295:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:27:3"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "338:0:3"
									},
									"scope": 684,
									"src": "271:68:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 695,
							"src": "90:251:3"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 685,
										"name": "Proxiable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 684,
										"src": "372:9:3"
									},
									"id": 686,
									"nodeType": "InheritanceSpecifier",
									"src": "372:9:3"
								}
							],
							"contractDependencies": [
								652,
								684,
								803
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 694,
							"linearizedBaseContracts": [
								694,
								684,
								803,
								652
							],
							"name": "ChildOfProxiable",
							"nameLocation": "352:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										683
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "465:2:3",
										"statements": []
									},
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeUpgrade",
									"nameLocation": "397:14:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 690,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "456:8:3"
									},
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "420:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "412:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "411:27:3"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:0:3"
									},
									"scope": 694,
									"src": "388:79:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 695,
							"src": "343:126:3"
						}
					],
					"src": "32:437:3"
				},
				"id": 3
			},
			"contracts/NFTContract2/StorageSlot.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							754
						]
					},
					"id": 755,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 696,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 697,
								"nodeType": "StructuredDocumentation",
								"src": "58:1148:4",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._"
							},
							"fullyImplemented": true,
							"id": 754,
							"linearizedBaseContracts": [
								754
							],
							"name": "StorageSlot",
							"nameLocation": "1215:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 700,
									"members": [
										{
											"constant": false,
											"id": 699,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1270:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 700,
											"src": "1262:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 698,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1262:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1240:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1233:49:4",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 703,
									"members": [
										{
											"constant": false,
											"id": 702,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1322:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 703,
											"src": "1317:10:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 701,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1317:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1295:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1288:46:4",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 706,
									"members": [
										{
											"constant": false,
											"id": 705,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1377:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 706,
											"src": "1369:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 704,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1369:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1347:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1340:49:4",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 709,
									"members": [
										{
											"constant": false,
											"id": 708,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1432:5:4",
											"nodeType": "VariableDeclaration",
											"scope": 709,
											"src": "1424:13:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 707,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1424:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1402:11:4",
									"nodeType": "StructDefinition",
									"scope": 754,
									"src": "1395:49:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "1626:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1645:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1659:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1669:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1659:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 716,
														"isOffset": false,
														"isSlot": true,
														"src": "1659:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 712,
														"isOffset": false,
														"isSlot": false,
														"src": "1669:4:4",
														"valueSize": 1
													}
												],
												"id": 718,
												"nodeType": "InlineAssembly",
												"src": "1636:47:4"
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "1450:87:4",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1551:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1574:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1566:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 711,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:14:4"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1623:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "1603:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 715,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 714,
														"name": "AddressSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 700,
														"src": "1603:11:4"
													},
													"referencedDeclaration": 700,
													"src": "1603:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$700_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1602:23:4"
									},
									"scope": 754,
									"src": "1542:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "1871:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1890:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1904:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "1914:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 727,
														"isOffset": false,
														"isSlot": true,
														"src": "1904:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 723,
														"isOffset": false,
														"isSlot": false,
														"src": "1914:4:4",
														"valueSize": 1
													}
												],
												"id": 729,
												"nodeType": "InlineAssembly",
												"src": "1881:47:4"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "1695:87:4",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1796:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1819:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1811:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1810:14:4"
									},
									"returnParameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1868:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "1848:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 726,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 725,
														"name": "BooleanSlot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 703,
														"src": "1848:11:4"
													},
													"referencedDeclaration": 703,
													"src": "1848:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$703_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:23:4"
									},
									"scope": 754,
									"src": "1787:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "2116:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2135:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2149:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2159:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 738,
														"isOffset": false,
														"isSlot": true,
														"src": "2149:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 734,
														"isOffset": false,
														"isSlot": false,
														"src": "2159:4:4",
														"valueSize": 1
													}
												],
												"id": 740,
												"nodeType": "InlineAssembly",
												"src": "2126:47:4"
											}
										]
									},
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "1940:87:4",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2041:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2064:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2056:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 733,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:14:4"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2113:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2093:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$706_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 736,
														"name": "Bytes32Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 706,
														"src": "2093:11:4"
													},
													"referencedDeclaration": 706,
													"src": "2093:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$706_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:23:4"
									},
									"scope": 754,
									"src": "2032:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "2361:63:4",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2380:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2394:14:4",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "2404:4:4"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 749,
														"isOffset": false,
														"isSlot": true,
														"src": "2394:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 745,
														"isOffset": false,
														"isSlot": false,
														"src": "2404:4:4",
														"valueSize": 1
													}
												],
												"id": 751,
												"nodeType": "InlineAssembly",
												"src": "2371:47:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "2185:87:4",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2286:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2309:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2301:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 744,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:14:4"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2358:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "2338:21:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$709_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 748,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 747,
														"name": "Uint256Slot",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 709,
														"src": "2338:11:4"
													},
													"referencedDeclaration": 709,
													"src": "2338:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$709_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2337:23:4"
									},
									"scope": 754,
									"src": "2277:147:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 755,
							"src": "1207:1219:4"
						}
					],
					"src": "33:2393:4"
				},
				"id": 4
			},
			"contracts/NFTContract2/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "contracts/NFTContract2/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"Address": [
							295
						],
						"ERC1967Upgrade": [
							652
						],
						"IBeacon": [
							662
						],
						"StorageSlot": [
							754
						],
						"UUPSUpgradeable": [
							803
						]
					},
					"id": 804,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:5"
						},
						{
							"absolutePath": "contracts/NFTContract2/ERC1967Upgrade.sol",
							"file": "./ERC1967Upgrade.sol",
							"id": 757,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 804,
							"sourceUnit": 653,
							"src": "58:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 759,
										"name": "ERC1967Upgrade",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 652,
										"src": "553:14:5"
									},
									"id": 760,
									"nodeType": "InheritanceSpecifier",
									"src": "553:14:5"
								}
							],
							"contractDependencies": [
								652
							],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "90:425:5",
								"text": " @dev Base contract for building openzeppelin-upgrades compatible implementations for the {ERC1967Proxy}. It includes\n publicly available upgrade functions that are called by the plugin and by the secure upgrade mechanism to verify\n continuation of the upgradability.\n The {_authorizeUpgrade} function MUST be overridden to include access restriction to the upgrade mechanism.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 803,
							"linearizedBaseContracts": [
								803,
								652
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "534:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "637:123:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 766,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "665:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 765,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "647:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "647:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "647:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "717:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "",
																	"id": 773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "742:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	},
																	"value": ""
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																		"typeString": "literal_string \"\""
																	}
																],
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "736:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 771,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:5:5",
																	"typeDescriptions": {}
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "736:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "747:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 769,
														"name": "_upgradeToAndCallSecure",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "693:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "693:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "693:60:5"
											}
										]
									},
									"functionSelector": "3659cfe6",
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeTo",
									"nameLocation": "583:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "601:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "593:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:27:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "637:0:5"
									},
									"scope": 803,
									"src": "574:186:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "863:117:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 787,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "891:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 786,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "873:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "873:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "ExpressionStatement",
												"src": "873:36:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 791,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "943:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 792,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "962:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "74727565",
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "968:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 790,
														"name": "_upgradeToAndCallSecure",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 488,
														"src": "919:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (address,bytes memory,bool)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "919:54:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "919:54:5"
											}
										]
									},
									"functionSelector": "4f1ef286",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "775:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "800:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "792:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "792:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "832:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "819:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 782,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "819:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "791:46:5"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "863:0:5"
									},
									"scope": 803,
									"src": "766:214:5",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"id": 802,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "995:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1021:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "1013:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 798,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1013:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1012:27:5"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1056:0:5"
									},
									"scope": 803,
									"src": "986:71:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 804,
							"src": "516:543:5"
						}
					],
					"src": "33:1026:5"
				},
				"id": 5
			}
		}
	}
}